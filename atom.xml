<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tdmaker.github.io/faded/</id>
    <title>Typhoeus</title>
    <updated>2020-04-11T06:38:21.409Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tdmaker.github.io/faded/"/>
    <link rel="self" href="https://tdmaker.github.io/faded/atom.xml"/>
    <logo>https://tdmaker.github.io/faded/images/avatar.png</logo>
    <icon>https://tdmaker.github.io/faded/favicon.ico</icon>
    <rights>All rights reserved 2020, Typhoeus</rights>
    <entry>
        <title type="html"><![CDATA[笔算平方根]]></title>
        <id>https://tdmaker.github.io/faded/post/written-calculation-of-square-root/</id>
        <link href="https://tdmaker.github.io/faded/post/written-calculation-of-square-root/">
        </link>
        <updated>2020-04-11T06:09:07.000Z</updated>
        <content type="html"><![CDATA[<p>我以计算 2016 的算术平方根作为例子。全程用竖式计算。<br>
首先， 以小数点为基准，每两位数作为一组。像这样写：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586585643820.png" alt="" loading="lazy"></p>
<p>注意，平方根的两倍那个位置要往左边写一点，不然后面不够位置。接下来估算第一节，是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>20</mn></mrow><annotation encoding="application/x-tex">20</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>4</mn><mn>2</mn></msup><mo>&lt;</mo><mn>20</mn><mo>&lt;</mo><msup><mn>5</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">4^2 \lt 20 \lt 5^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.853208em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，所以在第一节的上面写上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>，对应的在左边写上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn></mrow><annotation encoding="application/x-tex">8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>4</mn><mn>2</mn></msup><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">4^2=16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span> 写到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>20</mn></mrow><annotation encoding="application/x-tex">20</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span></span></span></span> 的下面，减一下，把下一节拉下来：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586586062853.png" alt="" loading="lazy"></p>
<p>估计下一位的方法是： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn><mo>?</mo><mo>×</mo><mo>?</mo><mo>=</mo><mn>416</mn></mrow><annotation encoding="application/x-tex">8?\times?=416</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mclose">?</span><span class="mord">×</span><span class="mclose">?</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">1</span><span class="mord">6</span></span></span></span>。因为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>83</mn><mo>×</mo><mn>3</mn><mo>=</mo><mn>249</mn></mrow><annotation encoding="application/x-tex">83 \times 3=249</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord">9</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>84</mn><mo>×</mo><mn>4</mn><mo>=</mo><mn>336</mn></mrow><annotation encoding="application/x-tex">84 \times 4=336</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">3</span><span class="mord">6</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>85</mn><mo>×</mo><mn>5</mn><mo>=</mo><mn>425</mn></mrow><annotation encoding="application/x-tex">85 \times 5=425</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">2</span><span class="mord">5</span></span></span></span>， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>425</mn></mrow><annotation encoding="application/x-tex">425</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">2</span><span class="mord">5</span></span></span></span> 大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>416</mn></mrow><annotation encoding="application/x-tex">416</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">1</span><span class="mord">6</span></span></span></span> 了，所以下一位就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> 了，更新算式，把下一节拉下来：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586586335482.png" alt="" loading="lazy"></p>
<p>再估计下一位： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>88</mn><mo>?</mo><mo>×</mo><mo>?</mo><mo>=</mo><mn>8000</mn></mrow><annotation encoding="application/x-tex">88? \times ?=8000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">8</span><span class="mclose">?</span><span class="mord">×</span><span class="mclose">?</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>888</mn><mo>×</mo><mn>8</mn><mo>=</mo><mn>7104</mn></mrow><annotation encoding="application/x-tex">888 \times 8=7104</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">8</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">1</span><span class="mord">0</span><span class="mord">4</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>889</mn><mo>×</mo><mn>9</mn><mo>=</mo><mn>8001</mn></mrow><annotation encoding="application/x-tex">889 \times 9=8001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">8</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span>， 哎呀，差一点点，还是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn></mrow><annotation encoding="application/x-tex">8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> 吧：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586586557307.png" alt="" loading="lazy"><br>
下一位：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>896</mn><mo>?</mo><mo>×</mo><mo>?</mo><mo>=</mo><mn>89600</mn></mrow><annotation encoding="application/x-tex">896? \times ?=89600</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">6</span><span class="mclose">?</span><span class="mord">×</span><span class="mclose">?</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">6</span><span class="mord">0</span><span class="mord">0</span></span></span></span>， 由于刚才就差一点点，这次应该是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn></mrow><annotation encoding="application/x-tex">9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span> 了。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8969</mn><mo>×</mo><mn>9</mn><mo>=</mo><mn>80721</mn></mrow><annotation encoding="application/x-tex">8969 \times 9=80721</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">6</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">7</span><span class="mord">2</span><span class="mord">1</span></span></span></span>，没问题：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586586738767.png" alt="" loading="lazy"></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8978</mn><mo>?</mo><mo>×</mo><mo>?</mo><mo>=</mo><mn>887900</mn></mrow><annotation encoding="application/x-tex">8978? \times ?=887900</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">7</span><span class="mord">8</span><span class="mclose">?</span><span class="mord">×</span><span class="mclose">?</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">8</span><span class="mord">7</span><span class="mord">9</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，凭感觉应该还是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn></mrow><annotation encoding="application/x-tex">9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>89789</mn><mo>×</mo><mn>9</mn><mo>=</mo><mn>808101</mn></mrow><annotation encoding="application/x-tex">89789 \times 9=808101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">7</span><span class="mord">8</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">8</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，OK：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586586923209.png" alt="" loading="lazy"><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>89798</mn><mo>?</mo><mo>×</mo><mo>?</mo><mo>=</mo><mn>7979900</mn></mrow><annotation encoding="application/x-tex">89798? \times ?=7979900</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">7</span><span class="mord">9</span><span class="mord">8</span><span class="mclose">?</span><span class="mord">×</span><span class="mclose">?</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span><span class="mord">7</span><span class="mord">9</span><span class="mord">9</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，这回是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn></mrow><annotation encoding="application/x-tex">8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> 了。 不过我还是不写下去了, 因为示范了那么多步，大家应该知道步骤了吧？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[算法复杂度分析]]></title>
        <id>https://tdmaker.github.io/faded/post/algorithm-complexity-analysis/</id>
        <link href="https://tdmaker.github.io/faded/post/algorithm-complexity-analysis/">
        </link>
        <updated>2020-04-11T02:47:30.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><a href="https://www.cnblogs.com/gaochundong/p/complexity_of_algorithms.html">算法复杂度分析</a></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://www.cnblogs.com/gaochundong/p/complexity_of_algorithms.html">算法复杂度分析</a></p>
</blockquote>
<!-- more -->
<h1 id="为什么要进行算法分析">为什么要进行算法分析？</h1>
<ol>
<li>预测算法所需的资源
<ul>
<li>计算时间（CPU 消耗）</li>
<li>内存空间（RAM 消耗）</li>
<li>通信时间（带宽消耗）</li>
</ul>
</li>
<li>预测算法的运行时间
<ul>
<li>在给定输入规模时，所执行的基本操作数量。</li>
<li>或者称为算法复杂度（Algorithm Complexity）</li>
</ul>
</li>
</ol>
<h1 id="如何衡量算法复杂度">如何衡量算法复杂度？</h1>
<ol>
<li>内存（Memory）</li>
<li>时间（Time）</li>
<li>指令的数量（Number of Steps）</li>
<li>特定操作的数量
<ul>
<li>磁盘访问数量</li>
<li>网络包数量</li>
</ul>
</li>
<li>渐进复杂度（Asymptotic Complexity）</li>
</ol>
<h1 id="算法的运行时间与什么相关">算法的运行时间与什么相关？</h1>
<ol>
<li>取决于输入的数据。（例如：如果数据已经是排好序的，时间消耗可能会减少。）</li>
<li>取决于输入数据的规模。（例如：6 和 6 * 109）</li>
<li>取决于运行时间的上限。（因为运行时间的上限是对使用者的承诺。）</li>
</ol>
<h1 id="算法分析的种类">算法分析的种类：</h1>
<ul>
<li>最坏情况（Worst Case）：任意输入规模的最大运行时间。（Usually）</li>
<li>平均情况（Average Case）：任意输入规模的期待运行时间。（Sometimes）</li>
<li>最佳情况（Best Case）：通常最佳情况不会出现。（Bogus）</li>
</ul>
<p>例如，在一个长度为 n 的列表中顺序搜索指定的值，则</p>
<ul>
<li>最坏情况：n 次比较</li>
<li>平均情况：n/2 次比较</li>
<li>最佳情况：1 次比较</li>
</ul>
<p>而实际中，我们一般仅考量算法在最坏情况下的运行情况，也就是对于规模为 n 的任何输入，算法的最长运行时间。这样做的理由是：</p>
<ol>
<li>一个算法的最坏情况运行时间是在任何输入下运行时间的一个上界（Upper Bound）。</li>
<li>对于某些算法，最坏情况出现的较为频繁。</li>
<li>大体上看，平均情况通常与最坏情况一样差。</li>
</ol>
<p>算法分析要保持大局观（Big Idea），其基本思路：</p>
<ol>
<li>忽略掉那些依赖于机器的常量。</li>
<li>关注运行时间的增长趋势。</li>
</ol>
<p>比如：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mn>73</mn><msup><mi>n</mi><mn>3</mn></msup><mo>+</mo><mn>29</mn><msup><mi>n</mi><mn>3</mn></msup><mo>+</mo><mn>8888</mn></mrow><annotation encoding="application/x-tex">T(n) = 73n^3 + 29n^3 + 8888</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">3</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">9</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">8</span><span class="mord">8</span><span class="mord">8</span></span></span></span> 的趋势就相当于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n) = \Theta(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。<br>
渐近记号（Asymptotic Notation）通常有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span> 记号法。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span> 记号渐进地给出了一个函数的上界和下界，当只有渐近上界时使用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span> 记号，当只有渐近下界时使用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span> 记号。尽管技术上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span> 记号较为准确，但通常仍然使用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span> 记号表示。</p>
<p>使用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span> 记号法（Big O Notation）表示最坏运行情况的上界。例如，</p>
<ul>
<li>线性复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 表示每个元素都要被处理一次。</li>
<li>平方复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 表示每个元素都要被处理 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 次。</li>
</ul>
<table>
<thead>
<tr>
<th><strong>Notation</strong></th>
<th><strong>Intuition</strong></th>
<th><strong>Informal Definition</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>∈</mo><mi>O</mi><mo>(</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n) \in O(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> is bounded above by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span> asymptotically</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∣</mo><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>∣</mo><mo>≤</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>⋅</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\lvert f(n) \rvert \le g(n) \cdot k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∣</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>∈</mo><mi mathvariant="normal">Ω</mi><mo>(</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n) \in \Omega(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></td>
<td>Two definitions:  <br> Number theory: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> is not dominated by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span> asymptotically <br> Complexity theory: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> is bounded below by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span> asymptotically</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>≥</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>⋅</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">f(n) \ge g(n) \cdot k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>∈</mo><mi mathvariant="normal">Θ</mi><mo>(</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">f(n) \in \Theta(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> is bounded both above and below by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span> asymptotically</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>⋅</mo><msub><mi>k</mi><mn>1</mn></msub><mo>≤</mo><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>≤</mo><mi>g</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>⋅</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">g(n) \cdot k_1 \le f(n) \le g(n) \cdot k_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
</tr>
</tbody>
</table>
<p>例如：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n) = O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 等同于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>∈</mo><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n) \in O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n) = \Theta(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 等同于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>∈</mo><mi mathvariant="normal">Θ</mi><mo>(</mo><mi>n</mi><mn>3</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n) \in \Theta(n3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">3</span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<p>相当于:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 的渐近增长不快于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>。</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 的渐近增长与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span> 一样快。</li>
</ul>
<table>
<thead>
<tr>
<th><strong>复杂度</strong></th>
<th><strong>标记符号</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>常量（Constant）</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td>
<td>操作的数量为常数，与输入的数据的规模无关。<br> n = 1,000,000 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 1-2 operations</td>
</tr>
<tr>
<td>对数（Logarithmic）</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\log_{2}{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span><span class="mclose">)</span></span></span></span></td>
<td>操作的数量与输入数据的规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的比例是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">\log_{2}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span></span>。<br> n = 1,000,000 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 30 operations</td>
</tr>
<tr>
<td>线性（Linear）</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td>
<td>操作的数量与输入数据的规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 成正比。<br> n = 10,000 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 5000 operations</td>
</tr>
<tr>
<td>平方（Quadratic）</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td>操作的数量与输入数据的规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的比例为二次平方。<br> n = 500 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 250,000 operations</td>
</tr>
<tr>
<td>立方（Cubic）</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td>操作的数量与输入数据的规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的比例为三次方。<br> n = 200 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 8,000,000 operations</td>
</tr>
<tr>
<td>指数（Exponential）</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> <br> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>k</mi><mi>n</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(k^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> <br> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>!</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n!)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">!</span><span class="mclose">)</span></span></span></span></td>
<td>指数级的操作，快速的增长。<br> n = 20 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 1048576 operations</td>
</tr>
</tbody>
</table>
<p>注1：快速的数学回忆，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mi>a</mi></msub><mi>b</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\log_{a}{b} = y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> 其实就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mi>y</mi></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a^y = b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>。所以，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mn>4</mn><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\log_{2}{4} = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">4</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，因为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">2^2 = 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>。同样 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mn>8</mn><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\log_{2}{8} = 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">8</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，因为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">2^3 = 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span>。我们说，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">\log_{2}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span></span> 的增长速度要慢于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，因为当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">n = 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\log_{2}{n} = 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>。</p>
<p>注2：通常将以 10 为底的对数叫做常用对数。为了简便，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 的常用对数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mn>10</mn></msub><mi>N</mi></mrow><annotation encoding="application/x-tex">\log_{10}{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span> 简写做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lg</mi><mo>⁡</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\lg{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span>，例如 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mn>10</mn></msub><mn>5</mn></mrow><annotation encoding="application/x-tex">\log_{10}{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">5</span></span></span></span></span> 记做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lg</mi><mo>⁡</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">\lg{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">5</span></span></span></span></span>。</p>
<p>注3：通常将以无理数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span> 为底的对数叫做自然对数。为了方便，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 的自然对数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mo>⁡</mo><mi>e</mi></msub><mi>N</mi></mrow><annotation encoding="application/x-tex">\log_{e}{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span> 简写做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\ln{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></span>，例如 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>e</mi></msub><mn>3</mn></mrow><annotation encoding="application/x-tex">log_{e}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">3</span></span></span></span></span> 记做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\ln{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">3</span></span></span></span></span>。</p>
<p><strong>注4：在算法导论中，采用记号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>lg</mi><mo>⁡</mo><mi>n</mi><mo>=</mo><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">\lg{n} = \log_{2}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span></span> ，也就是以 2 为底的对数。改变一个对数的底只是把对数的值改变了一个常数倍，所以当不在意这些常数因子时，我们将经常采用 &quot;<code>lg n</code>&quot;记号，就像使用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span> 记号一样。计算机工作者常常认为对数的底取 2 最自然，因为很多算法和数据结构都涉及到对问题进行二分。</strong><br>
<img src="https://tdmaker.github.io/faded//post-images/1586577212150.png" alt="Big O Complexity" loading="lazy"></p>
<p>而通常时间复杂度与运行时间有一些常见的比例关系：</p>
<table>
<thead>
<tr>
<th><strong>复杂度</strong></th>
<th><strong>10</strong></th>
<th><strong>20</strong></th>
<th><strong>50</strong></th>
<th><strong>100</strong></th>
<th><strong>1000</strong></th>
<th><strong>10000</strong></th>
<th><strong>100000</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mrow><mo>(</mo><mi>n</mi><mo>)</mo></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\log_{2}{(n)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>∗</mo><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mrow><mo>(</mo><mi>n</mi><mo>)</mo></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n*\log_{2}{(n)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>2s</td>
<td>3-4 min</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>20s</td>
<td>5 hours</td>
<td>231 days</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>&lt;1s</td>
<td>260 days</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>!</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n!)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">!</span><span class="mclose">)</span></span></span></span></td>
<td>&lt;1s</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
</tr>
<tr>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mi>n</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td>3-4 min</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
<td>hangs</td>
</tr>
</tbody>
</table>
<p>计算代码块的渐进运行时间的方法有如下步骤：</p>
<ol>
<li>确定决定算法运行时间的组成步骤。</li>
<li>找到执行该步骤的代码，标记为 1。</li>
<li>查看标记为 1 的代码的下一行代码。如果下一行代码是一个循环，则将标记 1 修改为 1 倍于循环的次数 1 * n。如果包含多个嵌套的循环，则将继续计算倍数，例如 1 * n * m。</li>
<li>找到标记到的最大的值，就是运行时间的最大值，即算法复杂度描述的上界。</li>
</ol>
<h2 id="示例代码1">示例代码（1）：</h2>
<pre><code class="language-c">decimal Factorial(int n)
{
    if (n == 0)
        return 1;
    else
        return n * Factorial(n - 1);
}
</code></pre>
<p>阶乘（factorial），给定规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，算法基本步骤执行的数量为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，所以算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码2">示例代码（2）：</h2>
<pre><code class="language-c">int FindMaxElement(int[] array)
{
    int max = array[0];
    for (int i = 0; i &lt; array.Length; i++)
    {
        if (array[i] &gt; max)
        {
            max = array[i];
        }
    }
    return max;
}
</code></pre>
<p>这里，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 为数组 <code>array</code> 的大小，则最坏情况下需要比较 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 次以得到最大值，所以算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码3">示例代码（3）：</h2>
<pre><code class="language-c">long FindInversions(int[] array)
{
    long inversions = 0;
    for (int i = 0; i &lt; array.Length; i++)
        for (int j = i + 1; j &lt; array.Length; j++)
            if (array[i] &gt; array[j])
                inversions++;
    return inversions;
}
</code></pre>
<p>这里，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 为数组 <code>array</code> 的大小，则基本步骤的执行数量约为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">n \times \frac{n - 1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，所以算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码4">示例代码（4）：</h2>
<pre><code class="language-c">long SumMN(int n, int m)
{
    long sum = 0;
    for (int x = 0; x &lt; n; x++)
        for (int y = 0; y &lt; m; y++)
            sum += x * y;
    return sum;
}
</code></pre>
<p>给定规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>，则基本步骤的执行数量为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n \times m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>，所以算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码5">示例代码（5）：</h2>
<pre><code class="language-c">decimal Sum3(int n)
{
    decimal sum = 0;
    for (int a = 0; a &lt; n; a++)
        for (int b = 0; b &lt; n; b++)
            for (int c = 0; c &lt; n; c++)
                sum += a * b * c;
    return sum;
}
</code></pre>
<p>这里，给定规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，则基本步骤的执行数量约为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>n</mi><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \times n \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> ，所以算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码6">示例代码（6）：</h2>
<pre><code class="language-c">decimal Calculation(int n)
{
    decimal result = 0;
    for (int i = 0; i &lt; (1 &lt;&lt; n); i++)
        result += i;
    return result;
}
</code></pre>
<p>这里，给定规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，则基本步骤的执行数量为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>，所以算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码7">示例代码（7）：</h2>
<p>斐波那契数列：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mn>0</mn><mo>)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">fib(0) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mn>1</mn><mo>)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">fib(1) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">fib(n) = fib(n-1) + fib(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mo>)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>13</mn><mo separator="true">,</mo><mn>21</mn><mo separator="true">,</mo><mn>34...</mn></mrow><annotation encoding="application/x-tex">fib() = 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">4</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></li>
</ul>
<pre><code class="language-c">int Fibonacci(int n)
{
    if (n &lt;= 1)
        return n;
    else
        return Fibonacci(n - 1) + Fibonacci(n - 2);
}
</code></pre>
<p>这里，给定规模 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">fib(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 所需的时间为计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">fib(n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 的时间和计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>b</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">fib(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span> 的时间的和。</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>≤</mo><mn>1</mn><mo>)</mo><mo>=</mo><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n \le 1) = O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mi>T</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mi>T</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo>)</mo><mo>+</mo><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">T(n) = T(n-1) + T(n-2) + O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
</ul>
<pre><code>                     fib(5)   
                 /             \     
           fib(4)                fib(3)   
         /      \                /     \
     fib(3)      fib(2)         fib(2)    fib(1)
    /     \        /    \       /    \  
</code></pre>
<p>通过使用递归树的结构描述可知算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码8">示例代码（8）：</h2>
<pre><code class="language-c">int Fibonacci(int n)
{
    if (n &lt;= 1)
        return n;
    else
    {
        int[] f = new int[n + 1];
        f[0] = 0;
        f[1] = 1;
        for (int i = 2; i &lt;= n; i++)
        {
            f[i] = f[i - 1] + f[i - 2];
        }
        return f[n];
    }
}
</code></pre>
<p>同样是斐波那契数列，我们使用数组 <code>f</code> 来存储计算结果，这样算法复杂度优化为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码9">示例代码（9）：</h2>
<pre><code class="language-c">int Fibonacci(int n)
{
    if (n &lt;= 1)
        return n;
    else
    {
        int iter1 = 0;
        int iter2 = 1;
        int f = 0;

        for (int i = 2; i &lt;= n; i++)
        {
            f = iter1 + iter2;
            iter1 = iter2;
            iter2 = f;
        }
        return f;
    }
}
</code></pre>
<p>同样是斐波那契数列，由于实际只有前两个计算结果有用，我们可以使用中间变量来存储，这样就不用创建数组以节省空间。同样算法复杂度优化为 <code>O(n)</code>。</p>
<h2 id="示例代码10">示例代码（10）：</h2>
<p>通过使用矩阵乘方的算法来优化斐波那契数列算法。</p>
<pre><code class="language-c">static int Fibonacci(int n)
{
    if (n &lt;= 1)
        return n;

    int[,] f = { { 1, 1 }, { 1, 0 } };
    Power(f, n - 1);

    return f[0, 0];
}

static void Power(int[,] f, int n)
{
    if (n &lt;= 1)
        return;

    int[,] m = { { 1, 1 }, { 1, 0 } };

    Power(f, n / 2);
    Multiply(f, f);

    if (n % 2 != 0)
        Multiply(f, m);
}

static void Multiply(int[,] f, int[,] m)
{
    int x = f[0, 0] * m[0, 0] + f[0, 1] * m[1, 0];
    int y = f[0, 0] * m[0, 1] + f[0, 1] * m[1, 1];
    int z = f[1, 0] * m[0, 0] + f[1, 1] * m[1, 0];
    int w = f[1, 0] * m[0, 1] + f[1, 1] * m[1, 1];

    f[0, 0] = x;
    f[0, 1] = y;
    f[1, 0] = z;
    f[1, 1] = w;
}
</code></pre>
<p>优化之后算法复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\log_{2}{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="示例代码11">示例代码（11）：</h2>
<p>在 C# 中更简洁的代码如下。</p>
<pre><code class="language-csharp">static double Fibonacci(int n)
{
    double sqrt5 = Math.Sqrt(5);
    double phi = (1 + sqrt5) / 2.0;
    double fn = (Math.Pow(phi, n) - Math.Pow(1 - phi, n)) / sqrt5;
    return fn;
}
</code></pre>
<h2 id="示例代码12">示例代码（12）：</h2>
<p>插入排序的基本操作就是将一个数据插入到已经排好序的有序数据中，从而得到一个新的有序数据。算法适用于少量数据的排序，时间复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<pre><code class="language-csharp">private static void InsertionSortInPlace(int[] unsorted)
{
    for (int i = 1; i &lt; unsorted.Length; i++)
    {
        if (unsorted[i - 1] &gt; unsorted[i])
        {
            int key = unsorted[i];
            int j = i;
            while (j &gt; 0 &amp;&amp; unsorted[j - 1] &gt; key)
            {
                unsorted[j] = unsorted[j - 1];
                j--;
            }
            unsorted[j] = key;
        }
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一个漂亮的大 O 速查表]]></title>
        <id>https://tdmaker.github.io/faded/post/a-beautiful-big-o-cheatsheet/</id>
        <link href="https://tdmaker.github.io/faded/post/a-beautiful-big-o-cheatsheet/">
        </link>
        <updated>2020-04-11T02:33:25.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><a href="https://linux.cn/article-7480-1.html">每个程序员都应该收藏的算法复杂度速查表</a></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://linux.cn/article-7480-1.html">每个程序员都应该收藏的算法复杂度速查表</a></p>
</blockquote>
<!-- more -->
<h1 id="图例">图例</h1>
<table style="padding: 2px; width: 300px;" border="1" cellpadding="4">
<tbody>
<tr>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">绝佳</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">不错</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">一般</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">不佳</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">糟糕</td>
</tr>
</tbody>
</table>
<h1 id="数据结构操作">数据结构操作</h1>
<table style="padding: 2px; width: 760px;" border="1" cellpadding="4">
<thead>
<tr><th style="text-align: center;">数据结构</th><th style="text-align: center;" colspan="8">时间复杂度</th><th style="text-align: center;">空间复杂度</th></tr>
<tr><th style="text-align: center;">&nbsp;</th><th style="text-align: center;" colspan="4">平均</th><th style="text-align: center;" colspan="4">最差</th><th style="text-align: center;">最差</th></tr>
<tr><th>&nbsp;</th><th style="text-align: center;">访问</th><th style="text-align: center;">搜索</th><th style="text-align: center;">插入</th><th style="text-align: center;">删除</th><th style="text-align: center;">访问</th><th style="text-align: center;">搜索</th><th style="text-align: center;">插入</th><th style="text-align: center;">删除</th><th style="text-align: center;">&nbsp;</th></tr>
</thead>
<tbody>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Array_data_structure" target="_blank">Array</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Stack_(abstract_data_type)" target="_blank">Stack</a></td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Singly_linked_list#Singly_linked_lists" target="_blank">Singly-Linked List</a></td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Doubly_linked_list" target="_blank">Doubly-Linked List</a></td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Skip_list" target="_blank">Skip List</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Hash_table" target="_blank">Hash Table</a></td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Binary_search_tree" target="_blank">Binary Search Tree</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="https://en.wikipedia.org/wiki/Cartesian_tree" target="_blank">Cartesian Tree</a></td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/B_tree" target="_blank">B-Tree</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Red-black_tree" target="_blank">Red-Black Tree</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="https://en.wikipedia.org/wiki/Splay_tree" target="_blank">Splay Tree</a></td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/AVL_tree" target="_blank">AVL Tree</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
</tbody>
</table>
<h1 id="数组排序算法">数组排序算法</h1>
<table style="padding: 2px; width: 760px;" border="1" cellpadding="4">
<thead>
<tr><th style="text-align: center;">算法</th><th style="text-align: center;" colspan="3">时间复杂度</th><th style="text-align: center;">空间复杂度</th></tr>
<tr><th style="text-align: center;">&nbsp;</th><th style="text-align: center;">最佳</th><th style="text-align: center;">平均</th><th style="text-align: center;">最差</th><th style="text-align: center;">最差</th></tr>
</thead>
<tbody>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Quicksort" target="_blank">Quicksort</a></td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Merge_sort" target="_blank">Mergesort</a></td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Timsort" target="_blank">Timsort</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Heapsort" target="_blank">Heapsort</a></td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ffc543;">O(n log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Bubble_sort" target="_blank">Bubble Sort</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Insertion_sort" target="_blank">Insertion Sort</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Selection_sort" target="_blank">Selection Sort</a></td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Shellsort" target="_blank">Shell Sort</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O((nlog(n))^2)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O((nlog(n))^2)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
<tr>
<td><a title="Only for integers. k is a number of buckets" href="http://en.wikipedia.org/wiki/Bucket_sort" rel="external nofollow" class="ext" target="_blank">Bucket Sort</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(n+k)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(n+k)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n^2)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
</tr>
<tr>
<td><a title="Constant number of digits 'k'" href="http://en.wikipedia.org/wiki/Radix_sort" rel="external nofollow" class="ext" target="_blank">Radix Sort</a></td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(nk)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(nk)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(nk)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n+k)</td>
</tr>
</tbody>
</table>
<h1 id="图操作">图操作</h1>
<table style="padding: 2px; width: 760px;" border="1" cellpadding="4">
<tbody>
<tr><th style="text-align: center;">节点 / 边界管理</th><th style="text-align: center;">存储</th><th style="text-align: center;">增加顶点</th><th style="text-align: center;">增加边界</th><th style="text-align: center;">移除顶点</th><th style="text-align: center;">移除边界</th><th style="text-align: center;">查询</th></tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Adjacency_list" target="_blank">Adjacency list</a></td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|V|+|E|)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|V| + |E|)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|E|)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|V|)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Incidence_list" target="_blank">Incidence list</a></td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|V|+|E|)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|E|)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|E|)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|E|)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Adjacency_matrix" target="_blank">Adjacency matrix</a></td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V|^2)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V|^2)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V|^2)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Incidence_matrix" target="_blank">Incidence matrix</a></td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V| ⋅ |E|)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V| ⋅ |E|)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V| ⋅ |E|)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V| ⋅ |E|)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(|V| ⋅ |E|)</td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(|E|)</td>
</tr>
</tbody>
</table>
<h1 id="堆操作">堆操作</h1>
<table style="padding: 2px; width: 760px;" border="1" cellpadding="4">
<thead>
<tr><th style="text-align: center;">类型</th><th style="text-align: center;" colspan="7">时间复杂度</th></tr>
<tr><th style="text-align: center;">&nbsp;</th><th style="text-align: center;">Heapify</th><th style="text-align: center;">查找最大值</th><th style="text-align: center;">分离最大值</th><th style="text-align: center;">提升键</th><th style="text-align: center;">插入</th><th style="text-align: center;">删除</th><th style="text-align: center;">合并</th></tr>
</thead>
<tbody>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Linked_list" target="_blank">Linked List (sorted)</a></td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(m+n)</td>
</tr>
<tr>
<td style="white-space: normal;"><a href="http://en.wikipedia.org/wiki/Linked_list" target="_blank">Linked List (unsorted)</a></td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Binary_heap" target="_blank">Binary Heap</a></td>
<td style="text-align: center; padding: 2px; color: #6f6e00; background-color: #ff0;">O(n)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #b20000; background-color: #ff8989;">O(m+n)</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Binomial_heap" target="_blank">Binomial Heap</a></td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;" title="With aux pointer">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;" title="Amortized">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;">O(log(n))</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Fibonacci_heap" target="_blank">Fibonacci Heap</a></td>
<td style="text-align: center;">-</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;" title="Amortized">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;" title="Amortized">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #c8ea00;" title="Amortized">O(log(n))</td>
<td style="text-align: center; padding: 2px; color: #286500; background-color: #53d000;">O(1)</td>
</tr>
</tbody>
</table>
<h1 id="大-o-复杂度图表">大 O 复杂度图表</h1>
<figure data-type="image" tabindex="1"><img src="https://tdmaker.github.io/faded//post-images/1586572832652.png" alt="Big O Complexity Graph" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《雷神之锤 3》中的平方根算法]]></title>
        <id>https://tdmaker.github.io/faded/post/square-root-algorithm-in-quake-3/</id>
        <link href="https://tdmaker.github.io/faded/post/square-root-algorithm-in-quake-3/">
        </link>
        <updated>2020-04-11T01:59:15.000Z</updated>
        <content type="html"><![CDATA[<p>《雷神之锤 3》的作者是约翰卡马克，早前，《雷神之锤 3》的源码公开。卡马克大神有一段代码，简直是吊炸天。</p>
<pre><code class="language-c">float Q_rsqrt(float number)
{
    long i;
    float x2, y;
    const float threehalfs = 1.5F;
    x2 = number * 0.5F;
    y = number;
    i = *(long) &amp;y; // evil floating point bit level hacking
    i = 0x5f3759df - (i &gt;&gt; 1); // what the fuck?
    y= *(float*) &amp;i;
    y = y * (threehalfs - (x2 * y * y)); //1st iteration
    // y = y * (threehalfs - (x2 * y * y)); // 2nd iteration, this can be removed
    #ifndef Q_3VM
    #ifdef __linux__
    assert(!isnan(y)); //bk010122 - FPE?
    #endif
    #endif
    return y;
}
</code></pre>
<p>这段代码，据说主要用处是把一个数开平方并且取倒。经过测试之后，据说上面这段代码，尽然比 <code>(float)(1.0/sqrt(x))</code> 更快，而且是快 4 倍。</p>
<p>具体的实现过程比较复杂，下面是实现过程。</p>
<p>函数返回 <code>1 / sqr(x)</code>，这个函数在图像处理中比 <code>sqrt(x)</code> 更有用。<br>
注意到这个函数只用了一次迭代！（其实就是根本没用迭代，直接运算）。编译，实验，这个函数不仅工作的很好，而且比标准的 <code>sqrt()</code> 函数快 4 倍！要知道，编译器自带的函数，可是经过严格仔细的汇编优化的啊！<br>
这个简洁的函数，最核心，也是最让人费解的，就是标注了 &quot;what the fuck?&quot; 的一句<br>
<code>i = 0x5f3759df - (i &gt;&gt; 1);</code> 再加上 <code>y = y * ( threehalfs - (x2 * y * y));</code> 两句话就完成了开方运算!而且注意到，核心那句是定点移位运算，速度极快!特别在很多没有乘法指令的 <code>RISC</code>结构 CPU上，这样做是极其高效的。算法的原理其实不复杂就是牛顿迭代法用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>−</mo><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">x-f(x)f&#x27;(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 不断的逼近 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">f(x)=a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 的根。<br>
简单来说比如求平方根，<code>f(x) = x ^ 2 = a</code>，<code>f'(x) = 2 * x</code>，<code>f(x) / f'(x) = x / 2</code>， 把 <code>f(x)</code> 代入 <code>x - f(x) / f'(x)</code> 后有 <code>(x + a / x) / 2</code>，现在我们选 <code>a = 5</code>，选一个猜测值比如 2，<br>
那么我们可以这么算<br>
<code>5 / 2 = 2.5; (2.5 + 2) / 2 = 2.25; 5 / 2 .25 = xxx; (2.25 + xxx) / 2 = xxxx ...</code><br>
这样反复迭代下去，结果必定收敛于 <code>sqrt(5)</code>，没错，一般的求平方根都是这么算的<br>
但是卡马克（quake 3 作者）真正牛B的地方是他选择了一个神秘的常数 <code>0x5f3759df</code> 来计算那个猜测值<br>
就是我们加注释的那一行，那一行算出的值非常接近 <code>1 / sqrt(n)</code>，这样我们只需要 2 次牛顿迭代就可以达到我们所需要的精度。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim——常用命令大全]]></title>
        <id>https://tdmaker.github.io/faded/post/vim-common-commands/</id>
        <link href="https://tdmaker.github.io/faded/post/vim-common-commands/">
        </link>
        <updated>2020-04-09T08:15:20.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://blog.csdn.net/chenyoca/article/details/38844681">VIM快捷键大全</a></p>
</blockquote>
<h1 id="目录">目录</h1>
<h1 id="1-关于vim">1 关于VIM</h1>
<h2 id="11-vim-的几种模式">1.1 VIM 的几种模式</h2>
<ol>
<li>正常模式：可以使用快捷键命令，或按:输入命令行。</li>
<li>插入模式：可以输入文本，在正常模式下，按 <code>i</code>、<code>a</code>、<code>o</code> 等都可以进入插入模式。</li>
<li>可视模式：正常模式下按v可以进入可视模式， 在可视模式下，移动光标可以选择文本。按 V 进入可视行模式， 总是整行整行的选中。<code>ctrl+v</code> 进入可视块模式。</li>
<li>替换模式：正常模式下，按 <code>R</code> 进入。</li>
</ol>
<h1 id="2-启动vim">2 启动Vim</h1>
<ol>
<li><code>vim -c cmd file</code>: 在打开文件前，先执行指定的命令；</li>
<li><code>vim -r file</code>: 恢复上次异常退出的文件；</li>
<li><code>vim -R file</code>: 以只读的方式打开文件，但可以强制保存；</li>
<li><code>vim -M file</code>: 以只读的方式打开文件，不可以强制保存；</li>
<li><code>vim -y num file</code>: 将编辑窗口的大小设为 <code>num</code> 行；</li>
<li><code>vim + file</code>: 从文件的末尾开始；</li>
<li><code>vim +num file</code>: 从第<code>num</code>行开始；</li>
<li><code>vim +/string file</code>: 打开 <code>file</code>，并将光标停留在第一个找到的 <code>string</code> 上。</li>
<li><code>vim --remote file</code>: 用已有的 VIM 进程打开指定的文件。 如果你不想启用多个 VIM 会话，这个很有用。但要注意， 如果你用 VIM，会寻找名叫 VIM 的服务器；如果你已经有一个 <code>gvim</code> 在运行了， 你可以用 <code>gvim --remote file</code> 在已有的 <code>gvim p</code> 中打开文件。</li>
</ol>
<h1 id="3-文档操作">3 文档操作</h1>
<ol>
<li><code>:e file</code> --关闭当前编辑的文件，并开启新的文件。 如果对当前文件的修改未保存，<code>vi</code> 会警告。</li>
<li><code>:e! file</code> --放弃对当前文件的修改，编辑新的文件。</li>
<li><code>:e+file</code> -- 开始新的文件，并从文件尾开始编辑。</li>
<li><code>:e+n file</code> -- 开始新的文件，并从第 <code>n</code> 行开始编辑。</li>
<li><code>:enew</code> --编译一个未命名的新文档。(<code>CTRL-W n</code>)。</li>
<li><code>:e</code> -- 重新加载当前文档。</li>
<li><code>:e!</code> -- 重新加载当前文档，并丢弃已做的改动。</li>
<li><code>:e#或ctrl+^</code> -- 回到刚才编辑的文件，很实用。</li>
<li><code>:f或ctrl+g</code> -- 显示文档名，是否修改，和光标位置。</li>
<li><code>:f filename</code> -- 改变编辑的文件名，这时再保存相当于另存为。</li>
<li><code>gf</code> -- 打开以光标所在字符串为文件名的文件。</li>
<li><code>:w</code> -- 保存修改。</li>
<li><code>:n1,n2w filename</code> -- 选择性保存从某 <code>n1</code> 行到另 <code>n2</code> 行的内容。</li>
<li><code>:wq</code> -- 保存并退出。</li>
<li><code>ZZ</code> -- 保存并退出。</li>
<li><code>:x</code> -- 保存并退出。</li>
<li><code>:q[uit]</code> --退出当前窗口。(<code>CTRL-W q</code> 或 <code>CTRL-W CTRL-Q</code>)</li>
<li><code>:saveas newfilename</code> -- 另存为</li>
<li><code>:browse e</code> -- 会打开一个文件浏览器让你选择要编辑的文件。 如果是终端中，则会打开 <code>netrw</code> 的文件浏览窗口； 如果是 <code>gvim</code>，则会打开一个图形界面的浏览窗口。 实际上 <code>:browse</code> 后可以跟任何编辑文档的命令，如 <code>sp</code> 等。 用 <code>browse</code> 打开的起始目录可以由 <code>browsedir</code> 来设置：
<ul>
<li><code>:set browsedir=last</code> -- 用上次访问过的目录（默认）；</li>
<li><code>:set browsedir=buffer</code> -- 用当前文件所在目录；</li>
<li><code>:set browsedir=current</code> -- 用当前工作目录；</li>
</ul>
</li>
<li><code>:Sex</code> -- 水平分割一个窗口，浏览文件系统；</li>
<li><code>:Vex</code> -- 垂直分割一个窗口，浏览文件系统；</li>
</ol>
<h1 id="4-光标的移动">4 光标的移动</h1>
<h2 id="41-基本移动">4.1 基本移动</h2>
<p>以下移动都是在 <code>normal</code> 模式下。</p>
<ol>
<li><code>h</code> 或退格: 左移一个字符；</li>
<li><code>l</code> 或空格: 右移一个字符；</li>
<li><code>j</code>: 下移一行；</li>
<li><code>k</code>: 上移一行；</li>
<li><code>gj</code>: 移动到一段内的下一行；</li>
<li><code>gk</code>: 移动到一段内的上一行；</li>
<li><code>+</code> 或 <code>Enter</code>: 把光标移至下一行第一个非空白字符。</li>
<li><code>-</code>: 把光标移至上一行第一个非空白字符。</li>
<li><code>w</code>: 前移一个单词，光标停在下一个单词开头；</li>
<li><code>W</code>: 移动下一个单词开头，但忽略一些标点；</li>
<li><code>e</code>: 前移一个单词，光标停在下一个单词末尾；</li>
<li><code>E</code>: 移动到下一个单词末尾，如果词尾有标点，则移动到标点；</li>
<li><code>b</code>: 后移一个单词，光标停在上一个单词开头；</li>
<li><code>B</code>: 移动到上一个单词开头，忽略一些标点；</li>
<li><code>ge</code>: 后移一个单词，光标停在上一个单词末尾；</li>
<li><code>gE</code>: 同 <code>ge</code> ，不过‘单词’包含单词相邻的标点。</li>
<li><code>(</code>: 前移 1 句。</li>
<li><code>)</code>: 后移 1 句。</li>
<li><code>{</code>: 前移 1 段。</li>
<li><code>}</code>: 后移 1 段。</li>
<li><code>fc</code>: 把光标移到同一行的下一个 <code>c</code> 字符处</li>
<li><code>Fc</code>: 把光标移到同一行的上一个 <code>c</code> 字符处</li>
<li><code>tc</code>: 把光标移到同一行的下一个 <code>c</code> 字符前</li>
<li><code>Tc</code>: 把光标移到同一行的上一个 <code>c</code> 字符后</li>
<li><code>;</code>: 配合 <code>f &amp; t</code> 使用，重复一次</li>
<li><code>,</code>: 配合 <code>f &amp; t</code> 使用，反向重复一次</li>
</ol>
<p>上面的操作都可以配合 <code>n</code> 使用，比如在正常模式(下面会讲到)下输入 <code>3h</code>， 则光标向左移动 3 个字符。<br>
27. <code>0</code>: 移动到行首。<br>
28. <code>g0</code>: 移到光标所在屏幕行行首。<br>
29. <code>^</code>: 移动到本行第一个非空白字符。<br>
30. <code>g^</code>: 同 <code>^</code> ，但是移动到当前屏幕行第一个非空字符处。<br>
31. <code>$</code>: 移动到行尾。<br>
32. <code>g$</code>: 移动光标所在屏幕行行尾。<br>
33. <code>n|</code>: 把光标移到递 <code>n</code> 列上。<br>
34. <code>nG</code>: 到文件第 <code>n</code> 行。<br>
35. <code>:n</code> 移动到第 <code>n</code> 行。<br>
36. <code>:$</code> 移动到最后一行。<br>
37. <code>H</code>: 把光标移到屏幕最顶端一行。<br>
38. <code>M</code>: 把光标移到屏幕中间一行。<br>
39. <code>L</code>: 把光标移到屏幕最底端一行。<br>
40. <code>gg</code>: 到文件头部。<br>
41. <code>G</code>: 到文件尾部。</p>
<h2 id="42-翻屏">4.2 翻屏</h2>
<ol>
<li><code>ctrl+f</code>: 下翻一屏。</li>
<li><code>ctrl+b</code>: 上翻一屏。</li>
<li><code>ctrl+d</code>: 下翻半屏。</li>
<li><code>ctrl+u</code>: 上翻半屏。</li>
<li><code>ctrl+e</code>: 向下滚动一行。</li>
<li><code>ctrl+y</code>: 向上滚动一行。</li>
<li><code>n%</code>: 到文件 <code>n%</code> 的位置。</li>
<li><code>zz</code>: 将当前行移动到屏幕中央。</li>
<li><code>zt</code>: 将当前行移动到屏幕顶端。</li>
<li><code>zb</code>: 将当前行移动到屏幕底端。</li>
</ol>
<h2 id="43-标记">4.3 标记</h2>
<p>使用标记可以快速移动。到达标记后，可以用 <code>Ctrl+o</code> 返回原来的位置。<code>Ctrl+o</code> 和 <code>Ctrl+i</code> 很像浏览器上的 后退 和 前进 。</p>
<ol>
<li><code>m{a-z}</code>: 标记光标所在位置，局部标记，只用于当前文件。</li>
<li><code>m{A-Z}</code>: 标记光标所在位置，全局标记。标记之后，退出 VIM， 重新启动，标记仍然有效。</li>
<li><code>`{a-z}</code>: 移动到标记位置。</li>
<li><code>'{a-z}</code>: 移动到标记行的行首。</li>
<li><code>`{0-9}</code>：回到上 <code>[2-10]</code> 次关闭 VIM 时最后离开的位置。</li>
<li><code>``</code>: 移动到上次编辑的位置。<code>''</code> 也可以，不过 <code>``</code> 精确到列，而 <code>''</code> 精确到行 。如果想跳转到更老的位置，可以按 <code>C-o</code>，跳转到更新的位置用 <code>C-i</code>。</li>
<li><code>`&quot;</code>: 移动到上次离开的地方。</li>
<li><code>`.:</code> 移动到最后改动的地方。</li>
<li><code>:marks</code> 显示所有标记。</li>
<li><code>:delmarks a b</code> -- 删除标记 <code>a</code> 和 <code>b</code>。</li>
<li><code>:delmarks a-c</code> -- 删除标记 <code>a</code>、<code>b</code> 和 <code>c</code>。</li>
<li><code>:delmarks a c-f</code> -- 删除标记 <code>a</code>、<code>c</code>、<code>d</code>、<code>e</code>、<code>f</code>。</li>
<li><code>:delmarks!</code> -- 删除当前缓冲区的所有标记。</li>
<li><code>:help mark-motions</code> 查看更多关于 <code>mark</code> 的知识。</li>
</ol>
<h1 id="5-插入文本">5 插入文本</h1>
<h2 id="51-基本插入">5.1 基本插入</h2>
<ol>
<li><code>i</code>: 在光标前插入；一个小技巧：按 <code>8</code>，再按 <code>i</code>，进入插入模式，输入 <code>=</code>， 按 <code>esc</code> 进入命令模式，就会出现 <code>8</code> 个 <code>=</code>。 这在插入分割线时非常有用，如 <code>30i+</code> 就插入了 <code>36</code> 个 <code>+</code> 组成的分割线。</li>
<li><code>I</code>: 在当前行第一个非空字符前插入；</li>
<li><code>gI</code>: 在当前行第一列插入；</li>
<li><code>a</code>: 在光标后插入；</li>
<li><code>A</code>: 在当前行最后插入；</li>
<li><code>o</code>: 在下面新建一行插入；</li>
<li><code>O</code>: 在上面新建一行插入；</li>
<li><code>:r filename</code> 在当前位置插入另一个文件的内容。</li>
<li><code>:[n]r filename</code> 在第 <code>n</code> 行插入另一个文件的内容。</li>
<li><code>:r !date</code> 在光标处插入当前日期与时间。同理，<code>:r !command</code> 可以将其它 shell 命令的输出插入当前文档。</li>
</ol>
<h2 id="52-改写插入">5.2 改写插入</h2>
<ol>
<li><code>c[n]w</code>: 改写光标后 <code>1(n)</code> 个词。</li>
<li><code>c[n]l</code>: 改写光标后 <code>n</code> 个字母。</li>
<li><code>c[n]h</code>: 改写光标前 <code>n</code> 个字母。</li>
<li><code>[n]cc</code>: 修改当前 <code>[n]</code> 行。</li>
<li><code>[n]s</code>: 以输入的文本替代光标之后 <code>1(n)</code> 个字符，相当于 <code>c[n]l</code>。</li>
<li><code>[n]S</code>: 删除指定数目的行，并以所输入文本代替之。</li>
</ol>
<p>注意，类似 <code>cnw</code>，<code>dnw</code>，<code>ynw</code> 的形式同样可以写为 <code>ncw</code>，<code>ndw</code>，<code>nyw</code>。</p>
<h1 id="6-剪切复制和寄存器">6 剪切复制和寄存器</h1>
<h2 id="61-剪切和复制-粘贴">6.1 剪切和复制、粘贴</h2>
<ol>
<li><code>[n]x</code>: 剪切光标右边 <code>n</code> 个字符，相当于 <code>d[n]l</code>。</li>
<li><code>[n]X</code>: 剪切光标左边 <code>n</code> 个字符，相当于 <code>d[n]h</code>。</li>
<li><code>y</code>: 复制在可视模式下选中的文本。</li>
<li><code>yy or Y</code>: 复制整行文本。</li>
<li><code>y[n]w</code>: 复制一<code>(n)</code>个词。</li>
<li><code>y[n]l</code>: 复制光标右边<code>1(n)</code>个字符。</li>
<li><code>y[n]h</code>: 复制光标左边<code>1(n)</code>个字符。</li>
<li><code>y$</code>: 从光标当前位置复制到行尾。</li>
<li><code>y0</code>: 从光标当前位置复制到行首。</li>
<li><code>:m,ny</code> 复制 <code>m</code> 行到 <code>n</code> 行的内容。</li>
<li><code>y1G</code> 或 <code>ygg</code>: 复制光标以上的所有行。</li>
<li><code>yG</code>: 复制光标以下的所有行。</li>
<li><code>yaw</code> 和 <code>yas</code>：复制一个词和复制一个句子，即使光标不在词首和句首也没关系。</li>
<li><code>d</code>: 删除（剪切）在可视模式下选中的文本。</li>
<li><code>d$ or D</code>: 删除（剪切）当前位置到行尾的内容。</li>
<li><code>d[n]w</code>: 删除（剪切）<code>1(n)</code> 个单词。</li>
<li><code>d[n]l</code>: 删除（剪切）光标右边 <code>1(n)</code> 个字符。</li>
<li><code>d[n]h</code>: 删除（剪切）光标左边 <code>1(n)</code> 个字符。</li>
<li><code>d0</code>: 删除（剪切）当前位置到行首的内容。</li>
<li><code>[n] dd</code>: 删除（剪切）<code>1(n)</code> 行。</li>
<li><code>:m,nd</code> 剪切 <code>m</code> 行到 <code>n</code> 行的内容。</li>
<li><code>d1G</code> 或 <code>dgg</code>: 剪切光标以上的所有行。</li>
<li><code>dG</code>: 剪切光标以下的所有行。</li>
<li><code>daw</code> 和 <code>das</code>：剪切一个词和剪切一个句子，即使光标不在词首和句首也没关系。</li>
<li><code>d/f</code>：这是一个比较高级的组合命令，它将删除当前位置 到下一个 <code>f</code> 之间的内容。</li>
<li><code>p</code>: 在光标之后粘贴。</li>
<li><code>P</code>: 在光标之前粘贴。</li>
</ol>
<h2 id="62-文本对象">6.2 文本对象</h2>
<ol>
<li><code>aw</code>：一个词</li>
<li><code>as</code>：一句。</li>
<li><code>ap</code>：一段。</li>
<li><code>ab</code>：一块（包含在圆括号中的）。</li>
</ol>
<p><code>y</code>，<code>d</code>，<code>c</code>，<code>v</code> 都可以跟文本对象。</p>
<h2 id="63-寄存器">6.3 寄存器</h2>
<ol>
<li><code>a-z</code>：都可以用作寄存器名。<code>&quot;ayy</code> 把当前行的内容放入 <code>a</code> 寄存器。</li>
<li><code>A-Z</code>：用大写字母索引寄存器，可以在寄存器中追加内容。 如 <code>&quot;Ayy</code> 把当前行的内容追加到 <code>a</code> 寄存器中。</li>
<li><code>:reg</code> 显示所有寄存器的内容。</li>
<li><code>&quot;&quot;</code>：不加寄存器索引时，默认使用的寄存器。</li>
<li><code>&quot;*</code>：当前选择缓冲区，<code>&quot;*yy</code> 把当前行的内容放入当前选择缓冲区。</li>
<li><code>&quot;+</code>：系统剪贴板。<code>&quot;+yy</code> 把当前行的内容放入系统剪贴板。</li>
</ol>
<h1 id="7-查找与替换">7 查找与替换</h1>
<h2 id="71-查找">7.1 查找</h2>
<ol>
<li><code>/something</code>: 在后面的文本中查找 <code>something</code>。</li>
<li><code>?something</code>: 在前面的文本中查找 <code>something</code>。</li>
<li><code>/pattern/+number</code>: 将光标停在包含 <code>pattern</code> 的行后面第 <code>number</code> 行上。</li>
<li><code>/pattern/-number</code>: 将光标停在包含 <code>pattern</code> 的行前面第 <code>number</code> 行上。</li>
<li><code>n</code>: 向后查找下一个。</li>
<li><code>N</code>: 向前查找下一个。</li>
</ol>
<p>可以用 <code>grep</code> 或 <code>vimgrep</code> 查找一个模式都在哪些地方出现过，其中: <code>grep</code> 是调用外部的 <code>grep</code> 程序，而 <code>:vimgrep</code> 是 VIM 自己的查找算法。用法为：<code>:vim[grep]/pattern/[g] [j] files</code></p>
<p><code>g</code> 的含义是如果一个模式在一行中多次出现，则这一行也在结果中多次出现。<code>j</code> 的含义是 <code>grep</code> 结束后，结果停在第 <code>j</code> 项，默认是停在第一项。<code>vimgrep</code> 前面可以加数字限定搜索结果的上限，如<br>
<code>:1vim/pattern/ %</code> 只查找那个模式在本文件中的第一个出现。</p>
<p>其实 <code>vimgrep</code> 在读纯文本电子书时特别有用，可以生成导航的目录。比如电子书中每一节的标题形式为：<code>n. xxxx</code>。你就可以这样：<code>:vim/^d{1,}./ %</code> 然后用 <code>:cw</code> 或 <code>:copen</code> 查看结果，可以用 <code>C-w H</code> 把 <code>quickfix</code> 窗口移到左侧，就更像个目录了。</p>
<h2 id="72-替换">7.2 替换</h2>
<ol>
<li><code>:s/old/new</code> - 用 <code>new</code> 替换当前行第一个 <code>old</code>。</li>
<li><code>:s/old/new/g</code> - 用 <code>new</code> 替换当前行所有的 <code>old</code>。</li>
<li><code>:n1,n2s/old/new/g</code> - 用 <code>new</code> 替换文件 <code>n1</code> 行到 <code>n2</code> 行所有的 <code>old</code>。</li>
<li><code>:%s/old/new/g</code> - 用 <code>new</code> 替换文件中所有的 <code>old</code>。</li>
<li><code>:%s/^/xxx/g</code> - 在每一行的行首插入 <code>xxx</code>，<code>^</code> 表示行首。</li>
<li><code>:%s/$/xxx/g</code> - 在每一行的行尾插入 <code>xxx</code>，<code>$</code> 表示行尾。</li>
<li>所有替换命令末尾加上 <code>c</code>，每个替换都将需要用户确认。 如：<code>%s/old/new/gc</code>，加上 <code>i</code> 则忽略大小写(ignore)。</li>
</ol>
<p>还有一种比替换更灵活的方式，它是匹配到某个模式后执行某种命令，<br>
语法为 <code>:[range]g/pattern/command</code><br>
例如 <code>:%g/^ xyz/normal dd</code>。<br>
表示对于以一个空格和 <code>xyz</code> 开头的行执行 <code>normal</code> 模式下的 <code>dd</code> 命令。<br>
关于 <code>range</code> 的规定为：</p>
<p>如果不指定 <code>range</code>，则表示当前行。</p>
<ul>
<li><code>m,n</code>: 从 <code>m</code> 行到 <code>n</code> 行。</li>
<li><code>0</code>: 最开始一行（可能是这样）。</li>
<li><code>$</code>: 最后一行</li>
<li><code>.</code>: 当前行</li>
<li><code>%</code>: 所有行</li>
</ul>
<h2 id="73-正则表达式">7.3 正则表达式</h2>
<p>高级的查找替换就要用到正则表达式。</p>
<ol>
<li><code>\d</code>: 表示十进制数（我猜的）</li>
<li><code>\s</code>: 表示空格</li>
<li><code>\S</code>: 非空字符</li>
<li><code>\a</code>: 英文字母</li>
<li><code>\|</code>: 表示 或</li>
<li><code>\.</code>: 表示.</li>
<li><code>{m,n}</code>: 表示 <code>m</code> 到 <code>n</code> 个字符。这要和 <code>\s</code> 与 <code>\a</code> 等连用，如 <code>\a\{m,n}</code> 表示 <code>m</code> 到 <code>n</code> 个英文字母。</li>
<li><code>{m,}</code>: 表示 <code>m</code> 到无限多个字符。</li>
<li><code>**</code>: 当前目录下的所有子目录。</li>
<li><code>:help pattern</code> 得到更多帮助。</li>
</ol>
<h1 id="8-排版">8 排版</h1>
<h2 id="81-基本排版">8.1 基本排版</h2>
<ol>
<li><code>&lt;&lt;</code> 向左缩进一个 shiftwidth</li>
<li><code>&gt;&gt;</code> 向右缩进一个 shiftwidth</li>
<li><code>:ce(nter)</code> 本行文字居中</li>
<li><code>:le(ft)</code> 本行文字靠左</li>
<li><code>:ri(ght)</code> 本行文字靠右</li>
<li><code>gq</code> 对选中的文字重排，即对过长的文字进行断行</li>
<li><code>gqq</code> 重排当前行</li>
<li><code>gqnq</code> 重排 <code>n</code> 行</li>
<li><code>gqap</code> 重排当前段</li>
<li><code>gqnap</code> 重排 <code>n</code> 段</li>
<li><code>gqnj</code> 重排当前行和下面 <code>n</code> 行</li>
<li><code>gqQ</code> 重排当前段对文章末尾</li>
<li><code>J</code> 拼接当前行和下一行</li>
<li><code>gJ</code> 同 <code>J</code>，不过合并后不留空格。</li>
</ol>
<h2 id="82-拼写检查">8.2 拼写检查</h2>
<ol>
<li><code>:set spell</code>－开启拼写检查功能</li>
<li><code>:set nospell</code>－关闭拼写检查功能</li>
<li><code>]s</code>－移到下一个拼写错误的单词</li>
<li><code>[s</code>－作用与上一命令类似，但它是从相反方向进行搜索</li>
<li><code>z=</code>－显示一个有关拼写错误单词的列表，可从中选择</li>
<li><code>zg</code>－告诉拼写检查器该单词是拼写正确的</li>
<li><code>zw</code>－与上一命令相反，告诉拼写检查器该单词是拼写错误的</li>
</ol>
<h2 id="83-统计字数">8.3 统计字数</h2>
<p><code>g ^g</code> 可以统计文档字符数，行数。 将光标放在最后一个字符上，用字符数减去行数可以粗略统计中文文档的字数。 以上对 <code>Mac</code> 或 <code>Unix</code> 的文件格式适用。 如果是 <code>Windows</code> 文件格式（即换行符有两个字节），字数的统计方法为：<code>字符数 - 行数 * 2</code>。</p>
<h1 id="9-编辑多个文件">9 编辑多个文件</h1>
<h2 id="91-一次编辑多个文件">9.1 一次编辑多个文件</h2>
<p>我们可以一次打开多个文件，如</p>
<pre><code class="language-bash">vi a.txt b.txt c.txt
</code></pre>
<ol>
<li>使用 <code>:next(:n)</code> 编辑下一个文件。</li>
<li><code>:2n</code> 编辑下 2 个文件。</li>
<li>使用 <code>:previous</code> 或 <code>:N</code> 编辑上一个文件。</li>
<li>使用 <code>:wnext</code>，保存当前文件，并编辑下一个文件。</li>
<li>使用 <code>:wprevious</code>，保存当前文件，并编辑上一个文件。</li>
<li>使用 <code>:args</code> 显示文件列表。</li>
<li><code>:n filenames</code> 或 <code>:args filenames</code> 指定新的文件列表。</li>
<li><code>vi -o filenames</code> 在水平分割的多个窗口中编辑多个文件。</li>
<li><code>vi -O filenames</code> 在垂直分割的多个窗口中编辑多个文件。</li>
</ol>
<h2 id="92-多标签编辑">9.2 多标签编辑</h2>
<ol>
<li><code>vim -p files</code>: 打开多个文件，每个文件占用一个标签页。</li>
<li><code>:tabe, tabnew</code> -- 如果加文件名，就在新的标签中打开这个文件， 否则打开一个空缓冲区。</li>
<li><code>^w gf</code> -- 在新的标签页里打开光标下路径指定的文件。</li>
<li><code>:tabn</code> -- 切换到下一个标签。<code>Control + PageDown</code>，也可以。</li>
<li><code>:tabp</code> -- 切换到上一个标签。<code>Control + PageUp</code>，也可以。</li>
<li><code>[n] gt</code> -- 切换到下一个标签。如果前面加了 <code>n</code> ， 就切换到第 <code>n</code> 个标签。第一个标签的序号就是 1。</li>
<li><code>:tab split</code> -- 将当前缓冲区的内容在新页签中打开。</li>
<li><code>:tabc[lose]</code> -- 关闭当前的标签页。</li>
<li><code>:tabo[nly]</code> -- 关闭其它的标签页。</li>
<li><code>:tabs</code> -- 列出所有的标签页和它们包含的窗口。</li>
<li><code>:tabm[ove] [N]</code> -- 移动标签页，移动到第 <code>N</code> 个标签页之后。 如 <code>tabm 0</code> 当前标签页，就会变成第一个标签页。</li>
</ol>
<h2 id="93-缓冲区">9.3 缓冲区</h2>
<ol>
<li><code>:buffers</code> 或 <code>:ls</code> 或 <code>:files</code> 显示缓冲区列表。</li>
<li><code>ctrl+^</code>：在最近两个缓冲区间切换。</li>
<li><code>:bn</code> -- 下一个缓冲区。</li>
<li><code>:bp</code> -- 上一个缓冲区。</li>
<li><code>:bl</code> -- 最后一个缓冲区。</li>
<li><code>:b[n]</code> 或 <code>:[n]b</code> -- 切换到第 <code>n</code> 个缓冲区。</li>
<li><code>:nbw(ipeout)</code> -- 彻底删除第 <code>n</code> 个缓冲区。</li>
<li><code>:nbd(elete)</code> -- 删除第 <code>n</code> 个缓冲区，并未真正删除，还在 unlisted 列表中。</li>
<li><code>:ba[ll]</code> -- 把所有的缓冲区在当前页中打开，每个缓冲区占一个窗口。</li>
</ol>
<h1 id="10-分屏编辑">10 分屏编辑</h1>
<ol>
<li><code>vim -o file1 file2</code>: 水平分割窗口，同时打开 <code>file1</code> 和 <code>file2</code></li>
<li><code>vim -O file1 file2</code>: 垂直分割窗口，同时打开 <code>file1</code> 和 <code>file2</code></li>
</ol>
<h2 id="101-水平分割">10.1 水平分割</h2>
<ol>
<li><code>:split(:sp)</code> -- 把当前窗水平分割成两个窗口。(<code>CTRL-W s</code> 或 <code>CTRL-W CTRL-S</code>) 注意如果在终端下，<code>CTRL-S</code> 可能会冻结终端，请按 <code>CTRL-Q</code> 继续。</li>
<li><code>:split filename</code> -- 水平分割窗口，并在新窗口中显示另一个文件。</li>
<li><code>:nsplit(:nsp)</code> -- 水平分割出一个 <code>n</code> 行高的窗口</li>
<li><code>:[N]new</code> -- 水平分割出一个 <code>N</code> 行高的窗口，并编辑一个新文件。 (<code>CTRL-W n</code> 或 <code>CTRL-W CTRL-N</code>)</li>
<li><code>ctrl+w f</code> --水平分割出一个窗口，并在新窗口打开名称为光标所在词的文件 。</li>
<li><code>C-w C-^</code> -- 水平分割一个窗口，打开刚才编辑的文件。</li>
</ol>
<h2 id="102-垂直分割">10.2 垂直分割</h2>
<ol>
<li><code>:vsplit(:vsp)</code> -- 把当前窗口分割成水平分布的两个窗口。 (<code>CTRL-W v</code> 或 <code>CTRL CTRL-V</code>)</li>
<li><code>:[N]vne[w]</code> -- 垂直分割出一个新窗口。</li>
<li><code>:vertical</code> 水平分割的命令： 相应的垂直分割。</li>
</ol>
<h2 id="103-关闭子窗口">10.3 关闭子窗口</h2>
<ol>
<li><code>:qall</code> -- 关闭所有窗口，退出 VIM。</li>
<li><code>:wall</code> -- 保存所有修改过的窗口。</li>
<li><code>:only</code> -- 只保留当前窗口，关闭其它窗口。(<code>CTRL-W o</code>)</li>
<li><code>:close</code> -- 关闭当前窗口，<code>CTRL-W c</code> 能实现同样的功能。 (象 <code>:q :x</code> 同样工作 )</li>
</ol>
<h2 id="104-调整窗口大小">10.4 调整窗口大小</h2>
<ol>
<li><code>ctrl+w +</code> --当前窗口增高一行。也可以用 <code>n</code> 增高 <code>n</code> 行。</li>
<li><code>ctrl+w -</code> --当前窗口减小一行。也可以用 <code>n</code> 减小 <code>n</code> 行。</li>
<li><code>ctrl+w _</code> --当前窗口扩展到尽可能的大。也可以用 <code>n</code> 设定行数。</li>
<li><code>:resize n</code> -- 当前窗口 <code>n</code> 行高。</li>
<li><code>ctrl+w =</code> -- 所有窗口同样高度。</li>
<li><code>n ctrl+w _</code> -- 当前窗口的高度设定为 <code>n</code> 行。</li>
<li><code>ctrl+w &lt;</code> --当前窗口减少一列。也可以用 <code>n</code> 减少 <code>n</code> 列。</li>
<li><code>ctrl+w &gt;</code> --当前窗口增宽一列。也可以用 <code>n</code> 增宽 <code>n</code> 列。</li>
<li><code>ctrl+w |</code> --当前窗口尽可能的宽。也可以用 <code>n</code> 设定列数。</li>
</ol>
<h2 id="105-切换和移动窗口">10.5 切换和移动窗口</h2>
<p>如果支持鼠标，切换和调整子窗口的大小就简单了。</p>
<ol>
<li><code>ctrl+w ctrl+w</code>: 切换到下一个窗口。或者是 <code>ctrl+w w</code>。</li>
<li><code>ctrl+w p</code>: 切换到前一个窗口。</li>
<li><code>ctrl+w h(l,j,k)</code>:切换到左（右，下，上）的窗口。</li>
<li><code>ctrl+w t(b)</code>:切换到最上（下）面的窗口。</li>
<li><code>ctrl+w H(L,K,J)</code>: 将当前窗口移动到最左（右、上、下）面。</li>
<li><code>ctrl+w r</code>：旋转窗口的位置。</li>
<li><code>ctrl+w T</code>: 将当前的窗口移动到新的标签页上。</li>
</ol>
<h1 id="11-快速编辑">11 快速编辑</h1>
<h2 id="111-改变大小写">11.1 改变大小写</h2>
<ol>
<li><code>~</code>: 反转光标所在字符的大小写。</li>
<li>可视模式下的 <code>U</code> 或 <code>u</code>：把选中的文本变为大写或小写。</li>
<li><code>gu(U)</code> 接范围（如 <code>$</code>，或 <code>G</code>），可以把从光标当前位置到指定位置之间字母全部转换成小写或大写。如 <code>ggguG</code>，就是把开头到最后一行之间的字母全部变为小 写。再如 <code>gu5j</code>，把当前行和下面四行全部变成小写。</li>
</ol>
<h2 id="112-替换normal模式">11.2 替换（normal模式）</h2>
<ol>
<li><code>r</code>: 替换光标处的字符，同样支持汉字。</li>
<li><code>R</code>: 进入替换模式，按 <code>esc</code> 回到正常模式。</li>
</ol>
<h2 id="113-撤消与重做normal模式">11.3 撤消与重做（normal模式）</h2>
<ol>
<li><code>[n] u</code>: 取消一 (n) 个改动。</li>
<li><code>:undo 5</code> -- 撤销 5 个改变。</li>
<li><code>:undolist</code> -- 你的撤销历史。</li>
<li><code>ctrl + r</code>: 重做最后的改动。</li>
<li><code>U</code>: 取消当前行中所有的改动。</li>
<li><code>:earlier 4m</code> -- 回到 4 分钟前</li>
<li><code>:later 55s</code> -- 前进 55 秒</li>
</ol>
<h2 id="114-宏">11.4 宏</h2>
<ol>
<li><code>.</code> --重复上一个编辑动作</li>
<li><code>qa</code>：开始录制宏 <code>a</code>（键盘操作记录）</li>
<li><code>q</code>：停止录制</li>
<li><code>@a</code>：播放宏 <code>a</code></li>
</ol>
<h1 id="12-编辑特殊文件">12 编辑特殊文件</h1>
<h2 id="121-文件加解密">12.1 文件加解密</h2>
<ol>
<li><code>vim -x file</code>: 开始编辑一个加密的文件。</li>
<li><code>:X</code> -- 为当前文件设置密码。</li>
<li><code>:set key=</code> -- 去除文件的密码。</li>
</ol>
<h2 id="122-文件的编码">12.2 文件的编码</h2>
<ol>
<li><code>:e ++enc=utf8 filename</code>, 让 VIM 用 <code>utf-8</code> 的编码打开这个文件。</li>
<li><code>:w ++enc=gbk</code>，不管当前文件什么编码，把它转存成 <code>gbk</code> 编码。</li>
<li><code>:set fenc</code> 或 <code>:set fileencoding</code>，查看当前文件的编码。</li>
<li>在 <code>vimrc</code> 中添加 <code>set fileencoding=ucs-bom,utf-8,cp936</code>，VIM 会根据要打开的文件选择合适的编码。 注意：编码之间不要留空格。<code>cp936</code> 对应于 <code>gbk</code> 编码。<code>ucs-bom</code> 对应于 <code>Windows</code> 下的文件格式。</li>
</ol>
<p>让 VIM 正确处理文件格式和文件编码，有赖于 <code>~/.vimrc</code> 的正确配置</p>
<h2 id="123-文件格式">12.3 文件格式</h2>
<p>大致有三种文件格式：<code>unix</code>，<code>dos</code>，<code>mac</code>。 三种格式的区别主要在于回车键的编码：<code>dos</code> 下是回车加换行，<code>unix</code> 下只有换行符，<code>mac</code> 下只有回车符。</p>
<ol>
<li><code>:e ++ff=dos filename</code>, 让 VIM 用 <code>dos</code> 格式打开这个文件。</li>
<li><code>:w ++ff=mac filename</code>, 以 <code>mac</code> 格式存储这个文件。</li>
<li><code>:set ff</code>，显示当前文件的格式。</li>
<li>在 <code>vimrc</code> 中添加 <code>set fileformats=unix,dos,mac</code>，让 VIM 自动识别文件格式。</li>
</ol>
<h1 id="13-编程辅助">13 编程辅助</h1>
<h2 id="131-一些按键">13.1 一些按键</h2>
<ol>
<li><code>gd</code>: 跳转到局部变量的定义处；</li>
<li><code>gD</code>: 跳转到全局变量的定义处，从当前文件开头开始搜索；</li>
<li><code>g;</code>: 上一个修改过的地方；</li>
<li><code>g,</code>: 下一个修改过的地方；</li>
<li><code>[[</code>: 跳转到上一个函数块开始，需要有单独一行的 <code>{</code>。</li>
<li><code>]]</code>: 跳转到下一个函数块开始，需要有单独一行的 <code>{</code>。</li>
<li><code>[]</code>: 跳转到上一个函数块结束，需要有单独一行的 <code>}</code>。</li>
<li><code>][</code>: 跳转到下一个函数块结束，需要有单独一行的 <code>}</code>。</li>
<li><code>[{</code>: 跳转到当前块开始处；</li>
<li><code>]}</code>: 跳转到当前块结束处；</li>
<li><code>[/</code>: 跳转到当前注释块开始处；</li>
<li><code>]/</code>: 跳转到当前注释块结束处；</li>
<li><code>%</code>: 不仅能移动到匹配的 <code>()</code>,<code>{}</code> 或 <code>[]</code> 上，而且能在 <code>#if</code>，<code>#else</code>，<code>#endif</code> 之间跳跃。</li>
</ol>
<p>下面的括号匹配对编程很实用的。</p>
<ol>
<li><code>ci', di', yi'</code>：修改、剪切或复制 <code>'</code> 之间的内容。</li>
<li><code>ca', da', ya'</code>：修改、剪切或复制'之间的内容，包含 <code>'</code>。</li>
<li><code>ci&quot;, di&quot;, yi&quot;</code>：修改、剪切或复制 <code>&quot;</code> 之间的内容。</li>
<li><code>ca&quot;, da&quot;, ya&quot;</code>：修改、剪切或复制 <code>&quot;</code> 之间的内容，包含 <code>&quot;</code>。</li>
<li><code>ci(, di(, yi(</code>：修改、剪切或复制 <code>()</code> 之间的内容。</li>
<li><code>ca(, da(, ya(</code>：修改、剪切或复制 <code>()</code> 之间的内容，包含()。</li>
<li><code>ci[, di[, yi[</code>：修改、剪切或复制 <code>[]</code> 之间的内容。</li>
<li><code>ca[, da[, ya[</code>：修改、剪切或复制 <code>[]</code> 之间的内容，包含 <code>[]</code>。</li>
<li><code>ci{, di{, yi{</code>：修改、剪切或复制 <code>{}</code> 之间的内容。</li>
<li><code>ca{, da{, ya{</code>：修改、剪切或复制 <code>{}</code> 之间的内容，包含 <code>{}</code>。</li>
<li><code>ci&lt;, di&lt;, yi&lt;</code>：修改、剪切或复制 <code>&lt;&gt;</code> 之间的内容。</li>
<li><code>ca&lt;, da&lt;, ya&lt;</code>：修改、剪切或复制 <code>&lt;&gt;</code> 之间的内容，包含 <code>&lt;&gt;</code>。</li>
</ol>
<h2 id="132-ctags">13.2 ctags</h2>
<ol>
<li><code>ctags -R</code>: 生成 <code>tag</code> 文件，<code>-R</code> 表示也为子目录中的文件生成 <code>tags</code>。</li>
<li><code>:set tags=path/tags</code> -- 告诉 <code>ctags</code> 使用哪个 <code>tag</code> 文件。</li>
<li><code>:tag xyz</code> -- 跳到 <code>xyz</code> 的定义处，或者将光标放在 <code>xyz</code> 上按 <code>C-]</code>，返回用 <code>C-t</code></li>
<li><code>:stag xyz</code> -- 用分割的窗口显示 <code>xyz</code> 的定义，或者 <code>C-w ]</code>， 如果用 <code>C-w n ]</code>，就会打开一个 <code>n</code> 行高的窗口</li>
<li><code>:ptag xyz</code> -- 在预览窗口中打开 <code>xyz</code> 的定义，热键是 <code>C-w }</code>。</li>
<li><code>:pclose</code> -- 关闭预览窗口。热键是 <code>C-w z</code>。</li>
<li><code>:pedit abc.h</code> -- 在预览窗口中编辑 <code>abc.h</code></li>
<li><code>:psearch abc</code> -- 搜索当前文件和当前文件 include 的文件，显示包含 <code>abc</code> 的行。</li>
</ol>
<p>有时一个 <code>tag</code> 可能有多个匹配，如函数重载，一个函数名就会有多个匹配。 这种情况会先跳转到第一个匹配处。</p>
<ol>
<li><code>:[n]tnext</code> -- 下一 <code>[n]</code> 个匹配。</li>
<li><code>:[n]tprev</code> -- 上一 <code>[n]</code> 个匹配。</li>
<li><code>:tfirst</code> -- 第一个匹配</li>
<li><code>:tlast</code> -- 最后一个匹配</li>
<li><code>:tselect tagname</code> -- 打开选择列表</li>
</ol>
<p><code>tab</code> 键补齐</p>
<ol>
<li><code>:tag xyz</code>-- 补齐以 <code>xyz</code> 开头的 <code>tag</code> 名，继续按 <code>tab</code> 键，会显示其他的。</li>
<li><code>:tag /xyz</code>-- 会用名字中含有 <code>xyz</code> 的 <code>tag</code> 名补全。</li>
</ol>
<h2 id="133-cscope">13.3 cscope</h2>
<ol>
<li><code>cscope -Rbq</code>: 生成 <code>cscope.out</code> 文件</li>
<li><code>:cs add /path/to/cscope.out /your/work/dir</code></li>
<li><code>:cs find c func</code> -- 查找 <code>func</code> 在哪些地方被调用</li>
<li><code>:cw</code> -- 打开 <code>quickfix</code> 窗口查看结果</li>
</ol>
<h2 id="134-gtags">13.4 gtags</h2>
<p><code>Gtags</code> 综合了 <code>ctags</code> 和 <code>cscope</code> 的功能。 使用 <code>Gtags</code> 之前，你需要安装 <code>GNU Gtags</code>。 然后在工程目录运行 <code>gtags</code> 。</p>
<ol>
<li><code>:Gtags funcname</code> 定位到 <code>funcname</code> 的定义处。</li>
<li><code>:Gtags -r funcname</code> 查询 <code>funcname</code> 被引用的地方。</li>
<li><code>:Gtags -s symbol</code> 定位 <code>symbol</code> 出现的地方。</li>
<li><code>:Gtags -g string Goto string</code> 出现的地方。<code>:Gtags -gi string</code> 忽略大小写。</li>
<li><code>:Gtags -f filename</code> 显示 <code>filename</code> 中的函数列表。 你可以用 <code>:Gtags -f %</code> 显示当前文件。</li>
<li><code>:Gtags -P pattern</code> 显示路径中包含特定模式的文件。 如 <code>:Gtags -P .h$</code> 显示所有头文件，<code>:Gtags -P /vm/</code> 显示 <code>vm</code> 目录下的文件。</li>
</ol>
<h2 id="135-编译">13.5 编译</h2>
<p>VIM 提供了 <code>:make</code> 来编译程序，默认调用的是 <code>make</code>， 如果你当前目录下有 <code>makefile</code>，简单地 <code>:make</code> 即可。</p>
<p>如果你没有 <code>make</code> 程序，你可以通过配置 <code>makeprg</code> 选项来更改 <code>make</code> 调用的程序。 如果你只有一个<code>abc.java</code>文件，你可以这样设置：</p>
<pre><code class="language-bash">set makeprg=javac\ abc.java
</code></pre>
<p>然后 <code>:make</code> 即可。如果程序有错，可以通过 <code>quickfix</code> 窗口查看错误。 不过如果要正确定位错误，需要设置好 <code>errorformat</code>，让 VIM 识别错误信息。 如：</p>
<pre><code class="language-bash">:setl efm=%A%f:%l:\ %m,%-Z%p^,%-C%.%#
</code></pre>
<p><code>%f</code> 表示文件名，<code>%l</code> 表示行号，<code>%m</code> 表示错误信息，其它的还不能理解。 请参考 <code>:help errorformat</code>。</p>
<h2 id="136-快速修改窗口">13.6 快速修改窗口</h2>
<p>其实是 <code>quickfix</code> 插件提供的功能， 对编译调试程序非常有用 😃</p>
<ol>
<li><code>:copen</code> -- 打开快速修改窗口。</li>
<li><code>:cclose</code> -- 关闭快速修改窗口。</li>
</ol>
<p>快速修改窗口在 <code>make</code> 程序时非常有用，当 <code>make</code> 之后：</p>
<ol>
<li><code>:cl</code> -- 在快速修改窗口中列出错误。</li>
<li><code>:cn</code> -- 定位到下一个错误。</li>
<li><code>:cp</code> -- 定位到上一个错误。</li>
<li><code>:cr</code> -- 定位到第一个错误。</li>
</ol>
<h2 id="137-自动补全">13.7 自动补全</h2>
<ol>
<li><code>C-x C-s</code> -- 拼写建议。</li>
<li><code>C-x C-v</code> -- 补全 VIM 选项和命令。</li>
<li><code>C-x C-l</code> -- 整行补全。</li>
<li><code>C-x C-f</code> -- 自动补全文件路径。弹出菜单后，按 <code>C-f</code> 循环选择，当然也可以按 <code>C-n</code> 和 <code>C-p</code>。</li>
<li><code>C-x C-p</code> 和 <code>C-x C-n</code> -- 用文档中出现过的单词补全当前的词。 直接按 <code>C-p</code> 和 <code>C-n</code> 也可以。</li>
<li><code>C-x C-o</code> -- 编程时可以补全关键字和函数名啊。</li>
<li><code>C-x C-i</code> -- 根据头文件内关键字补全。</li>
<li><code>C-x C-d</code> -- 补全宏定义。</li>
<li><code>C-x C-n</code> -- 按缓冲区中出现过的关键字补全。 直接按 <code>C-n</code> 或 <code>C-p</code> 即可。</li>
</ol>
<p>当弹出补全菜单后：</p>
<ol>
<li><code>C-p</code> 向前切换成员；</li>
<li><code>C-n</code> 向后切换成员；</li>
<li><code>C-e</code> 退出下拉菜单，并退回到原来录入的文字；</li>
<li><code>C-y</code> 退出下拉菜单，并接受当前选项。</li>
</ol>
<h2 id="138-多行缩进缩出">13.8 多行缩进缩出</h2>
<ol>
<li>正常模式下，按两下 <code>&gt;;</code> 光标所在行会缩进。</li>
<li>如果先按了 <code>n</code>，再按两下 <code>&gt;;</code>，光标以下的 <code>n</code> 行会缩进。</li>
<li>对应的，按两下 <code>&lt;;</code>，光标所在行会缩出。</li>
<li>如果在编辑代码文件，可以用 <code>=</code> 进行调整。</li>
<li>在可视模式下，选择要调整的代码块，按 <code>=</code>，代码会按书写规则缩排好。</li>
<li>或者 <code>n =</code>，调整 <code>n</code> 行代码的缩排。</li>
</ol>
<h2 id="139-折叠">13.9 折叠</h2>
<ol>
<li><code>zf</code> -- 创建折叠的命令，可以在一个可视区域上使用该命令；</li>
<li><code>zd</code> -- 删除当前行的折叠；</li>
<li><code>zD</code> -- 删除当前行的折叠；</li>
<li><code>zfap</code> -- 折叠光标所在的段；</li>
<li><code>zo</code> -- 打开折叠的文本；</li>
<li><code>zc</code> -- 收起折叠；</li>
<li><code>za</code> -- 打开/关闭当前折叠；</li>
<li><code>zr</code> -- 打开嵌套的折行；</li>
<li><code>zm</code> -- 收起嵌套的折行；</li>
<li><code>zR (zO)</code> -- 打开所有折行；</li>
<li><code>zM (zC)</code> -- 收起所有折行；</li>
<li><code>zj</code> -- 跳到下一个折叠处；</li>
<li><code>zk</code> -- 跳到上一个折叠处；</li>
<li><code>zi</code> -- <code>enable/disable fold</code>;</li>
</ol>
<h1 id="14-命令行">14 命令行</h1>
<p><code>normal</code> 模式下按:进入命令行模式</p>
<h2 id="141-命令行模式下的快捷键">14.1 命令行模式下的快捷键：</h2>
<ol>
<li>上下方向键：上一条或者下一条命令。如果已经输入了部分命令，则找上一 条或者下一条匹配的命令。</li>
<li>左右方向键：左 / 右移一个字符。</li>
<li><code>C-w</code>： 向前删除一个单词。</li>
<li><code>C-h</code>： 向前删除一个字符，等同于 <code>Backspace</code>。</li>
<li><code>C-u</code>： 从当前位置移动到命令行开头。</li>
<li><code>C-b</code>： 移动到命令行开头。</li>
<li><code>C-e</code>： 移动到命令行末尾。</li>
<li><code>Shift-Left</code>：左移一个单词。</li>
<li><code>Shift-Right</code>：右移一个单词。</li>
<li><code>@</code>： 重复上一次的冒号命令。</li>
<li><code>q</code>： 正常模式下，<code>q</code> 然后按 <code>':'</code>，打开命令行历史缓冲区， 可以像编辑文件一样编辑命令。</li>
<li><code>q/</code> 和 <code>q?</code> 可以打开查找历史记录。</li>
</ol>
<h2 id="142-执行外部命令">14.2 执行外部命令</h2>
<ol>
<li><code>:! cmd</code> 执行外部命令。</li>
<li><code>:!!</code> 执行上一次的外部命令。</li>
<li><code>:sh</code> 调用 <code>shell</code>，用 <code>exit</code> 返回 VIM。</li>
<li><code>:r !cmd</code> 将命令的返回结果插入文件当前位置。</li>
<li><code>:m,nw !cmd</code> 将文件的 <code>m</code> 行到 <code>n</code> 行之间的内容做为命令输入执行命令。</li>
</ol>
<h1 id="15-其它">15 其它</h1>
<h2 id="151-工作目录">15.1 工作目录</h2>
<ol>
<li><code>:pwd</code> 显示 VIM 的工作目录。</li>
<li><code>:cd path</code> 改变 VIM 的工作目录。</li>
<li><code>:set autochdir</code> 可以让 VIM 根据编辑的文件自动切换工作目录。</li>
</ol>
<h2 id="152-一些快捷键收集中">15.2 一些快捷键（收集中）</h2>
<ol>
<li><code>K</code>: 打开光标所在词的 <code>manpage</code>。</li>
<li><code>*</code>: 向下搜索光标所在词。</li>
<li><code>g*</code>: 同上，但部分符合即可。</li>
<li><code>#</code>: 向上搜索光标所在词。</li>
<li><code>g#</code>: 同上，但部分符合即可。</li>
<li><code>g C-g</code>: 统计全文或统计部分的字数。</li>
</ol>
<h2 id="153-在线帮助">15.3 在线帮助</h2>
<ol>
<li><code>:h(elp)</code> 或 <code>F1</code> 打开总的帮助。</li>
<li><code>:help user-manual</code> 打开用户手册。</li>
<li>命令帮助的格式为：第一行指明怎么使用那个命令； 然后是缩进的一段解释这个命令的作用，然后是进一步的信息。</li>
<li><code>:helptags somepath</code> 为 <code>somepath</code> 中的文档生成索引。</li>
<li><code>:helpgrep</code> 可以搜索整个帮助文档，匹配的列表显示在 <code>quickfix</code> 窗口中。</li>
<li><code>Ctrl+]</code> 跳转到 <code>tag</code> 主题，<code>Ctrl+t</code> 跳回。</li>
<li><code>:ver</code> 显示版本信息。</li>
</ol>
<h2 id="154-一些小功能">15.4 一些小功能</h2>
<ul>
<li>简单计算器: 在插入模式下，输入 <code>C-r =</code>，然后输入表达式，就能在 光标处得到计算结果。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim——配置入门]]></title>
        <id>https://tdmaker.github.io/faded/post/vim-configuration-introduction/</id>
        <link href="https://tdmaker.github.io/faded/post/vim-configuration-introduction/">
        </link>
        <updated>2020-04-09T07:34:01.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><a href="http://www.ruanyifeng.com/blog/2018/09/vimrc.html">Vim 配置入门</a></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><a href="http://www.ruanyifeng.com/blog/2018/09/vimrc.html">Vim 配置入门</a></p>
</blockquote>
<!-- more -->
<p>Vim 的配置不太容易，它有自己的语法，许许多多的命令。我总是记不清楚，所以就整理了下面这篇文章，列出主要配置项的含义。</p>
<h1 id="1-基础知识">1 基础知识</h1>
<p>Vim 的全局配置一般在 <code>/etc/vim/vimrc</code> 或者 <code>/etc/vimrc</code>，对所有用户生效。用户个人的配置在 <code>~/.vimrc</code>。</p>
<p>如果只对单次编辑启用某个配置项，可以在命令模式下，先输入一个冒号，再输入配置。举例来说，<code>set number</code> 这个配置可以写在 <code>.vimrc</code> 里面，也可以在命令模式输入。</p>
<pre><code class="language-bash">:set number
</code></pre>
<p>配置项一般都有“打开”和“关闭”两个设置。“关闭”就是在“打开”前面加上前缀 &quot;no&quot;。</p>
<pre><code class="language-bash">&quot; 打开
set number

&quot; 关闭
set nonumber
</code></pre>
<p>上面代码中，双引号开始的行表示注释。</p>
<p>查询某个配置项是打开还是关闭，可以在命令模式下，输入该配置，并在后面加上问号。</p>
<pre><code class="language-vim">:set number?
</code></pre>
<p>上面的命令会返回 <code>number</code> 或者 <code>nonumber</code>。</p>
<p>如果想查看帮助，可以使用 <code>help</code> 命令。</p>
<pre><code class="language-vim">:help number
</code></pre>
<h1 id="2-基本配置">2 基本配置</h1>
<p>（1）</p>
<pre><code class="language-bash">set nocompatible
</code></pre>
<p>不与 Vi 兼容（采用 Vim 自己的操作命令）。</p>
<p>（2）</p>
<pre><code class="language-bash">syntax on
</code></pre>
<p>打开语法高亮。自动识别代码，使用多种颜色显示。</p>
<p>（3）</p>
<pre><code class="language-bash">set showmode
</code></pre>
<p>在底部显示，当前处于命令模式还是插入模式。</p>
<p>（4）</p>
<pre><code class="language-bash">set showcmd
</code></pre>
<p>命令模式下，在底部显示，当前键入的指令。比如，键入的指令是 <code>2y3d</code>，那么底部就会显示 <code>2y3</code>，当键入 <code>d</code> 的时候，操作完成，显示消失。</p>
<p>（5）</p>
<pre><code class="language-bash">set mouse=a
</code></pre>
<p>支持使用鼠标。<br>
（6）</p>
<pre><code class="language-bash">set encoding=utf-8  
</code></pre>
<p>使用 utf-8 编码。<br>
（7）</p>
<pre><code class="language-bash">set t_Co=256
</code></pre>
<p>启用256色。</p>
<p>（8）</p>
<pre><code class="language-bash">filetype indent on
</code></pre>
<p>开启文件类型检查，并且载入与该类型对应的缩进规则。比如，如果编辑的是 <code>.py</code> 文件，Vim 就是会找 Python 的缩进规则 <code>~/.vim/indent/python.vim</code>。</p>
<h1 id="3-缩进">3 缩进</h1>
<p>9）</p>
<pre><code class="language-bash">set autoindent
</code></pre>
<p>按下回车键后，下一行的缩进会自动跟上一行的缩进保持一致。</p>
<p>（10）</p>
<pre><code class="language-bash">set tabstop=2
</code></pre>
<p>按下 Tab 键时，Vim 显示的空格数。</p>
<p>（11）</p>
<pre><code class="language-bash">set shiftwidth=4
</code></pre>
<p>在文本上按下 <code>&gt;&gt;</code>（增加一级缩进）、<code>&lt;&lt;</code>（取消一级缩进）或者 <code>==</code>（取消全部缩进）时，每一级的字符数。</p>
<p>（12）</p>
<pre><code class="language-bash">set expandtab
</code></pre>
<p>由于 Tab 键在不同的编辑器缩进不一致，该设置自动将 Tab 转为空格。</p>
<p>（13）</p>
<pre><code class="language-bash">set softtabstop=2
</code></pre>
<p>Tab 转为多少个空格。</p>
<h1 id="4-外观">4 外观</h1>
<p>14）</p>
<pre><code class="language-bash">set number
</code></pre>
<p>显示行号</p>
<p>（15）</p>
<pre><code class="language-bash">set relativenumber
</code></pre>
<p>显示光标所在的当前行的行号，其他行都为相对于该行的相对行号。</p>
<p>（16）</p>
<pre><code class="language-bash">set cursorline
</code></pre>
<p>光标所在的当前行高亮。</p>
<p>（17）</p>
<pre><code class="language-bash">set textwidth=80
</code></pre>
<p>设置行宽，即一行显示多少个字符。</p>
<p>（18）</p>
<pre><code class="language-bash">set wrap
</code></pre>
<p>自动折行，即太长的行分成几行显示。</p>
<pre><code class="language-bash">set nowrap
</code></pre>
<p>关闭自动折行</p>
<p>（19）</p>
<pre><code class="language-bash">set linebreak
</code></pre>
<p>只有遇到指定的符号（比如空格、连词号和其他标点符号），才发生折行。也就是说，不会在单词内部折行。</p>
<p>（20）</p>
<pre><code class="language-bash">set wrapmargin=2
</code></pre>
<p>指定折行处与编辑窗口的右边缘之间空出的字符数。</p>
<p>（21）</p>
<pre><code class="language-bash">set scrolloff=5
</code></pre>
<p>垂直滚动时，光标距离顶部/底部的位置（单位：行）。</p>
<p>（22）</p>
<pre><code class="language-bash">set sidescrolloff=15
</code></pre>
<p>水平滚动时，光标距离行首或行尾的位置（单位：字符）。该配置在不折行时比较有用。</p>
<p>（23）</p>
<pre><code class="language-bash">set laststatus=2
</code></pre>
<p>是否显示状态栏。0 表示不显示，1 表示只在多窗口时显示，2 表示显示。</p>
<p>（24）</p>
<pre><code class="language-bash">set  ruler
</code></pre>
<p>在状态栏显示光标的当前位置（位于哪一行哪一列）。</p>
<h1 id="5-搜索">5 搜索</h1>
<p>25）</p>
<pre><code class="language-bash">set showmatch
</code></pre>
<p>光标遇到圆括号、方括号、大括号时，自动高亮对应的另一个圆括号、方括号和大括号。</p>
<p>（26）</p>
<pre><code class="language-bash">set hlsearch
</code></pre>
<p>搜索时，高亮显示匹配结果。</p>
<p>（27）</p>
<pre><code class="language-bash">set incsearch
</code></pre>
<p>输入搜索模式时，每输入一个字符，就自动跳到第一个匹配的结果。</p>
<p>（28）</p>
<pre><code class="language-bash">set ignorecase
</code></pre>
<p>搜索时忽略大小写。</p>
<p>（29）</p>
<pre><code class="language-bash">set smartcase
</code></pre>
<p>如果同时打开了 <code>ignorecase</code>，那么对于只有一个大写字母的搜索词，将大小写敏感；其他情况都是大小写不敏感。比如，搜索 <code>Test</code> 时，将不匹配 <code>test</code>；搜索 <code>test</code> 时，将匹配 <code>Test</code>。</p>
<h1 id="6-编辑">6 编辑</h1>
<p>30）</p>
<pre><code class="language-bash">set spell spelllang=en_us
</code></pre>
<p>打开英语单词的拼写检查。</p>
<p>（31）</p>
<pre><code class="language-bash">set nobackup
</code></pre>
<p>不创建备份文件。默认情况下，文件保存时，会额外创建一个备份文件，它的文件名是在原文件名的末尾，再添加一个波浪号（〜）。</p>
<p>（32）</p>
<pre><code class="language-bash">set noswapfile
</code></pre>
<p>不创建交换文件。交换文件主要用于系统崩溃时恢复文件，文件名的开头是 <code>.</code>、结尾是 <code>.swp</code>。</p>
<p>（33）</p>
<pre><code class="language-bash">set undofile
</code></pre>
<p>保留撤销历史。</p>
<p>Vim 会在编辑时保存操作历史，用来供用户撤消更改。默认情况下，操作记录只在本次编辑时有效，一旦编辑结束、文件关闭，操作历史就消失了。</p>
<p>打开这个设置，可以在文件关闭后，操作记录保留在一个文件里面，继续存在。这意味着，重新打开一个文件，可以撤销上一次编辑时的操作。撤消文件是跟原文件保存在一起的隐藏文件，文件名以 <code>.un~</code> 开头。</p>
<p>（34）</p>
<pre><code class="language-bash">set backupdir=~/.vim/.backup//  
set directory=~/.vim/.swp//
set undodir=~/.vim/.undo// 
</code></pre>
<p>设置备份文件、交换文件、操作历史文件的保存位置。</p>
<p>结尾的 <code>//</code>表示生成的文件名带有绝对路径，路径中用 <code>%</code> 替换目录分隔符，这样可以防止文件重名。</p>
<p>（35）</p>
<pre><code class="language-bash">set autochdir
</code></pre>
<p>自动切换工作目录。这主要用在一个 Vim 会话之中打开多个文件的情况，默认的工作目录是打开的第一个文件的目录。该配置可以将工作目录自动切换到，正在编辑的文件的目录。</p>
<p>（36）</p>
<pre><code class="language-bash">set noerrorbells
</code></pre>
<p>出错时，不要发出响声。</p>
<p>（37）</p>
<pre><code class="language-bash">set visualbell
</code></pre>
<p>出错时，发出视觉提示，通常是屏幕闪烁。</p>
<p>（38）</p>
<pre><code class="language-bash">set history=1000
</code></pre>
<p>Vim 需要记住多少次历史操作。</p>
<p>（39）</p>
<pre><code class="language-bash">set autoread
</code></pre>
<p>打开文件监视。如果在编辑过程中文件发生外部改变（比如被别的编辑器编辑了），就会发出提示。</p>
<p>（40）</p>
<pre><code class="language-bash">set listchars=tab:»■,trail:■
set list
</code></pre>
<p>如果行尾有多余的空格（包括 Tab 键），该配置将让这些空格显示成可见的小方块。</p>
<p>（41）</p>
<pre><code class="language-bash">set wildmenu
set wildmode=longest:list,full
</code></pre>
<p>命令模式下，底部操作指令按下 Tab 键自动补全。第一次按下 Tab，会显示所有匹配的操作指令的清单；第二次按下 Tab，会依次选择各个指令。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim——重要的命令]]></title>
        <id>https://tdmaker.github.io/faded/post/vim-key-instruct/</id>
        <link href="https://tdmaker.github.io/faded/post/vim-key-instruct/">
        </link>
        <updated>2020-04-09T05:23:13.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><a href="https://linux.cn/article-4669-1.html">一些不起眼但非常有用的 Vim 命令</a></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://linux.cn/article-4669-1.html">一些不起眼但非常有用的 Vim 命令</a></p>
</blockquote>
<!-- more -->
<h1 id="1-保存文件并退出">1 保存文件并退出</h1>
<pre><code class="language-vim">:x
:wq
</code></pre>
<p>都是保存当前文件并退出。这两个命令实际上并不完全等价，当文件被修改时两个命令时相同的。但如果未被修改，使用 <code>:x</code> 不会更改文件的修改时间，而使用 <code>:wq</code> 会改变文件的修改时间。</p>
<h1 id="2-基本计算器">2 基本计算器</h1>
<p>在插入模式下，你可以使用 Ctrl+r 键然后输入 =，再输入一个简单的算式。按 Enter 键，计算结果就会插入到文件中。例如，尝试输入：</p>
<pre><code class="language-vim">Ctrl+r '=2+2' ENTER
</code></pre>
<p><img src="https://tdmaker.github.io/faded//post-images/1586410130425.png" alt="" loading="lazy"><br>
然后计算结果“4 ”会被插入到文件中。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586410173096.png" alt="" loading="lazy"></p>
<h1 id="3-查找重复的连续的单词">3 查找重复的连续的单词</h1>
<p>当你很快地打字时，很有可能会连续输入同一个单词两次，就像 this this。这种错误可能骗过任何一个人，即使是你自己重新阅读一遍也不可避免。幸运的是，有一个简单的正则表达式可以用来预防这个错误。使用搜索命令（默认时 /）然后输入：</p>
<pre><code class="language-vim">\(\&lt;\w\+\&gt;\)\_s*\1
</code></pre>
<p>这会显示所有重复的单词。要达到最好的效果，不要忘记把下面的命令：</p>
<pre><code class="language-bash">set hlsearch
</code></pre>
<p>放到你的 .vimrc 文件中高亮所有的匹配。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586410335520.png" alt="" loading="lazy"></p>
<h1 id="4-缩写">4 缩写</h1>
<p>一个很可能是最令人印象深刻的窍门是你可以在 Vim 中定义缩写，它可以实时地把你输入的东西替换为另外的东西。语法格式如下：</p>
<pre><code class="language-vim">:ab [缩写] [要替换的文字]
</code></pre>
<p>一个通用的例子是：</p>
<pre><code class="language-vim">:ab asap as soon as possible
</code></pre>
<p>会把你输入的 “asap” 替换为 “as soon as possible”。</p>
<h1 id="5-在你忘记用-root-方式打开文件时的文件保存">5 在你忘记用 root 方式打开文件时的文件保存</h1>
<p>这可能是一个在论坛中一直受欢迎的命令。每当你打开一个你没有写入权限的文件（比如系统配置文件）并做了一些修改，Vim 无法通过普通的 <code>:w</code> 命令来保存。</p>
<p>你不需要重新以 root 方式打开文件再进行修改，只需要运行：</p>
<pre><code class="language-vim">:w !sudo tee %
</code></pre>
<p>这会直接以 root 方式保存。</p>
<h1 id="6-实时加密文本">6 实时加密文本</h1>
<p>如果你不想让别人看懂你的屏幕上的内容，你可以使用一个内置的选项，通过下面的命令使用 <a href="https://en.wikipedia.org/wiki/ROT13">ROT13</a> 来对文本进行编码：</p>
<pre><code class="language-vim">ggVGg?
</code></pre>
<p><img src="https://tdmaker.github.io/faded//post-images/1586410711296.png" alt="" loading="lazy"><br>
<code>gg</code> 把光标移动到 Vim 缓冲区的第一行，<code>V</code> 进入可视模式，<code>G</code> 把光标移动到缓冲区的最后一行。因此，<code>ggVG</code> 使可视模式覆盖这个当前缓冲区。最后 <code>g?</code> 使用 ROT13 对整个区域进行编码。</p>
<p>注意它可以被映射到一个最常使用的键。它对字母符号也可以很好地工作。要对它进行撤销，最好的方法就是使用撤销命令：<code>u</code>。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586410826069.png" alt="" loading="lazy"></p>
<h1 id="7-自动补全">7 自动补全</h1>
<p>这是另外一个令我感到惭愧的功能，但我发现周围很多人并不知道。Vim 默认有自动补全的功能。的确这个功能是很基本的，并且可以通过插件来增强，但它也很有帮助。方法很简单。Vim 尝试通过已经输入的单词来预测单词的结尾。比如当你在同一个文件中第二次输入 “compiler” 时，仅仅输入 “com” 然后保持在插入模式，按 Ctrl+n 键就可以看到 Vim 为你补全了单词。很简单，但也很有用。</p>
<h1 id="8-比较两个文件的不同">8 比较两个文件的不同</h1>
<p>你们中的大多数很可能都知道 vimdiff 命令，它可以使用分离模式打开 Vim 并比较两个文件的不同。语法如下：</p>
<pre><code class="language-bash">$ vimdiff [文件1] [文件2]
</code></pre>
<p>但同样的结果也可以通过下面的 Vim 命令来获得：</p>
<pre><code class="language-vim">:diffthis
</code></pre>
<p>首先在 Vim 中打开原始文件。然后使用分离模式带来第二个文件：</p>
<pre><code class="language-vim">:vsp [文件2]
</code></pre>
<p>最后在第一个缓冲区里输入：</p>
<pre><code class="language-vim">:diffthis
</code></pre>
<p>通过 Ctrl+w 来切换缓冲区并再次输入：</p>
<pre><code class="language-vim">:diffthis
</code></pre>
<p>这样两个文件中不同的部分就会被高亮。<br>
（译者注：可以直接在一个缓冲区里使用命令 :windo diffthis，而不用输入 :diffthis 两次）<br>
要停止比较，使用：</p>
<pre><code class="language-vim">:diffoff
</code></pre>
<h1 id="9-按时间回退文件">9 按时间回退文件</h1>
<p>Vim 会记录文件的更改，你很容易可以回退到之前某个时间。该命令是相当直观的。比如：</p>
<pre><code class="language-vim">:earlier 1m
</code></pre>
<p>会把文件回退到 1 分钟以前的状态。</p>
<p>注意，你可以使用下面的命令进行相反的转换：</p>
<pre><code class="language-vim">:later
</code></pre>
<h1 id="10-删除标记内部的文字">10 删除标记内部的文字</h1>
<p>当我开始使用 Vim 时，一件我总是想很方便做的事情是如何轻松的删除方括号或圆括号里的内容。转到开始的标记，然后使用下面的语法：</p>
<pre><code class="language-vim">di[标记]
</code></pre>
<p>比如，把光标放在开始的圆括号上，使用下面的命令来删除圆括号内的文字：</p>
<pre><code class="language-vim">di(
</code></pre>
<p>如果是方括号或者是引号，则使用：</p>
<pre><code class="language-vim">di{
</code></pre>
<p>和：</p>
<pre><code class="language-vim">di&quot;
</code></pre>
<h1 id="11-删除指定标记前的内容">11 删除指定标记前的内容</h1>
<p>和删除标记内部有些相似，但目的不同。命令如下：</p>
<pre><code class="language-vim">dt[标记]
</code></pre>
<p>会删除所有光标和标记之间的内容（保持标记不动），如果在同一行有这个标记的话。例如</p>
<pre><code class="language-vim">dt.
</code></pre>
<p>会删除至句子的末尾，但保持 <code>.</code> 不动。</p>
<h1 id="12-把-vim-变为十六进制编辑器">12 把 Vim 变为十六进制编辑器</h1>
<p>这不是我最喜欢的窍门，但有时会很有趣。你可以把 Vim 和 xxd 功能连起来来把文件转换为十六进制模式。命令如下：<code>:%!xxd</code><br>
<img src="https://tdmaker.github.io/faded//post-images/1586412158407.png" alt="" loading="lazy"><br>
类似的，你可以通过下面的命令恢复原来的状态：</p>
<pre><code class="language-vim">:%!xxd -r
</code></pre>
<h1 id="13-把光标下的文字置于屏幕中央">13 把光标下的文字置于屏幕中央</h1>
<p>我们所要做的事情如标题所示。如果你想强制滚动屏幕来把光标下的文字置于屏幕的中央，在可视模式中使用命令（译者注：在普通模式中也可以）：</p>
<pre><code class="language-vim">zz
</code></pre>
<h1 id="14-跳到上一个下一个位置">14 跳到上一个／下一个位置</h1>
<p>当你编辑一个很大的文件时，经常要做的事是在某处进行修改，然后跳到另外一处。如果你想跳回之前修改的地方，使用命令：</p>
<pre><code class="language-vim">Ctrl+o
</code></pre>
<p>来回到之前修改的地方；类似的：</p>
<pre><code class="language-vim">Ctrl+i
</code></pre>
<p>会回退上面的跳动。</p>
<h1 id="15-把当前文件转化为网页">15 把当前文件转化为网页</h1>
<p>这会生成一个 HTML 文件来显示文本，并在分开的窗口显示源代码：</p>
<pre><code class="language-vim">:%TOhtml
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://tdmaker.github.io/faded//post-images/1586413621493.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim——光标移动篇]]></title>
        <id>https://tdmaker.github.io/faded/post/vim-cursor-movement/</id>
        <link href="https://tdmaker.github.io/faded/post/vim-cursor-movement/">
        </link>
        <updated>2020-04-09T04:37:23.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><a href="https://www.jianshu.com/p/52b1b41de71f">Vim常用文档动作命令总结</a></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://www.jianshu.com/p/52b1b41de71f">Vim常用文档动作命令总结</a></p>
</blockquote>
<!-- more -->
<h1 id="1-基本方向移动">1 基本方向移动</h1>
<pre><code class="language-shell">h  ：  向左移动一列
l  ：  向右移动一列
j  ：  向下移动一个实际行
k  ： 向上移动一个实际行
</code></pre>
<p>所谓列可能指一个字节，也可能是一个字符，根据文件内容决定。<br>
实际行指的是文本截止到一个换行符为止称为一个实际行。有时因为文本太长，一个实际行在窗口中会显示成好几行。可以通过 <code>:set number</code> 命令查看实际的行数。</p>
<h1 id="2-基于单词的移动">2 基于单词的移动</h1>
<p>Vim有一组基于单词的正向和反向移动的命令。</p>
<pre><code class="language-shell">w  ：  正向移动到下一单词的开头
e  ：  正向移动到当前/下一单词的结尾
b  ：  反向移动到当前/上一单词的开头
ge ：  反向移动到上一单词的结尾
</code></pre>
<p>基于单词的移动命令可以和其他命令结合使用。例如 <code>:ea</code> 可以跳转到单词的结尾并进入插入模式。</p>
<h1 id="3-基于查找的移动">3 基于查找的移动</h1>
<p><code>f</code> 命令是最常用的查找命令，用于当前行进行指定字符的查找。如果找到则光标移动到目标字符，否则不移动。<br>
Vim 会记录上一次执行的查找命令，再次查找时可以使用 <code>;</code> 命令来完成相同查找。如果查询跳过头了，可以使用 <code>,</code> 命令返回光标之前的位置。<br>
查询不止 <code>f</code> 命令，其他命令总结如下</p>
<pre><code class="language-shell">f{char}  :  正向移动到下一个{char}所在位置
F{char}  :  反向移动到上一个{char}所在位置
t{char}  :  正向移动到下一个{char}的前一个字符上
T{char}  :  反向移动到上一个{char}的后一个字符上
</code></pre>
<p>除了上述查询方式， <code>/</code> 也是一种常用的查询方式，基于字符串的查询，<code>/{str}</code> 可以高亮目标字符串。可以通过 <code>n</code> 命令跳到下一个匹配处， <code>N</code> 返回前一匹配处。<br>
同样的， <code>/</code> 也可以和其他命令结合使用，例如选择文本。点击 <code>v</code> 进入可视模式，然后输入 <code>/{str}</code><br>
也有例如 <code>d/{str}</code> 删除光标到目标字符串之间的所有内容的操作方式。</p>
<h1 id="4-精确的文本对象选择">4 精确的文本对象选择</h1>
<p>这个是一个很NB的功能，完全颠覆了对文本编辑器的认知。<br>
现在有一个 JS 文件，内容如图：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586408369240.png" alt="" loading="lazy"><br>
这里认识 <code>a</code> 和 <code>i</code> 两个命令，不是普通的插入命令，需要和 <code>v</code> 命令配合使用，选中匹配的文本对象。例如在当前光标所在处输入 <code>vi}</code> 会达到以下效果。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586408458485.png" alt="{}内的内容被选中" loading="lazy"><br>
如果光标的位置在 <code>href</code> 上呢？相同命令下：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586408537529.png" alt="" loading="lazy"><br>
如果换做是 <code>a</code> 命令呢？<br>
<img src="https://tdmaker.github.io/faded//post-images/1586408587971.png" alt="" loading="lazy"><br>
<code>i</code> 命令可以理解为 inside，即选中匹配符号之间不包含匹配符号的内容。而 <code>a</code> 则选中包含匹配项的内容。<br>
常见分隔符总结：</p>
<pre><code class="language-shell">'a)' 或 'ab'  :  一对()
'a}' 或 'aB'  :  一对{}
a]  :  一对[]
a&gt;  :  一对&lt;&gt;
a'  :  一对''
a&quot;  :  一对&quot;&quot;
a`  :  一对``
at  :  一对xml标签
</code></pre>
<p><code>i</code> 与 <code>a</code> 对应，只不过是针对分隔符内部的内容而已。</p>
<h1 id="5-删除周边-修改内部">5 删除周边、修改内部</h1>
<p>Vim 除了可以根据分隔符操作，也可以操作文本块，如单词，句子，段落等。<br>
常见文本范围：</p>
<pre><code class="language-shell">iw  :  当前单词
aw  :  当前单词及一个空格
iW  :  当前字符串
aW  :  当前字符串及一个空格
is  :  当前句子
as  :  当前句子及一个空格
ip  :  当前段落
ap  :  当前段落及一个空行
</code></pre>
<p>上面的范围命令可以和 <code>v</code> 、 <code>c</code> 等操作一起使用。</p>
<h1 id="6-快速回跳">6 快速回跳</h1>
<p>这些命令用的相对少一些，常用一些的有</p>
<pre><code class="language-shell">``  :  当前文件上次跳转操作的位置
`.  :  上次修改操作的地方
`^  :  上次插入的地方
`[  :  上次修改或复制的起始位置
`]  :  上次修改或复制的结束位置
`&lt;  :  上次高亮选区的起始位置
`&gt;  :  上次高亮选区的结束位置
</code></pre>
<h1 id="7-匹配括号间跳转">7 匹配括号间跳转</h1>
<p>Vim的 <code>%</code> 命令允许光标在一对闭括号间跳转。例如当前光标在 <code>[</code> 上， <code>%</code> 命令可以跳转到对应的 <code>]</code> 上，反过来也一样ok。例如将一对 <code>{}</code> 修改为一对 <code>[]</code>。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586409013523.png" alt="" loading="lazy"><br>
当前光标在 <code>{</code> 上，输入 <code>%</code> 命令<br>
<img src="https://tdmaker.github.io/faded//post-images/1586409054358.png" alt="" loading="lazy"><br>
替换当前光标下的字符，通过 <code>r]</code> 将 <code>}</code> 替换为 <code>]</code>。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586409179661.png" alt="" loading="lazy"><br>
输入 <code>``</code> 命令，跳转回上次跳转的位置。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586409233002.png" alt="" loading="lazy"><br>
之后再通过 'r[' 将 '{' 转为 '['。<br>
<img src="https://tdmaker.github.io/faded//post-images/1586409270289.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bash 移动光标快捷键]]></title>
        <id>https://tdmaker.github.io/faded/post/bash-key-for-cursor-movement/</id>
        <link href="https://tdmaker.github.io/faded/post/bash-key-for-cursor-movement/">
        </link>
        <updated>2020-04-09T04:33:48.000Z</updated>
        <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>快捷键</th>
<th>行为</th>
</tr>
</thead>
<tbody>
<tr>
<td>ctrl+a</td>
<td>移动到行首</td>
</tr>
<tr>
<td>ctrl+e</td>
<td>移动到行尾</td>
</tr>
<tr>
<td>ctrl+f</td>
<td>向右移动一个字符</td>
</tr>
<tr>
<td>ctrl+b</td>
<td>向左移动一个字符</td>
</tr>
<tr>
<td>alt+f</td>
<td>向右移动一个单词</td>
</tr>
<tr>
<td>alt+b</td>
<td>向左移动一个单词</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim——CheatSheet]]></title>
        <id>https://tdmaker.github.io/faded/post/vim-cheatsheet/</id>
        <link href="https://tdmaker.github.io/faded/post/vim-cheatsheet/">
        </link>
        <updated>2020-04-09T03:57:29.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><a href="https://www.jianshu.com/p/6aa2e0e39f99">Vim速查表-帮你提高N倍效率</a></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://www.jianshu.com/p/6aa2e0e39f99">Vim速查表-帮你提高N倍效率</a></p>
</blockquote>
<!-- more -->
<h1 id="进入-vim">进入 vim</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>vim filename</td>
<td>打开或新建文件,并将光标置于第一行首</td>
</tr>
<tr>
<td>vim +n filename</td>
<td>打开文件，并将光标置于第n行首</td>
</tr>
<tr>
<td>vim + filename</td>
<td>打开文件，并将光标置于最后一行首</td>
</tr>
<tr>
<td>vim +/pattern filename</td>
<td>打开文件，并将光标置于第一个与pattern匹配的串处</td>
</tr>
<tr>
<td>vim -r filename</td>
<td>在上次正用vim编辑时发生系统崩溃，恢复filename</td>
</tr>
<tr>
<td>vim filename….filename</td>
<td>打开多个文件，依次编辑</td>
</tr>
</tbody>
</table>
<h1 id="vim-配置">vim 配置</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>all</td>
<td>列出所有选项设置情况</td>
</tr>
<tr>
<td>term</td>
<td>设置终端类型</td>
</tr>
<tr>
<td>ignorance</td>
<td>在搜索中忽略大小写</td>
</tr>
<tr>
<td>list</td>
<td>显示制表位(Ctrl+I)和行尾标志（$)</td>
</tr>
<tr>
<td>number</td>
<td>显示行号</td>
</tr>
<tr>
<td>report</td>
<td>显示由面向行的命令修改过的数目</td>
</tr>
<tr>
<td>terse</td>
<td>显示简短的警告信息</td>
</tr>
<tr>
<td>warn</td>
<td>在转到别的文件时若没保存当前文件则显示NO write信息</td>
</tr>
<tr>
<td>nomagic</td>
<td>允许在搜索模式中，使用前面不带“\”的特殊字符</td>
</tr>
<tr>
<td>nowrapscan</td>
<td>禁止vi在搜索到达文件两端时，又从另一端开始</td>
</tr>
<tr>
<td>mesg</td>
<td>允许vi显示其他用户用write写到自己终端上的信息</td>
</tr>
<tr>
<td>:set number / set nonumber</td>
<td>显示/不显示行号</td>
</tr>
<tr>
<td>:set ruler /set noruler</td>
<td>显示/不显示标尺</td>
</tr>
<tr>
<td>:set hlsearch</td>
<td>高亮显示查找到的单词</td>
</tr>
<tr>
<td>:set nohlsearch</td>
<td>关闭高亮显示</td>
</tr>
<tr>
<td>:syntax on</td>
<td>语法高亮</td>
</tr>
<tr>
<td>:set nu</td>
<td>显示行号</td>
</tr>
<tr>
<td>:set tabstop=8</td>
<td>设置tab大小,8为最常用最普遍的设置</td>
</tr>
<tr>
<td>:set softtabstop=8</td>
<td>4:4个空格,8:正常的制表符,12:一个制表符4个空格,16:两个制表符</td>
</tr>
<tr>
<td>:set autoindent</td>
<td>自动缩进</td>
</tr>
<tr>
<td>:set cindent</td>
<td>C语言格式里面的自动缩进</td>
</tr>
</tbody>
</table>
<h1 id="移动光标">移动光标</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>k nk</td>
<td>上 向上移动n行</td>
</tr>
<tr>
<td>j nj</td>
<td>下 向下移动n行</td>
</tr>
<tr>
<td>h nh</td>
<td>左 向左移动n行</td>
</tr>
<tr>
<td>l nl</td>
<td>右 向右移动n行</td>
</tr>
<tr>
<td>Space</td>
<td>光标右移一个字符</td>
</tr>
<tr>
<td>Backspace</td>
<td>光标左移一个字符</td>
</tr>
<tr>
<td>Enter</td>
<td>光标下移一行</td>
</tr>
<tr>
<td>w/W</td>
<td>光标右移一个字至字首</td>
</tr>
<tr>
<td>b/B</td>
<td>光标左移一个字至字首</td>
</tr>
<tr>
<td>e或E</td>
<td>光标右移一个字至字尾</td>
</tr>
<tr>
<td>)</td>
<td>光标移至句尾</td>
</tr>
<tr>
<td>(</td>
<td>光标移至句首</td>
</tr>
<tr>
<td>}</td>
<td>光标移至段落开头</td>
</tr>
<tr>
<td>{</td>
<td>光标移至段落结尾</td>
</tr>
<tr>
<td>n$</td>
<td>光标移至第n行尾</td>
</tr>
<tr>
<td>H</td>
<td>光标移至屏幕顶行</td>
</tr>
<tr>
<td>M</td>
<td>光标移至屏幕中间行</td>
</tr>
<tr>
<td>L</td>
<td>光标移至屏幕最后行</td>
</tr>
<tr>
<td>0</td>
<td>（注意是数字零）光标移至当前行首</td>
</tr>
<tr>
<td>^</td>
<td>移动光标到行首第一个非空字符上去</td>
</tr>
<tr>
<td>$</td>
<td>光标移至当前行尾</td>
</tr>
<tr>
<td>gg</td>
<td>移到第一行</td>
</tr>
<tr>
<td>G</td>
<td>移到最后一行</td>
</tr>
<tr>
<td>f</td>
<td>移动光标到当前行的字符a上</td>
</tr>
<tr>
<td>F</td>
<td>相反</td>
</tr>
<tr>
<td>%</td>
<td>移动到与制匹配的括号上去（），{}，[]，&lt;&gt;等</td>
</tr>
<tr>
<td>nG</td>
<td>移动到第n行上</td>
</tr>
<tr>
<td>G</td>
<td>到最后一行</td>
</tr>
</tbody>
</table>
<h1 id="屏幕滚动">屏幕滚动</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+u</td>
<td>向文件首翻半屏</td>
</tr>
<tr>
<td>Ctrl+d</td>
<td>向文件尾翻半屏</td>
</tr>
<tr>
<td>Ctrl+f</td>
<td>向文件尾翻一屏</td>
</tr>
<tr>
<td>Ctrl＋b</td>
<td>向文件首翻一屏</td>
</tr>
<tr>
<td>nz</td>
<td>将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部</td>
</tr>
</tbody>
</table>
<h1 id="插入文本类">插入文本类</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>在光标前</td>
</tr>
<tr>
<td>I</td>
<td>在当前行首</td>
</tr>
<tr>
<td>a</td>
<td>光标后</td>
</tr>
<tr>
<td>A</td>
<td>在当前行尾</td>
</tr>
<tr>
<td>o</td>
<td>在当前行之下新开一行</td>
</tr>
<tr>
<td>O</td>
<td>在当前行之上新开一行</td>
</tr>
<tr>
<td>r</td>
<td>替换当前字符</td>
</tr>
<tr>
<td>R</td>
<td>替换当前字符及其后的字符，直至按ESC键</td>
</tr>
<tr>
<td>s</td>
<td>从当前光标位置处开始，以输入的文本替代指定数目的字符</td>
</tr>
<tr>
<td>S</td>
<td>删除指定数目的行，并以所输入文本代替之</td>
</tr>
<tr>
<td>ncw/nCW</td>
<td>修改指定数目的字</td>
</tr>
<tr>
<td>nCC</td>
<td>修改指定数目的行</td>
</tr>
</tbody>
</table>
<h1 id="删除命令">删除命令</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>x/X</td>
<td>删除一个字符，x删除光标后的，而X删除光标前的</td>
</tr>
<tr>
<td>dw</td>
<td>删除一个单词(删除光标位置到下一个单词开始的位置)</td>
</tr>
<tr>
<td>dnw</td>
<td>删除n个单词</td>
</tr>
<tr>
<td>dne</td>
<td>也可，只是删除到单词尾</td>
</tr>
<tr>
<td>do</td>
<td>删至行首</td>
</tr>
<tr>
<td>d$</td>
<td>删至行尾</td>
</tr>
<tr>
<td>dd</td>
<td>删除一行</td>
</tr>
<tr>
<td>ndd</td>
<td>删除当前行及其后n-1行</td>
</tr>
<tr>
<td>dnl</td>
<td>向右删除n个字母</td>
</tr>
<tr>
<td>dnh</td>
<td>向左删除n个字母</td>
</tr>
<tr>
<td>dnj</td>
<td>向下删除n行,当前行+其上n行</td>
</tr>
<tr>
<td>dnk</td>
<td>向上删除n行,当期行+其下n行</td>
</tr>
<tr>
<td>cnw[word]</td>
<td>将n个word改变为word</td>
</tr>
<tr>
<td>C$</td>
<td>改变到行尾</td>
</tr>
<tr>
<td>cc</td>
<td>改变整行</td>
</tr>
<tr>
<td>shift+j</td>
<td>删除行尾的换行符，下一行接上来了</td>
</tr>
</tbody>
</table>
<h1 id="复制粘贴">复制粘贴</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>p</td>
<td>粘贴用x或d删除的文本</td>
</tr>
<tr>
<td>ynw</td>
<td>复制n个单词</td>
</tr>
<tr>
<td>yy</td>
<td>复制一行</td>
</tr>
<tr>
<td>ynl</td>
<td>复制n个字符</td>
</tr>
<tr>
<td>y$</td>
<td>复制当前光标至行尾处</td>
</tr>
<tr>
<td>nyy</td>
<td>拷贝n行</td>
</tr>
</tbody>
</table>
<h1 id="撤销">撤销</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>u</td>
<td>撤销前一次的操作</td>
</tr>
<tr>
<td>shif+u(U)</td>
<td>撤销对该行的所有操作</td>
</tr>
</tbody>
</table>
<h1 id="搜索及替换">搜索及替换</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>/pattern</td>
<td>从光标开始处向文件尾搜索pattern</td>
</tr>
<tr>
<td>?pattern</td>
<td>从光标开始处向文件首搜索pattern</td>
</tr>
<tr>
<td>n</td>
<td>在同一方向重复上一次搜索命令</td>
</tr>
<tr>
<td>N</td>
<td>在反方向上重复上一次搜索命令</td>
</tr>
<tr>
<td>cw newword</td>
<td>替换为newword</td>
</tr>
<tr>
<td>n</td>
<td>继续查找</td>
</tr>
<tr>
<td>.</td>
<td>执行替换</td>
</tr>
<tr>
<td><code>:s</code>/p1/p2/g</td>
<td>将当前行中所有p1均用p2替代,g表示执行 用c表示需要确认</td>
</tr>
<tr>
<td>:n1,n2 s/p1/p2/g</td>
<td>将第n1至n2行中所有p1均用p2替代</td>
</tr>
<tr>
<td>:g/p1/s//p2/g</td>
<td>将文件中所有p1均用p2替换</td>
</tr>
<tr>
<td>:1,$ s/string1/string2/g</td>
<td>在全文中将string1替换为string2</td>
</tr>
</tbody>
</table>
<h1 id="书签">书签</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>m[a-z]</td>
<td>在文中做标记，标记号可为a-z的26个字母</td>
</tr>
<tr>
<td>`a</td>
<td>移动到标记a处</td>
</tr>
</tbody>
</table>
<h1 id="visual-模式">visual 模式</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>v</td>
<td>进入visual 模式</td>
</tr>
<tr>
<td>V</td>
<td>进入行的visual 模式</td>
</tr>
<tr>
<td>ctrl+v</td>
<td>进如块操作模式用o和O改变选择的边的大小</td>
</tr>
<tr>
<td>在所有行插入相同的内容如include&lt;</td>
<td>将光标移到开始插入的位置，按CTRL+V进入VISUAL模式，选择好模块后按I（shift+i)，后插入要插入的文本，按[ESC]完成</td>
</tr>
</tbody>
</table>
<h1 id="行方式命令">行方式命令</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>:n1,n2 co n3</td>
<td>将n1行到n2行之间的内容拷贝到第n3行下</td>
</tr>
<tr>
<td>:n1,n2 m n3</td>
<td>将n1行到n2行之间的内容移至到第n3行下</td>
</tr>
<tr>
<td>:n1,n2 d</td>
<td>将n1行到n2行之间的内容删除</td>
</tr>
<tr>
<td>:n1,n2 w!command</td>
<td>将文件中n1行至n2行的内容作为command的输入并执行之</td>
</tr>
<tr>
<td></td>
<td>若不指定n1，n2，则表示将整个文件内容作为command的输入</td>
</tr>
</tbody>
</table>
<h1 id="宏">宏</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>q[a-z]</td>
<td>开始记录但前开始的操作为宏，名称可为【a-z】，然后用q终止录制宏</td>
</tr>
<tr>
<td>reg</td>
<td>显示当前定义的所有的宏，用@[a-z]来在当前光标处执行宏[a-z]</td>
</tr>
</tbody>
</table>
<h1 id="窗口操作">窗口操作</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>:split</td>
<td>分割一个窗口</td>
</tr>
<tr>
<td>:split file.c</td>
<td>为另一个文件file.c分隔窗口</td>
</tr>
<tr>
<td>:nsplit file.c</td>
<td>为另一个文件file.c分隔窗口，并指定其行数</td>
</tr>
<tr>
<td>ctrl＋w</td>
<td>在窗口中切换</td>
</tr>
<tr>
<td>:close</td>
<td>关闭当前窗口</td>
</tr>
</tbody>
</table>
<h1 id="文件及其他">文件及其他</h1>
<table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>:q</td>
<td>退出vi</td>
</tr>
<tr>
<td>:q!</td>
<td>不保存文件并退出vi</td>
</tr>
<tr>
<td>:e filename</td>
<td>打开文件filename进行编辑</td>
</tr>
<tr>
<td>:e!</td>
<td>放弃修改文件内容，重新载入该文件编辑</td>
</tr>
<tr>
<td>:w</td>
<td>保存当前文件</td>
</tr>
<tr>
<td>:wq</td>
<td>存盘退出</td>
</tr>
<tr>
<td>:ZZ</td>
<td>保存当前文档并退出VIM</td>
</tr>
<tr>
<td>:!command</td>
<td>执行shell命令command</td>
</tr>
<tr>
<td>:r!command</td>
<td>将命令command的输出结果放到当前行</td>
</tr>
<tr>
<td>:n1,n2 write temp.c</td>
<td></td>
</tr>
<tr>
<td>:read file.c</td>
<td>将文件file.c的内容插入到当前光标所在的下面</td>
</tr>
</tbody>
</table>
<h1 id="几张图">几张图</h1>
<h2 id="vim-工作模式">vim 工作模式</h2>
<figure data-type="image" tabindex="1"><img src="https://tdmaker.github.io/faded//post-images/1586406218928.png" alt="" loading="lazy"></figure>
<h2 id="vim-快捷键盘图">vim 快捷键盘图</h2>
<figure data-type="image" tabindex="2"><img src="https://tdmaker.github.io/faded//post-images/1586406168852.png" alt="" loading="lazy"></figure>
<h2 id="vim-快捷键思维导图">vim 快捷键思维导图</h2>
<figure data-type="image" tabindex="3"><img src="https://tdmaker.github.io/faded//post-images/1586406194722.png" alt="" loading="lazy"></figure>
<h2 id="vimium-快捷键盘图">vimium 快捷键盘图</h2>
<figure data-type="image" tabindex="4"><img src="https://tdmaker.github.io/faded//post-images/1586406592455.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>