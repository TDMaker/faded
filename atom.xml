<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tdmaker.github.io/faded/</id>
    <title>Typhoeus</title>
    <updated>2020-04-06T13:02:41.389Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tdmaker.github.io/faded/"/>
    <link rel="self" href="https://tdmaker.github.io/faded/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://tdmaker.github.io/faded/images/avatar.png</logo>
    <icon>https://tdmaker.github.io/faded/favicon.ico</icon>
    <rights>All rights reserved 2020, Typhoeus</rights>
    <entry>
        <title type="html"><![CDATA[正则表达式——断言人话版]]></title>
        <id>https://tdmaker.github.io/faded/post/regular-expression-assert-mandarin/</id>
        <link href="https://tdmaker.github.io/faded/post/regular-expression-assert-mandarin/">
        </link>
        <updated>2020-04-06T07:02:40.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://juejin.im/post/5b9e7b6ce51d450e8a65ed6b">这次不会说我的正则教程没写全了吧？？</a></p>
</blockquote>
<h1 id="零宽断言">零宽断言</h1>
<ul>
<li><strong>断言</strong>：俗话的断言就是“我断定什么什么”，而正则中的断言，就是说正则可以指明在指定内容的前面或后面会出现满足指定规则的内容，意思正则也可以像人类那样断定什么什么，比如“ss1aa2bb3”，正则可以用断言找出 aa2 前面有 bb3，也可以找出 aa2 后面有 ss1。</li>
<li><strong>零宽</strong>：就是没有宽度，在正则中，断言只是匹配位置，不占字符，也就是说，匹配结果里是不会返回断言本身。</li>
</ul>
<p>假设我们要用爬虫抓取 csdn 里的文章阅读量。通过查看源代码可以看到文章阅读量这个内容是这样的结构：</p>
<pre><code class="language-html">&lt;span class=&quot;read-count&quot;&gt;阅读数：641&lt;/span&gt;
</code></pre>
<p>需要获得这里边的‘641’有很多种办法，但如果使用正则应该怎么匹配呢？下面先讲一下几种类型的断言：</p>
<h2 id="正向先行断言正前瞻">💡正向先行断言（正前瞻）</h2>
<ul>
<li>语法：<code>(?=pattern)</code>；</li>
<li>作用：匹配 pattern 表达式的前面内容，不返回本身。</li>
</ul>
<p>要取到阅读量，在正则表达式中就意味着要能匹配到‘<code>&lt;/span&gt;</code>’前面的数字内容，按照上所说的正向先行断言可以匹配表达式前面的内容，那意思就是：<code>(?=&lt;/span&gt;)</code> 就可以匹配到前面的内容了。</p>
<pre><code class="language-javascript">const regExp = /.+(?=&lt;\/span&gt;)/;
const str = &quot;&lt;span class=\&quot;read-count\&quot;&gt;阅读数：641&lt;/span&gt;&quot;
console.log(regExp.exec(str));
// 匹配结果：
[
 '&lt;span class=&quot;read-count&quot;&gt;阅读数：641',
 index: 0,
 input: '&lt;span class=&quot;read-count&quot;&gt;阅读数：641&lt;/span&gt;',
 groups: undefined
]
</code></pre>
<p>仅匹配前面的数字：</p>
<pre><code class="language-javascript">const regExp = /\d+(?=&lt;\/span&gt;)/;
const str = &quot;&lt;span class=\&quot;read-count\&quot;&gt;阅读数：641&lt;/span&gt;&quot;
console.log(regExp.exec(str));
// 匹配结果：
[
 '641',
 index: 29,
 input: '&lt;span class=&quot;read-count&quot;&gt;阅读数：641&lt;/span&gt;',
 groups: undefined
]
</code></pre>
<h2 id="正向后行断言正后顾">💡正向后行断言（正后顾）:</h2>
<ul>
<li>语法：<code>(?&lt;=pattern)</code>；</li>
<li>作用：匹配 pattern 表达式的后面的内容，不返回本身。</li>
</ul>
<p>有先行就有后行，先行是匹配前面的内容，那后行就是匹配后面的内容啦。上面的栗子，我们也可以用后行断言来处理。</p>
<pre><code class="language-javascript">const regExp= /(?&lt;=&lt;span class=\&quot;read-count\&quot;&gt;阅读数：)\d+/;
const str = &quot;&lt;span class=\&quot;read-count\&quot;&gt;阅读数：641&lt;/span&gt;&quot;
console.log(regExp.exec(str));
// 匹配结果
[
 '641',
 index: 29,
 input: '&lt;span class=&quot;read-count&quot;&gt;阅读数：641&lt;/span&gt;',
 groups: undefined
]
</code></pre>
<h2 id="负向先行断言负前瞻">💡负向先行断言（负前瞻）</h2>
<ul>
<li>语法：<code>(?!pattern)</code>；</li>
<li>作用：匹配非 pattern 表达式的前面内容，不返回本身。</li>
</ul>
<p>有正向也有负向，负向在这里其实就是非的意思。举个栗子：比如有一句 “我爱祖国，我是祖国的花朵”，现在要找到不是 “的花朵”前面的“祖国”，用正则就可以这样写：<code>祖国(?!的花朵)</code>。</p>
<h2 id="负向后行断言负后顾">💡负向后行断言（负后顾）</h2>
<ul>
<li>语法：<code>(?&lt;!pattern)</code>；</li>
<li>作用：匹配非 pattern 表达式的后面内容，不返回本身。</li>
</ul>
<h1 id="捕获和非捕获">捕获和非捕获</h1>
<p>单纯说到捕获，他的意思是匹配表达式，但捕获通常和分组联系在一起，也就是“捕获组”。捕获组：匹配子表达式的内容，把匹配结果保存到内存中数字编号或显示命名的组里，以深度优先进行编号，之后可以通过序号或名称来使用这些匹配结果。<br>
而根据命名方式的不同，又可以分为两种组：</p>
<h2 id="数字编号捕获组">💡数字编号捕获组</h2>
<ul>
<li>语法：<code>(exp)</code>；</li>
<li>解释：从表达式左侧开始，每出现一个左括号和它对应的右括号之间的内容为一个分组，在分组中，第 0 组为整个表达式，第一组开始为分组。</li>
</ul>
<p>比如固定电话的：020-85653333，它的正则表达式为：<code>(0\d{2})-(\d{8})</code>，按照左括号的顺序，这个表达式有如下分组：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>编号</th>
<th>分组</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td><code>(0\d{2})-(\d{8})</code></td>
<td>020-85653333</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td><code>(0\d{2})</code></td>
<td>020</td>
</tr>
<tr>
<td>2</td>
<td>2</td>
<td><code>(\d{8})</code></td>
<td>85653333</td>
</tr>
</tbody>
</table>
<p>下面来验证一下：</p>
<pre><code class="language-javascript">const str = '020-85653333';
const regExp=/(0\d{2})-(\d{8})/;
console.log(regExp.exec(str));
// 输出结果：
[
 '020-85653333',
 '020',
 '85653333',
 index: 0,
 input: '020-85653333',
 groups: undefined
]
</code></pre>
<p>可见，分组个数是2，但是因为第0个为整个表达式本身，因此也一起输出了。</p>
<h2 id="命名编号捕获组">💡命名编号捕获组：</h2>
<ul>
<li>语法：<code>(?&lt;name&gt;exp)</code>；</li>
<li>解释：分组的命名由表达式中的name指定。</li>
</ul>
<p>比如区号也可以这样写: <code>(?&lt;quhao&gt;\0\d{2})-(?&lt;haoma&gt;\d{8})</code>，按照左括号的顺序，这个表达式有如下分组：</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>名称</th>
<th>分组</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td><code>(0\d{2})-(\d{8})</code></td>
<td>020-85653333</td>
</tr>
<tr>
<td>1</td>
<td>quhao</td>
<td><code>(0\d{2})</code></td>
<td>020</td>
</tr>
<tr>
<td>2</td>
<td>haoma</td>
<td><code>(\d{8})</code></td>
<td>85653333</td>
</tr>
</tbody>
</table>
<pre><code class="language-javascript">const str = '020-85653333';
const regExp=/(?&lt;quhao&gt;0\d{2})-(?&lt;haoma&gt;\d{8})/;
console.log(regExp.exec(str));
// 输出结果：
[
 '020-85653333',
 '020',
 '85653333',
 index: 0,
 input: '020-85653333',
 groups: [Object: null prototype] { quhao: '020', haoma: '85653333' }
]
</code></pre>
<h2 id="非捕获组">💡非捕获组：</h2>
<ul>
<li>语法：(?:exp)；</li>
<li>解释：和捕获组刚好相反，它用来标识那些不需要捕获的分组，说的通俗一点，就是你可以根据需要去保存你的分组。</li>
</ul>
<p>比如上面的正则表达式，程序不需要用到第一个分组，那就可以这样写：<code>1(?:\0\d{2})-(\d{8})</code>。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>编号</th>
<th>分组</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td><code>(0\d{2})-(\d{8})</code></td>
<td>020-85653333</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td><code>(\d{8})</code></td>
<td>85653333</td>
</tr>
</tbody>
</table>
<pre><code class="language-javascript">const str = '020-85653333';
const regExp=/(?:0\d{2})-(\d{8})/;
console.log(regExp.exec(str));
// 运行结果：
[
 '020-85653333',
 '85653333',
 index: 0,
 input: '020-85653333',
 groups: undefined
]
</code></pre>
<h1 id="反向引用">反向引用</h1>
<p>上面讲到捕获，我们知道：<strong>捕获会返回一个捕获组，这个分组是保存在内存中，不仅可以在正则表达式外部通过程序进行引用，也可以在正则表达式内部进行引用，这种引用方式就是反向引用</strong>。<br>
根据捕获组的命名规则，反向引用可分为：</p>
<ul>
<li>数字编号组反向引用：<code>\k</code> 或 <code>\number</code>；</li>
<li>命名编号组反向引用：<code>\k</code>或者 <code>\'name'</code>。</li>
</ul>
<p>捕获组通常是和反向引用一起使用的。上面说到捕获组是匹配子表达式的内容按序号或者命名保存起来以便使用。注意两个字眼：“<strong>内容</strong>” 和 “<strong>使用</strong>”，这里所说的“<strong>内容</strong>”，是匹配结果，而不是子表达式本身。这里所说的“<strong>使用</strong>”的作用主要是用来查找一些重复的内容或者做替换指定字符。</p>
<p>还是举栗子吧：比如要查找一串字母 &quot;aabbbbgbddesddfiid&quot; 里成对的字母，如果按照我们之前学到的正则，什么区间啊限定啊断言啊可能是办不到的，现在我们先用程序思维理一下思路：</p>
<ol>
<li>匹配到一个字母；</li>
<li>匹配第下一个字母，检查是否和上一个字母是否一样；</li>
<li>如果一样，则匹配成功，否则失败；</li>
</ol>
<p>这里的思路 2 中匹配下一个字母时，需要用到上一个字母，那怎么记住上一个字母呢？这下子捕获就有用处啦，我们可以利用捕获把上一个匹配成功的内容用来作为本次匹配的条件。好了，有思路就要实践，首先匹配一个字母：<code>\w</code>，我们需要做成分组才能捕获，因此写成这样：<code>(\w)</code>，那这个表达式就有一个捕获组：<code>(\w)</code>，然后我们要用这个捕获组作为条件，那就可以：<code>(\w)\1</code>，这样就大功告成了，可能有人不明白了，<code>\1</code> 是什么意思呢？<br>
还记得捕获组有两种命名方式吗，一种是是根据<strong>捕获分组顺序命名</strong>，一种是<strong>自定义命名</strong>来作为捕获组的命名。在默认情况下都是以<strong>数字</strong>来命名，而且数字命名的顺序是从 1 开始的。因此要引用第一个捕获组，根据反向引用的数字命名规则 就需要 <code>\k&lt;1&gt;</code> 或者 <code>\1</code> 当然，通常都是是后者。<br>
我们来测试一下：</p>
<pre><code class="language-javascript">const str = 'aabbbbgbddesddfiid';
const regExp=/(\w)\1/g;
console.log(str.match(regExp));
运行结果：
[ 'aa', 'bb', 'bb', 'dd', 'dd', 'ii' ]
</code></pre>
<p>再举个替换的例子，假如想要把字符串中 abc 换成 a：</p>
<pre><code class="language-javascript">const str = 'abcbbabcbcgbddesddfiid';
const regExp=/(a)(b)c/g;
console.log(str.replace(regExp, '$1'));
// 输出结果：
abcbbabcbcgbddesddfiid
</code></pre>
<h1 id="贪婪和非贪婪">贪婪和非贪婪</h1>
<h2 id="贪婪">💡贪婪</h2>
<p><strong>贪婪匹配</strong>：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符，这匹配方式叫做贪婪匹配。<br>
<strong>特性</strong>：一次性读入整个字符串进行匹配，每当不匹配就舍弃最右边一个字符，继续匹配，依次匹配和舍弃（这种匹配-舍弃的方式也叫做<strong>回溯</strong>），直到匹配成功或者把整个字符串舍弃完为止，因此它是一种最大化的数据返回，能多不会少。<br>
前面我们讲过重复限定符，其实这些限定符就是贪婪量词，比如表达式：<code>\d{3,6}</code> 用来匹配 3 到 6 位数字，在这种情况下，它是一种贪婪模式的匹配，也就是假如字符串里有 6 个数字可以匹配，那它就是全部匹配到。例如：</p>
<pre><code class="language-javascript">const str = &quot;61762828 176 2991 871&quot;;
const regExp=/\d{3,6}/g;
console.log(str.match(regExp));
// 输出结果：
[ '617628', '176', '2991', '871' ]
</code></pre>
<p>由结果可见：本来字符串中的“61762828”这一段，其实只需要出现3个（617）就已经匹配成功了的，但是他并不满足，而是匹配到了最大能匹配的字符，也就是6个。<br>
一个量词就如此贪婪了，那有人会问，如果多个贪婪量词凑在一起，那他们是如何支配自己的匹配权的呢？是这样的，多个贪婪在一起时，如果字符串能满足他们各自最大程度的匹配时，就互不干扰，但如果不能满足时，会根据<strong>深度优先原则</strong>，也就是从左到右的每一个贪婪量词，优先最大数量的满足，剩余再分配下一个量词匹配。</p>
<pre><code class="language-javascript">const str = &quot;61762828 176 2991 87321&quot;;
const regExp=/(\d{1,2})(\d{3,4})/g;
console.log(str.match(regExp));
// 输出结果：
[ '617628', '2991', '87321' ]
</code></pre>
<p>解答：</p>
<ul>
<li>“617628” 是前面的 <code>\d{1,2}</code> 匹配出了 61，后面的匹配出了 7628；</li>
<li>“2991”是前面的 <code>\d{1,2}</code> 匹配出了 2 ，后面的匹配出了 991(满足匹配优先，再最大程度的贪婪)；</li>
<li>“87321”是前面的 <code>\d{1,2}</code> 匹配出了 87，后面的匹配出了 321。</li>
</ul>
<h2 id="懒惰非贪婪">💡懒惰（非贪婪）</h2>
<p><strong>懒惰匹配</strong>：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能少的字符，这匹配方式叫做懒惰匹配。<br>
<strong>特性</strong>：从左到右，从字符串的最左边开始匹配，每次试图不读入字符匹配，匹配成功，则完成匹配，否则读入一个字符再匹配，依此循环（读入字符、匹配）直到匹配成功或者把字符串的字符匹配完为止。<br>
懒惰量词是在贪婪量词后面加个“<code>?</code>”。</p>
<table>
<thead>
<tr>
<th>代码</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*?</code></td>
<td>重复任意次，但尽可能少重复</td>
</tr>
<tr>
<td><code>+?</code></td>
<td>重复 1 次或更多次，但尽可能少重复</td>
</tr>
<tr>
<td><code>??</code></td>
<td>重复 0 次或 1 次，但尽可能少重复</td>
</tr>
<tr>
<td><code>{n,m}?</code></td>
<td>重复 n 到 m 次，但尽可能少重复</td>
</tr>
<tr>
<td><code>{n,}?</code></td>
<td>重复 n 次以上，但尽可能少重复</td>
</tr>
</tbody>
</table>
<pre><code class="language-javascript">const str = &quot;61762828 176 2991 87321&quot;;
const regExp=/(\d{1,2}?)(\d{3,4})/g;
console.log(str.match(regExp));
// 输出结果：
[ '61762', '2991', '87321' ]
</code></pre>
<p>解答：</p>
<ul>
<li>“61762”是左边的懒惰匹配出 6，右边的贪婪匹配出 1762；</li>
<li>“2991”是左边的懒惰匹配出 2，右边的贪婪匹配出 991；</li>
<li>“87321”左边的懒惰匹配出 8，右边的贪婪匹配出 7321。</li>
</ul>
<h1 id="反义">反义</h1>
<p>前面说到元字符的都是要匹配什么什么，当然如果你想反着来，不想匹配某些字符，正则也提供了一些常用的反义元字符：</p>
<table>
<thead>
<tr>
<th>元字符</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\W</code></td>
<td>匹配任意不是字母，数字，下划线，汉字的字符</td>
</tr>
<tr>
<td><code>\S</code></td>
<td>匹配任意不是空白符的字符</td>
</tr>
<tr>
<td><code>\D</code></td>
<td>匹配任意非数字的字符</td>
</tr>
<tr>
<td><code>\B</code></td>
<td>匹配不是单词开头或结束的位置</td>
</tr>
<tr>
<td><code>[^x]</code></td>
<td>匹配除了 x 以外的任意字符</td>
</tr>
<tr>
<td><code>[^aeiou]</code></td>
<td>匹配除了 aeiou 这几个字母以外的任意字符</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式——NFA]]></title>
        <id>https://tdmaker.github.io/faded/post/regular-expression-nfa/</id>
        <link href="https://tdmaker.github.io/faded/post/regular-expression-nfa/">
        </link>
        <updated>2020-04-06T02:36:48.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://juejin.im/post/5bbab1f5f265da0aa94a2842">正则表达式和NFA</a></p>
</blockquote>
<h1 id="nfa">NFA</h1>
<p>NFA 是指 Nondeterministic Finite Automaton，非确定有限状态自动机。</p>
<ul>
<li>
<p>目前正则表达式引擎主要有两种：NFA 和 DFA；</p>
</li>
<li>
<p>JavaScript 采用的是 NFA 引擎。<br>
<img src="https://tdmaker.github.io/faded//post-images/finite-automaton.png" alt="有限状态机" loading="lazy"><br>
状态机中有这样一些要素，对照上图分别说下：</p>
</li>
<li>
<p><strong>开始状态</strong>：圆圈表示状态，被一个“没有起点的箭头”指向的状态，是开始状态，上例中是 S1；</p>
</li>
<li>
<p><strong>最终状态</strong>：也叫接受状态，图中用双圆圈表示，这个例子中也是 S1；</p>
</li>
<li>
<p><strong>输入</strong>：在一个状态下，向状态机输入的符号/信号，不同输入导致状态机产生不同的状态改变；</p>
</li>
<li>
<p><strong>转换</strong>：在一个状态下，根据特定输入，改变到特定状态的过程，就是转换。</p>
</li>
</ul>
<p>所以有限状态机的工作过程，就是从开始状态，根据不同的输入，自动进行状态转换的过程。</p>
<p>上图中的状态机的功能，是检测二进制数是否含有偶数个 0。从图上可以看出，输入只有 1 和 0 两种。从 S1 状态开始，只有输入 0 才会转换到 S2 状态，同样 S2 状态下只有输入 0 才会转换到 S1。所以，二进制数输入完毕，如果满足最终状态，也就是最后停在 S1 状态，那么输入的二进制数就含有偶数个 0。<br>
正则表达式，可以认为是对一组字符串集合的描述。例如 <code>(a+|b)c</code> 对应的字符串集合是：</p>
<pre><code class="language-javascript">ac
bc
aac
aaac
aaaac
...
</code></pre>
<p>有限状态机也可以用来描述字符串集合，同样是正则表达式所描述的集合，用有限状态机来表示，可以是这样的：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586143387008.png" alt="正则表达式的有限状态机表示" loading="lazy"><br>
并且，有限状态机是可以“<strong>执行</strong>”的，给出如上的状态机之后，就可以用来对输入的字符串进行检测。如果最终匹配，也就意味着输入的字符串和正则表达式 <code>(a+|b)c</code> 匹配。<br>
所以，编程语言中的正则表达式，一般是通过有限状态机来实现。正则表达式匹配字符串的过程，可以分解为：</p>
<ul>
<li>正则表达式转换为等价的有限状态机；</li>
<li>有限状态机输入字符串执行。</li>
</ul>
<p>这里再讲一下 NFA 和 DFA 的区别。DFA 是 Deterministic Finite Automaton，确定有限状态机。DFA 可以认为是一种特殊的 NFA，它最大的特点，就是确定性。它的确定性在于，在一个状态下，输入一个符号，一定是转换到确定的状态，没有其他的可能性。<br>
举个例子，对于正则表达式 <code>ab|ac</code>，对应 NFA 可以是这样的：<br>
<img src="https://tdmaker.github.io/faded//post-images/regular-expression-nondeterministic-finite-automaton.png" alt=" 非确定性有限自动机" loading="lazy"><br>
可以看到，在状态 1 这里，如果输入 <code>a</code>，其实有两种可能，如果后面的符号是 <code>b</code>，那么可以匹配成功，后面符号是 <code>c</code> 也能匹配成功。所以状态机在执行过程中，可能要尝试所有的可能性。在尝试一种可能路径匹配失败后，还要回到之前的状态再尝试其他的路径，这就是“<strong>回溯</strong>”。<br>
但是 DFA 消除了这种不确定性，所以可以想见，其执行性能应该要比 NFA 更好，因为不需要回溯。<br>
NFA 是可以转换为等价的 DFA 的，也就是说，理论上讲，正则表达式可以用 DFA 来实现，从而获得优于 NFA 的执行性能。但是 NFA 转换 DFA 的过程，会消耗更多资源，甚至最终得到的 DFA 要占用大量存储空间（据有的资料的说法，可能会产生指数级增长）。而且，DFA 相比 NFA，在实现一些正则表达式的特性时会更复杂，成本更高。所以当前的许多编程语言，其正则表达式引擎为 NFA 模式。</p>
<pre><code class="language-javascript">/nfa|nfa not/.test('nfa not');
</code></pre>
<p>用上面的正则表达式来测试字符串 <code>nfa not</code>，NFA 引擎在检测满足 <code>nfa</code> 就返回匹配成功的结果了，而 DFA 则会尝试继续查找，也就是说会得到“<strong>最长的匹配结果</strong>”。</p>
<h1 id="从正则表达式到-nfa">从正则表达式到 NFA</h1>
<h2 id="thompson-算法">🏈Thompson 算法</h2>
<p>Thompson 算法用于转换正则表达式为 NFA，它并非最高效的算法，但是实用，易于理解。<br>
Thompson 算法中使用最基本的两种转换：<img src="https://tdmaker.github.io/faded//post-images/regular-expression-thompson-transmission.png" alt="Thompson 转换" loading="lazy"><br>
<strong>普通转换</strong>就是在一个状态下，输入字符 <code>a</code> 后转换至另一个状态；<strong>epsilon转换</strong>则不需要有输入，就从一个状态转换至另一个状态。</p>
<p>正则表达式中的各种运算，可以通过组合上述两种转换实现：</p>
<ul>
<li>组合转换 RS：<img src="https://tdmaker.github.io/faded//post-images/regexp-thompson-combination.png" alt="组合转换 RS" loading="lazy"></li>
<li>替换转换 R|S：<img src="https://tdmaker.github.io/faded//post-images/regexp-thompson-replace.png" alt="替换转换 R|S" loading="lazy"></li>
<li>重复转换 R*：<img src="https://tdmaker.github.io/faded//post-images/regexp-thompson-repeat.png" alt="重复转换 R*" loading="lazy"></li>
</ul>
<p>上面图中的 R、S 是有开始状态和结束状态的 NFA。<br>
以正则表达式 ab|c 为例，包括两个运算：</p>
<ul>
<li><code>ab</code> 组合</li>
<li><code>ab</code> 的结果，与 <code>c</code> 替换<br>
这样我们把正则表达式视为一系列输入和运算，进行分解、组合，就可以得到最终的 NFA。<br>
首先，我们要把正则表达式转换为方便记录输入、运算的方式。</li>
</ul>
<h2 id="正则表达式-后缀表达式">🏈正则表达式 → 后缀表达式</h2>
<p>后缀表达式是一种方便记录输入、运算的表达式，本身已包含了运算符的优先级，也称为<strong>逆波兰表示法</strong>（Reverse Polish Notation，简写为 RPN）。<br>
为方便记录运算，我们为正则表达式中的组合运算也创建一个运算符“<code>.</code>”（本文只涉及最简单的正则表达式形式，这里的“<code>.</code>”不是用于匹配任意字符的特殊符号）。<br>
正则表达式 <code>ab|c</code>对应的后缀表达式为 <code>ab.c|</code>。<br>
这样，通过逐个扫描后缀表达式，并识别其中的运算符来执行，就可以对后缀表达式进行求解。对于正则表达式来说，则是在将其变为后缀表达式后，通过“求值”的过程来进一步构建并得到最终的 NFA。<br>
用于创建后缀表达式的是<strong>调度场算法</strong>。<br>
对于这里的正则表达式处理的场景，算法的大致描述如下：</p>
<ul>
<li>创建输出队列 output 和运算符栈 ops；</li>
<li>依次读取输入字符串中每一个字符 ch；
<ul>
<li>如果 ch 是普通字符，追加到 output；</li>
<li>如果 ch 是运算符，只要 ops 栈顶的运算符优先级不低于 ch，依次出栈并追加到 output，最后将 ch 入栈 ops；</li>
<li>如果 ch 是“(”，入栈 ops；</li>
<li>如果 ch 是“)”，只要 ops 栈顶不是“(”，依次出栈并追加到 output；</li>
</ul>
</li>
<li>将 ops 中运算符依次出栈追加到 output；</li>
<li>返回 output。</li>
</ul>
<p>具体处理过程中，由于原始正则表达式中并没有组合运算符，所以需要自行判断合理的插入位置。<br>
运算符优先级如下（由高到低）：</p>
<ol>
<li><code>* ? +</code></li>
<li><code>.</code></li>
<li><code>|</code></li>
<li><code>(</code></li>
</ol>
<h2 id="后缀表达式-nfa">🏈后缀表达式 → NFA</h2>
<p>基于后缀表达式创建 NFA，是一个由简单的 NFA 进行不断组合得到复杂 NFA 的过程。<br>
用于表示状态 State 的数据结构为：</p>
<pre><code class="language-javascript">// State
{
	id: String,
	type: String, // 'n' - normal, 'e' - epsilon, 'end'
	symbol: String, // 普通状态对应的输入字符
	out: State, // 允许的下一个状态
	out1: State // 允许的下一个状态
}
</code></pre>
<p>每个状态可以对应最多两个 out 状态，像 <code>a|b|c</code> 的表达式，会被分解为 <code>(a|b)|c</code>，每次运算符“<code>|</code>”都只处理两个（子）表达式。<br>
在构造最终 NFA 过程中，每次会创建 NFA 的片段 Fragment：</p>
<pre><code class="language-javascript">// Fragment
{
    start: State,
    out: State
}
</code></pre>
<p>不管 NFA 片段内部是怎样复杂，它都只有一个入口（开始状态），一个出口（最终状态）。<br>
处理的过程大致为：</p>
<ul>
<li>创建用于记录 NFA 片段的栈 stack；</li>
<li>依次读取输入的后缀表达式的每个字符 ch；
<ul>
<li>如果 ch 是运算符，从 stack 出栈所需数目的 NFA 片段，构建新的 NFA 片段后入栈 stack；</li>
<li>如果 ch 是普通字符，创建新的状态，并构建只包含此状态的 NFA 片段入栈 stack；</li>
</ul>
</li>
<li>返回 stack 栈顶的 NFA 片段，即最终结果。</li>
</ul>
<p>以对组合运算的处理为例：</p>
<pre><code class="language-javascript">const e2 = stack.pop();
const e1 = stack.pop();
e1.out.out = e2.start;
stack.push(new Fragment(e1.start, e2.out));
</code></pre>
<p>从 stack 出栈两个 NFA 片段，然后将其首尾相连后构建新的 NFA 片段再入栈。</p>
<h1 id="nfa-的执行">NFA 的执行</h1>
<p>NFA 的执行过程就是用当前状态来比对字符串的当前字符，如果匹配就继续比对下一个状态和下一个字符，否则匹配失败。<br>
不过由于 NFA 的不确定性，所以可能会同时有多个匹配的状态。</p>
<h1 id="总结">总结</h1>
<p>综上，正则表达式的执行，可以通过构建等价的 NFA，然后执行 NFA 来匹配输入的字符串。真实的 JavaScript 中的正则表达式拥有更多的特性，其正则表达式引擎也更加复杂。</p>
<h1 id="简单正则表达式引擎的实现">简单正则表达式引擎的实现</h1>
<blockquote>
<p><a href="https://www.jianshu.com/p/879bb15b1198">简单的正则表达式引擎实现</a></p>
</blockquote>
<h2 id="基本的数据结构定义">🏈基本的数据结构定义</h2>
<p>核心思路是读取正则表达式以后生成对应的NFA，NFA中有边和状态两个结构。边的结构记录了它的起点和终点，同时通过枚举类型记录匹配的其他需求。</p>
<pre><code class="language-cpp">//用于处理‘^’字符
enum { NEXCLUDED = false, EXCLUDED = true }; 
//用于处理预处理类型，0-128以内ASCII字符直接匹配
enum { LCASES=256, UCASES=257, NUM=258, EPSILON=259, ANY=260, WS=261 };
class Edge
{
public:
    State *start;
    State *end;
    int type;
    int exclude;
    Edge(State *s, State *e, int t, bool ex = NEXCLUDED) :start(s), end(e), type(t), exclude(ex) {};
}
</code></pre>
<p>状态有预备，成功和失败三种，同时每个状态维护两个向量，向量存储了出边和入边的指针。</p>
<pre><code class="language-cpp">enum { READY = -1, SUCCESS = 1, FAIL = 0};
class State
{
public:
    int status;
    std::list&lt;Edge *&gt; InEdges;
    std::list&lt;Edge *&gt; OutEdges;
}
</code></pre>
<p>NFA 类会存储一个正则表达式，同时存储 NFA 的起点和终点，并使用了两个链表来维护 NFA 的边和状态，同时用一个链表来存储匹配成功的字符串。两个静态的字符串指针用于记录文件和正则表达式字符串的读取状态，静态常量，使得最终函数只会对文件内容和正则表达式扫描一次，避免在匹配成功的字符串中再匹配子串。</p>
<pre><code class="language-cpp">char *regex;
    State *Start;
    State *End;
    std::list&lt;Edge *&gt; edgeList;
    std::list&lt;State *&gt; stateList;
    std::list&lt;char&gt; matchedChar;
    static char *regRead;
    static char *fileRead;
}
</code></pre>
<p>生成NFA的过程中，通过 currentEnd 和 currentStart 两个指针分别指向当前字符读取完成后生成的最后一个状态和当前字符读取之前的开始状态，维护这两个指针的目的是为了记录 NFA 的生成过程，在处理‘<code>*</code>’、‘<code>+</code>’、‘<code>？</code>’等字符的时候起到了重要的作用。同时我们利用list内置的迭代器对链表进行遍历，这个方式在匹配过程中也用到了。</p>
<pre><code class="language-cpp">State *currentEnd, *currentStart;
State *alternate;
list&lt;Edge *&gt;::iterator itor;
</code></pre>
<h2 id="nfa的生成">🏈NFA的生成</h2>
<p>关键的部分在于匹配字符串时采取的思路，尤其是特殊字符的生成 NFA 的方式，这个不同于课本上最开始的 NFA 生成算法，而是基于读取字符串的过程，同时避免了字符串的回退等，读取一个字符就生成一个对应的边并压入链表中，对‘<code>*</code>’、‘<code>+</code>’，‘<code>？</code>’和特殊符号也是如此，使得处理更加简单的同时避免生成过于冗余的状态，兼顾了时间和空间效率。以下举例说明。</p>
<h2 id="边和状态的生成">🏈边和状态的生成</h2>
<p>边的生成使用 newEdge 函数,需要记录起点和终点，以及类型，同时在生成边以后要用重载的两个 patch函数将状态和边完全连接起来。</p>
<pre><code class="language-cpp">void Nfa::newEdge(State * start, State * end, int type, int exclude = NEXCLUDED)
{
    Edge *out = new Edge(start, end, type, exclude);
    end-&gt;patch(out, end);
    start-&gt;patch(start, out);
    edgeList.push_back(out);
}
</code></pre>
<p>以普通字符的生成和‘<code>.</code>’字符的产生方式为例，他们都是生成一条边和一个新的状态。</p>
<pre><code class="language-cpp">case '.':   /* any */
    currentStart = currentEnd;
    currentEnd = new State();
    newEdge(currentStart, currentEnd, ANY, NEXCLUDED);      
    stateList.push_back(currentEnd);
default:
    currentStart = currentEnd;
    currentEnd = new State();
    newEdge(currentStart, currentEnd, *regRead, NEXCLUDED);
    stateList.push_back(currentEnd);
    break;
</code></pre>
<p>如下图所示：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586155514824.png" alt="create new edge" loading="lazy"><br>
接下来的符号处理都假定初始状态如下图所示：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586155565253.png" alt="current stage" loading="lazy"></p>
<h2 id="的处理">🏈'|'的处理</h2>
<p>以 currentStart 指向的状态作为子 NFA 的起点，同时将子 NFA 的终点状态和原 NFA 的终点进行合并。</p>
<pre><code class="language-cpp">case '|':   // alternate 
    regRead++;
    currentStart = start;
    alternate= regex2nfa(regRead, start);
    currentEnd-&gt;merge(alternate);
    stateList.remove(alternate);
    regRead--;
</code></pre>
<p>如下图所示：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586155719185.png" alt="spilt the edges" loading="lazy"></p>
<h2 id="的处理-2">🏈'?' &amp; '*' &amp; '+'的处理</h2>
<p>读取到‘<code>?</code>’只需要在上一条边的基础上继续连接原有的边即可：</p>
<pre><code class="language-cpp">case '?':   // zero or one 
    newEdge(currentStart, currentEnd, EPSILON, NEXCLUDED);
    break;
</code></pre>
<p>读取到‘<code>\*</code>’后，直接将 currentStart 和 currentEnd 进行合并成环：</p>
<pre><code class="language-cpp">case '*':   // zero or more 
    alternate = currentEnd;
    currentStart-&gt;merge(alternate);
    stateList.remove(alternate);
    currentEnd = currentStart;
    break;
</code></pre>
<p>读取到‘<code>+</code>’后，只需添加若干条边从 currentEnd 状态指向 currentStart 状态的下一个状态即可：</p>
<pre><code class="language-cpp">case '+':   /* one or more */
    itor = currentStart-&gt;OutEdges.begin();
    for (;itor != currentStart-&gt;OutEdges.end();itor++)
        newEdge(currentEnd, (*itor)-&gt;end, (*itor)-&gt;type, (*itor)-&gt;exclude);
    break;
</code></pre>
<p>如下图所示：<br>
<img src="https://tdmaker.github.io/faded//post-images/1586156107334.png" alt="special characters" loading="lazy"></p>
<h2 id="简单的分组支持">🏈简单的分组支持</h2>
<p>对于中括号和括号进行了一定的支持，括号直接递归调用 NFA 的生成函数，中括号和预定义字符都有其对应的函数进行支持。</p>
<h2 id="nfa匹配">🏈NFA匹配</h2>
<p>匹配过程采用了递归的方式，step函数调用match函数匹配边和文件字符，匹配成功后即递归调用进入下一个状态。</p>
<pre><code class="language-cpp">if (End-&gt;status == SUCCESS) 
        return SUCCESS;

for(;itor != current-&gt;OutEdges.end();itor++)
{   
    if ((*itor)-&gt;match(fileRead))
    {
        (*itor)-&gt;end-&gt;status = SUCCESS;
        matchedChar.push_back(*fileRead);
        ++fileRead;
        if (step((*itor)-&gt;end))
            return SUCCESS;
            --fileRead;
        matchedChar.pop_back();
    }
    if ((*itor)-&gt;type == EPSILON &amp;&amp; step((*itor)-&gt;end))
        return SUCCESS;
}
return FAIL;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式——断言]]></title>
        <id>https://tdmaker.github.io/faded/post/regular-expression-assert/</id>
        <link href="https://tdmaker.github.io/faded/post/regular-expression-assert/">
        </link>
        <updated>2020-04-06T01:54:20.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p><a href="https://www.jianshu.com/p/08c2fa742c1b">正则表达式断言</a></p>
</blockquote>
<p>正则表达式大多数结构匹配的文本会出现在最终的匹配结果中，但也有些结构并不真正匹配文本，而只是负责判断某个位置左/右侧是否符合要求，这种结构被称为断言（assertion）。常见的断言有三类： 单词边界、行起始/结束位置、环视。本文主要简单阐述对三类断言的理解。</p>
<h1 id="单词边界">单词边界</h1>
<p>单词边界顾名思义，是指单词字符 <code>(\w)</code> 能匹配的字符串的左右位置。在 JavaScript、php、Python 2、Ruby 中，单词字符 <code>(\w)</code> 等同于 <code>[0-9a-zA-Z]</code>，所以在这些语言中，给定一段文本可以用 <code>\b\w+\b</code> 把所有单词提取出来。<br>
例如：</p>
<pre><code class="language-javascript">('Love is composed of a single soul inhabiting two bodies.').match(/\b\w+\b/g)

return [&quot;Love&quot;, &quot;is&quot;, &quot;composed&quot;, &quot;of&quot;, &quot;a&quot;, &quot;single&quot;, &quot;soul&quot;, &quot;inhabiting&quot;, &quot;two&quot;, &quot;bodies&quot;]
</code></pre>
<p>这里值得注意的是，有些单词例如 E-mail 和组合词 I'm 这样的，<code>\b\w+\b</code> 是无法匹配的。如要匹配，可根据需求修改为 <code>\b['-\w]\b</code>。</p>
<ul>
<li><strong>单词边界</strong>记为 <code>\b</code>，它能匹配的位置：一边是单词字符 <code>\w</code>，一边是非单词字符 <code>\W</code>。</li>
<li>与单词边界对应的是<strong>非单词边界</strong> <code>\B</code>，两者关系类似 <code>\w</code> 与 <code>\W</code>、<code>\d</code> 与 <code>\D</code>。</li>
</ul>
<p>这里注意，<strong>非单词边界</strong>（<code>\B</code>）和<strong>单词字符</strong>（<code>\w</code>）是不一样的，因为前者是<strong>断言</strong>，而后者是<strong>普通匹配</strong>。<br>
例如：</p>
<pre><code class="language-javascript">// 式一
String(1234567890).replace(/(?=(\B)(\d{3})+$)/g, ',')
=&gt; 1,234,567,890
// 式二
String(1234567890).replace(/(?=(\w)(\d{3})+$)/g, ',')
=&gt; ,123,456,7890
// 附加常用例子，20180911格式化为2018-09-11
'20180911'.replace(/(?=\B(\d{2})+$)/g, '-').replace(/-/, '')
=&gt;2018-09-11
</code></pre>
<p>造成差异的原因就是:<br>
式一中的 <code>\B</code> 匹配边界（是断言）。第一次匹配时，在 1234567890 中数字 1 的前方时，会环视后方进行肯定断言<code>(?=)</code>：后方必须是满足两个 pattern 才通过。第一个 pattern <code>(\B)</code>在数字 1 的前方匹配成功；故继续在此位置匹配第二个 pattern <code>(\d{3})+$</code>，发现 123456789 之后并不是结束符（结束符和开始符也是断言，下文讲述），故匹配失败。开始第二次匹配，从数字 1 和数字 2 的中间开始...最后会匹配成功三个位置：1 和 2 之间、4 和 5 之间、7 和 8 之间，再被,替换，故得到结果。</p>
<p>同理，式二在第一次匹配时，在数字 1 的前方环视后方进行肯定断言：后方必须是满足两个 pattern 才通过。第一个 pattern <code>(\w)</code> 在数字 1 的前方匹配成功，并将匹配位置移动到 1 和 2 之间；然后继续匹配第二个pattern <code>(\d{3})+$</code>...第一次匹配成功，故数字 1 前方的断言是成功的，标记该位置...最后得到三个位置：1 前方、3 和 4 之间、6 和 7 之间，再被,替换，故得到结果。</p>
<p>所以 <code>\B</code> 只是去判断该位置左右是否只有一边有单词字符，另一边不是单词字符，且在匹配成功时，不会导致匹配位置发生改变。说起来算是一种判断吧~</p>
<p>这种只是匹配某个位置而不是文本的元字符，在正则中也被称为<strong>锚点</strong>。下文继续介绍常见锚点之二：行起始/结束位置。</p>
<h1 id="行起始结束位置">行起始/结束位置</h1>
<p><code>^</code> 与 <code>$</code> 分别表示（行）起始位置和（行）结束位置，比如正则表达式 <code>/^lu.*r$/</code> 只能匹配的 lu 开始并以 r 结束的字符串，例如：luwuer、lu fd --r，不能匹配 nb luwuer、lu fd --rb等。</p>
<p>其实行起始/结束位置断言，常用在正则表达式开启<strong>多行模式</strong>（Multiline Mode）的情况下。<br>
例如：</p>
<pre><code class="language-javascript">('first line\nsecond line\nlast line').match(/^\w+/gm)
return [&quot;first&quot;, &quot;second&quot;, &quot;last&quot;]
</code></pre>
<p>既然是多行匹配，这里说说如何划分<strong>行</strong>。</p>
<p>在编辑文本时，敲回车键就向文本输入了<strong>行终止符</strong>（line terminal），表示结束当前行。这里只需注意，敲入回车时向文本中输入的行终止符在主流平台上是有差别的：</p>
<ul>
<li>Windows 的行终止符是 <code>\r\n</code>。</li>
<li>UNIX/Linux/Mac OS 的行终止符是 <code>\n</code>。</li>
</ul>
<p>不过正则的行起始/结束位置断言都是可以识别的哈~</p>
<h1 id="环视">环视</h1>
<p>环视是指在某个位置向左/向右看，保证其左/右位置必须出现某类字符（包括单词字符 <code>\w</code> 和非单词字符<code>\W</code>），且环视也同上两个断言，只是做一个判断（匹配一个位置，本身不匹配任何字符，但又比上两个断言灵活）。也有人称环视为<strong>零宽断言</strong>。</p>
<p>环视分为四种：</p>
<ul>
<li><strong>肯定顺序</strong>环视（正向肯定断言）positive-lookahead: <code>?=pattern</code>；</li>
<li><strong>否定顺序</strong>环视（正向否定断言）negative-lookahead: <code>?!pattern</code>；</li>
<li><strong>肯定逆序</strong>环视（反向肯定断言）positive-lookahead: <code>?&lt;=pattern</code>，js不支持；</li>
<li><strong>否定逆序</strong>环视（反向否定断言）negative-lookahead: <code>?&lt;=pattern</code>，js不支持。</li>
</ul>
<p>比如我们要匹配一串文字中包含在书名号《》中的书名，如不考虑环视可能需要如下实现：</p>
<pre><code class="language-javascript">('三体是刘慈欣创作的系列长篇科幻小说，由《三体》、《三体Ⅱ·黑暗森林》、《三体Ⅲ·死神永生》组成。').match(/《.*?》/g).join(',').replace(/[《》]/g, '').split(',')
return [&quot;三体&quot;, &quot;三体Ⅱ·黑暗森林&quot;, &quot;三体Ⅲ·死神永生&quot;]
</code></pre>
<p><em>正则默认是贪婪模式（在整个表达式匹配成功的前提下，尽可能多的匹配），开启非贪婪模式（在整个表达式匹配成功的前提下，尽可能少的匹配）的方法：在贪婪量词 <code>{m,n}</code>、<code>{m,}</code>、<code>?</code>、<code>*</code>、<code>+</code> 后加上一个 <code>?</code> 号，例如 <code>+?</code>。</em><br>
而在使用环视时会更简单：</p>
<pre><code class="language-javascript">('三体是刘慈欣创作的系列长篇科幻小说，由《三体》、《三体Ⅱ·黑暗森林》、《三体Ⅲ·死神永生》组成。').replace(/《/g,'\n').match(/^.*?(?=》)/gm)
return [&quot;三体&quot;, &quot;三体Ⅱ·黑暗森林&quot;, &quot;三体Ⅲ·死神永生&quot;]
</code></pre>
<p>似乎也没简单多少...当然最主要的原因是js不支持逆序环视啦啦啦</p>
<p>再举例，匹配6位数字构成的字符串：</p>
<pre><code class="language-javascript">// 无环视
'http://luwuer.com/629212/1234567890'.match(/[^\d]\d{6}[^\d]/g).join('').match(/\d{6}/g)
return [&quot;629212&quot;]
// 环视
'http://luwuer.com/629212/1234567890'.match(/(?!\d).\d{6}(?!\d)/g).join('').match(/\d{6}/g)
return [&quot;629212&quot;]
</code></pre>
<p>其实环视在js中更多的是与replace函数组合，就像在单词边界一节中最后的例子。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[jQuery——拓展]]></title>
        <id>https://tdmaker.github.io/faded/post/jquery-extension/</id>
        <link href="https://tdmaker.github.io/faded/post/jquery-extension/">
        </link>
        <updated>2020-04-05T10:01:07.000Z</updated>
        <content type="html"><![CDATA[<h1 id="extend函数">😲 extend函数</h1>
<p><code>$.extend(target,[object1],[onjectN])</code><br>
<code>$.extend([deep],target,object1,[objectN])</code></p>
<pre><code class="language-javascript">var obj1 = {
	height: 100,
	width: 100,
	length: 100,
	div: {
		x: 100,
		y: 100
	}
};
var obj2 = {
	height: 200,
	width: 200,
	div: {
		x: 200
	}
};
$.extend(obj1, obj2);
console.log(obj1.height);
console.log(obj1.div.y);
//result:200,undefined
</code></pre>
<p>当使用true参数时，</p>
<pre><code class="language-javascript">var obj1 = {
	height: 100,
	width: 100,
	length: 100,
	div: {
		x: 100,
		y: 100
	}
};
var obj2 = {
	height: 200,
	width: 200,
	div: {
		x: 200
	}
};
$.extend(true, obj1, obj2);
console.log(obj1.height);
console.log(obj1.div.y);
//result:200,100
</code></pre>
<p>拓展jQuery的公共函数</p>
<pre><code class="language-javascript">$.extend({
	minValue: function(a, b) {
		return a &gt; b ? a: b
	}
});
var a = prompt(&quot;input a&quot;);
var b = prompt(&quot;input b&quot;);
console.log($.minValue(a, b));
</code></pre>
<p><code>$.fn.extend()</code> 方法可以创建 jQuery 对象方法</p>
<pre><code class="language-javascript">$.fn.extend({
	test: function() {
		alert(&quot;click &quot; + $(this).html() + &quot; this is test function&quot;);
	}
});
$(&quot;#fnExtend&quot;).click(function() {
	$(this).test();
});
</code></pre>
<h1 id="自定义jquery函数">😲 自定义jQuery函数</h1>
<h2 id="添加新的全局函数">🤗 添加新的全局函数</h2>
<pre><code class="language-javascript">$.clickDiv = function(node) {
	console.log(node.text() + &quot; click&quot;);
};
$(&quot;div&quot;).click(function() {
	$.clickDiv($(this));
});
</code></pre>
<h2 id="通过-extend-函数添加全局函数">🤗 通过 <code>extend</code> 函数添加全局函数</h2>
<pre><code class="language-javascript">$.extend({
	foo: function() {
		alert(&quot;this is a new function 'foo()'&quot;);
	}
});
$.foo();
</code></pre>
<h2 id="使用命名空间">🤗 使用命名空间</h2>
<pre><code class="language-javascript">$.myPluin = {
	ale: function() {
		alert(&quot;function from myPluin&quot;);
	}
};
$.nextPluin = {
	ale: function() {
		alert(&quot;function from nextPluin&quot;);
	}
}
$.myPluin.ale();
$.nextPluin.ale();
</code></pre>
<h1 id="自定义选择器">😲 自定义选择器</h1>
<pre><code class="language-javascript">$.myPluin = {
	ale: function() {
		alert(&quot;function from myPluin&quot;);
	}
};
$.nextPluin = {
	ale: function() {
		alert(&quot;function from nextPluin&quot;);
	}
};
index = -1; //定义全局变量 index
jQuery.expr[&quot;:&quot;].le = function(elem, i, match) {
	// return i&gt;match[3]-0||i==match[3]
	console.log(index);
    index++;
	return index &gt; match[3] - 0; // 返回索引大于 3 的元素
};
$(&quot;p:le(2)&quot;).css(&quot;color&quot;, &quot;red&quot;);
// 返回元素索引值大于等于 2 的元素
$.myPluin.ale();
$.nextPluin.ale();
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[jQuery——选择器]]></title>
        <id>https://tdmaker.github.io/faded/post/jquery-selectors/</id>
        <link href="https://tdmaker.github.io/faded/post/jquery-selectors/">
        </link>
        <updated>2020-04-05T08:48:48.000Z</updated>
        <content type="html"><![CDATA[<h1 id="基本选择器">基本选择器</h1>
<h2 id="id-选择器">🎼 ID 选择器：</h2>
<pre><code class="language-javascript">// 选中 id 为 myDiv 的元素，速度最快
$(&quot;#myDiv&quot;)
</code></pre>
<h2 id="类选择器">🎼 类选择器：</h2>
<pre><code class="language-javascript">// 选中 class 属性为 red 的所有元素
$(&quot;.red&quot;)
</code></pre>
<h2 id="元素选择器">🎼 元素选择器：</h2>
<pre><code class="language-javascript">// 选中所有 div 元素
$(&quot;div&quot;)
</code></pre>
<h2 id="通配符选择器">🎼 通配符选择器：</h2>
<pre><code class="language-javascript">// 选中所有元素
$(&quot;*&quot;)
</code></pre>
<h2 id="复合选择器">🎼 复合选择器：</h2>
<pre><code class="language-javascript">// 选中所有 span 元素和所有 id 为 myDiv 的元素
$(&quot;span,#myDiv&quot;)
</code></pre>
<h1 id="层次选择器">层次选择器</h1>
<h2 id="选择器1-选择器2">🎼 选择器1 选择器2：</h2>
<pre><code class="language-javascript">// 选中 body 内的所有 div 元素
$(&quot;body div&quot;)
</code></pre>
<h2 id="选择器1-选择器2-2">🎼 选择器1 &gt; 选择器2：</h2>
<pre><code class="language-javascript">// 选中 body 内的所有直接 div 元素，不查找间接元素
$(&quot;body &gt; div&quot;)
</code></pre>
<h2 id="选择器1-选择器2-3">🎼 选择器1 + 选择器2：</h2>
<pre><code class="language-javascript">// 选中 body 内的所有 div 元素
$(&quot;body div&quot;)
</code></pre>
<h2 id="选择器1-~-选择器2">🎼 选择器1 ~ 选择器2：</h2>
<pre><code class="language-javascript">// 选中 body 内的所有 div 元素
$(&quot;body div&quot;)
</code></pre>
<h1 id="基本过滤选择器">基本过滤选择器</h1>
<h2 id="第一个元素选择器">🎼 第一个元素选择器</h2>
<pre><code class="language-javascript">// 选中第一个 div 元素
$(&quot;div:first&quot;)
</code></pre>
<h2 id="最后一个元素选择器">🎼 最后一个元素选择器</h2>
<pre><code class="language-javascript">// 选中最后一个 div 元素
$(&quot;div:last&quot;)
</code></pre>
<h2 id="排除选择器">🎼 排除选择器</h2>
<pre><code class="language-javascript">// 选中 class 不为 red 的所有 div 元素
$(&quot;div:not(.red)&quot;)
</code></pre>
<h2 id="偶数选择器">🎼 偶数选择器</h2>
<pre><code class="language-javascript">// 选中索引值为偶数的 div 元素
$(&quot;div:even&quot;)
</code></pre>
<h2 id="奇数选择器">🎼 奇数选择器</h2>
<pre><code class="language-javascript">// 选中索引值为奇数的 div 元素
$(&quot;div:odd&quot;)
</code></pre>
<h2 id="索引值选择器">🎼 索引值选择器</h2>
<pre><code class="language-javascript">// 选中索引值为 2 的 div 元素
$(&quot;div:eq(2)&quot;)
// 选中索引值大于 2 的 div 元素
$(&quot;div:gt(2)&quot;)
// 选中索引值小于2的 div 元素
$(&quot;div:lt(2)&quot;)
</code></pre>
<h1 id="内容过滤选择器">内容过滤选择器</h1>
<pre><code class="language-javascript">// 选中所有包含文本 ok 的 div 元素
$(&quot;div:contains(ok)&quot;)
// 选中所有为空的 div 元素
$(&quot;div:empty&quot;)
// 选中所有包含 class 为 red 的 div 元素
$(&quot;div:has(.red)&quot;)
// 选中所有不为空的 div 元素
$(&quot;div:parent&quot;)
</code></pre>
<h1 id="可见性过滤选择器">可见性过滤选择器</h1>
<pre><code class="language-javascript">// 选中所有不可见的 div 元素
$(&quot;div:hidden&quot;)
// 选中所有可见的 div 元素
$(&quot;div:visible&quot;)
</code></pre>
<h1 id="属性过滤选择器">属性过滤选择器</h1>
<pre><code class="language-javascript">// 选中所有包含属性 title 的 div 元素
$(&quot;div[title]&quot;)
// 选中所有属性 title 等于 ok 的 div 元素
$(&quot;div[title=ok]&quot;)
// 选中所有属性 title 不等于 ok 的 div 元素
$(&quot;div[title!=ok]&quot;)
// 选中所有属性 title 值以 ok 开头的 div 元素
$(&quot;div[title^=ok]&quot;)
// 选中所有属性 title 值含有 ok 的 div 元素
$(&quot;div[title*=ok]&quot;)
// 选中所有包含属性 id，并且属性 title 值以 ok 开头的 div 元素
$(&quot;div[id][title^=ok]&quot;)
</code></pre>
<h1 id="子元素过滤选择器">子元素过滤选择器</h1>
<pre><code class="language-javascript">// 选中所有是第二个子结点的 div 元素
$(&quot;div:nth-child(2)&quot;)
// 选中所有是第一个子结点的 div 元素
$(&quot;div:first-child&quot;)
// 选中所有是最后一个子结点的 div 元素
$(&quot;div:last-child&quot;)
// 选中所有是唯一子结点的 div 元素
$(&quot;div:only-child&quot;)
</code></pre>
<h1 id="表单属性过滤选择器">表单属性过滤选择器</h1>
<pre><code class="language-javascript">// 选中表单内可用 input
$(&quot;#form1 input:enabled&quot;)
// 选中表单内不可用 input
$(&quot;#form1 input:disabled&quot;)
// 选中表单内所有选中的元素
$(&quot;#form1 input:checked&quot;)
// 选中下拉列表中选中的元素
$(&quot;select &gt; option:selected&quot;)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式——匹配]]></title>
        <id>https://tdmaker.github.io/faded/post/regular-expression-pattern-matching/</id>
        <link href="https://tdmaker.github.io/faded/post/regular-expression-pattern-matching/">
        </link>
        <updated>2020-04-05T07:38:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="pattern">💊(?:pattern)</h1>
<p>非获取匹配，匹配 pattern 但不获取匹配结果，不进行存储供以后使用。这在使用或字符“<code>(|)</code>”来组合一个模式的各个部分是很有用。例如“<code>industr(?:y|ies)</code>”就是一个比“<code>industry|industries</code>”更简略的表达式。</p>
<h1 id="pattern-2">💊 (?=pattern)</h1>
<p>非获取匹配，正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。例如，“<code>Windows(?=95|98|NT|2000)</code>”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</p>
<h1 id="pattern-3">💊 (?!pattern)</h1>
<p>非获取匹配，正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。例如“<code>Windows(?!95|98|NT|2000)</code>”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。</p>
<h1 id="pattern-4">💊 (?&lt;=pattern)</h1>
<p>非获取匹配，反向肯定预查，与正向肯定预查类似，只是方向相反。例如，“<code>(?&lt;=95|98|NT|2000)Windows</code>”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。</p>
<h1 id="pattern-5">💊 (?&lt;!pattern)</h1>
<p>非获取匹配，反向否定预查，与正向否定预查类似，只是方向相反。例如“<code>(?&lt;!95|98|NT|2000)Windows</code>”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。这个地方不正确，有问题</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计师网站]]></title>
        <id>https://tdmaker.github.io/faded/post/su-cai-wang-zhan/</id>
        <link href="https://tdmaker.github.io/faded/post/su-cai-wang-zhan/">
        </link>
        <updated>2020-04-03T16:50:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="设计师导航">设计师导航</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>全球100+知名设计网站</td>
<td><a href="http://www.bigbigwork.com/nav/6.html">http://www.bigbigwork.com/nav/6.html</a></td>
</tr>
<tr>
<td>CND设计网址导航 - 优秀设计网站排名大全</td>
<td><a href="http://wz.cndesign.com/">http://wz.cndesign.com/</a></td>
</tr>
<tr>
<td>拍信</td>
<td><a href="https://www.paixin.com/">https://www.paixin.com/</a></td>
</tr>
<tr>
<td>我图网</td>
<td><a href="https://www.ooopic.com/">https://www.ooopic.com/</a></td>
</tr>
<tr>
<td>包图网</td>
<td><a href="https://ibaotu.com/">https://ibaotu.com/</a></td>
</tr>
<tr>
<td>素材天下</td>
<td><a href="http://www.sucaitianxia.net/">http://www.sucaitianxia.net/</a></td>
</tr>
<tr>
<td>素材中国</td>
<td><a href="http://www.sccnn.com/">http://www.sccnn.com/</a></td>
</tr>
<tr>
<td>站长素材</td>
<td><a href="http://sc.chinaz.com/">http://sc.chinaz.com/</a></td>
</tr>
<tr>
<td>红动中国</td>
<td><a href="https://www.redocn.com/">https://www.redocn.com/</a></td>
</tr>
<tr>
<td>千库网</td>
<td><a href="https://588ku.com/">https://588ku.com/</a></td>
</tr>
<tr>
<td>觅元素</td>
<td><a href="http://www.51yuansu.com/">http://www.51yuansu.com/</a></td>
</tr>
<tr>
<td>unDraw</td>
<td><a href="https://undraw.co/">https://undraw.co/</a></td>
</tr>
<tr>
<td>DrawKit</td>
<td><a href="https://www.drawkit.io/">https://www.drawkit.io/</a></td>
</tr>
<tr>
<td>pngtree</td>
<td><a href="https://pngtree.com/">https://pngtree.com/</a></td>
</tr>
<tr>
<td>VCG</td>
<td><a href="https://www.vcg.com/">https://www.vcg.com/</a></td>
</tr>
<tr>
<td>Textures for 3D, graphic design and Photoshop!</td>
<td><a href="https://www.textures.com/">https://www.textures.com/</a></td>
</tr>
<tr>
<td>無料DTP素材 【素材ページ 】食材・料理の著作権フリー写真</td>
<td><a href="http://www.sozai-page.com/index.html">http://www.sozai-page.com/index.html</a></td>
</tr>
<tr>
<td>免费模板网</td>
<td><a href="http://www.wangjie.org/">http://www.wangjie.org/</a></td>
</tr>
<tr>
<td>Landing page templates for startups</td>
<td><a href="https://cruip.com/">https://cruip.com/</a></td>
</tr>
<tr>
<td>Avataaars Generator</td>
<td><a href="https://getavataaars.com/?avatarStyle=Circle">https://getavataaars.com/?avatarStyle=Circle</a></td>
</tr>
<tr>
<td>中国色</td>
<td><a href="http://zhongguose.com/">http://zhongguose.com/</a></td>
</tr>
<tr>
<td>完美对称无缝平铺背景图底纹素材 - 图鱼</td>
<td><a href="https://www.hituyu.com/">https://www.hituyu.com/</a></td>
</tr>
<tr>
<td>花瓣网_陪你做生活的设计师（创意灵感天堂，搜索、发现设计灵感、设计素材）</td>
<td><a href="https://huaban.com/">https://huaban.com/</a></td>
</tr>
<tr>
<td>站酷 (ZCOOL) - 设计师互动平台 - 打开站酷，发现更好的设计！</td>
<td><a href="https://www.zcool.com.cn/">https://www.zcool.com.cn/</a></td>
</tr>
<tr>
<td>UI中国用户体验设计平台</td>
<td><a href="https://www.ui.cn/">https://www.ui.cn/</a></td>
</tr>
<tr>
<td>68Design - 找兼职设计师就上68Design - 【设计师接单平台】</td>
<td><a href="https://www.68design.net/">https://www.68design.net/</a></td>
</tr>
<tr>
<td>Flat Design Inspiration - Flat UI</td>
<td><a href="https://flatui.com/">https://flatui.com/</a></td>
</tr>
<tr>
<td>UI Movement - The best UI design inspiration, every day</td>
<td><a href="https://uimovement.com/">https://uimovement.com/</a></td>
</tr>
<tr>
<td>Collect UI - Daily inspiration collected from daily ui archive and beyond. Based on Dribbble shots, hand picked, updating daily.</td>
<td><a href="http://www.collectui.com/">http://www.collectui.com/</a></td>
</tr>
<tr>
<td>siteInspire - Web Design Inspiration</td>
<td><a href="https://www.siteinspire.com/">https://www.siteinspire.com/</a></td>
</tr>
<tr>
<td>Dribbble - Discover the World’s Top Designers &amp; Creative Professionals</td>
<td><a href="https://dribbble.com/">https://dribbble.com/</a></td>
</tr>
<tr>
<td>Blocs - Fast, easy to use and powerful visual web design tool, that lets you create responsive websites without writing code.</td>
<td><a href="https://blocsapp.com/">https://blocsapp.com/</a></td>
</tr>
<tr>
<td>UI Design Resources, UI Kits, Wireframes, Icons and More - UI8</td>
<td><a href="https://ui8.net/">https://ui8.net/</a></td>
</tr>
<tr>
<td>UI-Patterns.com</td>
<td><a href="https://ui-patterns.com/">https://ui-patterns.com/</a></td>
</tr>
<tr>
<td>学UI网-UI设计师导航网，最专业的UI设计网站</td>
<td><a href="http://hao.xueui.cn/">http://hao.xueui.cn/</a></td>
</tr>
<tr>
<td>优设导航 - 学设计从这里开始！</td>
<td><a href="http://hao.uisdc.com/">http://hao.uisdc.com/</a></td>
</tr>
<tr>
<td>饭团导航 精选设计师实用工具导航 hao.psefan.com</td>
<td><a href="http://hao.psefan.com/">http://hao.psefan.com/</a></td>
</tr>
<tr>
<td>设计导航 - 精选最好的设计网站大全</td>
<td><a href="https://hao.shejidaren.com/">https://hao.shejidaren.com/</a></td>
</tr>
<tr>
<td>优波设计 - 设计师必备网址导航 ubuuk.com</td>
<td><a href="https://www.ubuuk.com/">https://www.ubuuk.com/</a></td>
</tr>
<tr>
<td>设计订阅 - 腾讯设计导航</td>
<td><a href="https://idesign.qq.com/#!index/feed">https://idesign.qq.com/#!index/feed</a></td>
</tr>
<tr>
<td>http://www.bigbigwork.com/nav/6.html</td>
<td><a href="http://www.foolo.cn/">http://www.foolo.cn/</a></td>
</tr>
<tr>
<td>工业设计网站导航 | 设计癖</td>
<td><a href="http://hao.shejipi.com/">http://hao.shejipi.com/</a></td>
</tr>
<tr>
<td>46设计导航_设计网站大全_46design.com</td>
<td><a href="http://www.46design.com/2019/">http://www.46design.com/2019/</a></td>
</tr>
<tr>
<td>UI设计师导航网 - 优阁</td>
<td><a href="http://so.uigreat.com/">http://so.uigreat.com/</a></td>
</tr>
<tr>
<td>Canva在线平面设计软件_免费设计模板素材和海量正版图片 - Canva中文官网</td>
<td><a href="https://www.canva.cn/">https://www.canva.cn/</a></td>
</tr>
<tr>
<td>创客贴_平面设计作图神器_免费设计模板_在线稿定设计印刷</td>
<td><a href="https://www.chuangkit.com/">https://www.chuangkit.com/</a></td>
</tr>
<tr>
<td>轻量级在线平面设计工具 - 图帮主</td>
<td><a href="https://www.tubangzhu.com/">https://www.tubangzhu.com/</a></td>
</tr>
<tr>
<td>图怪兽作图神器-在线图片编辑器-PS图片制作-搞定平面设计不求人</td>
<td><a href="https://818ps.com/">https://818ps.com/</a></td>
</tr>
<tr>
<td>Fotor在线设计工具_免费设计素材和模板_在线平面设计网站</td>
<td><a href="https://www.fotor.com.cn/">https://www.fotor.com.cn/</a></td>
</tr>
<tr>
<td>Presentation Software</td>
<td>Online Presentation Tools</td>
</tr>
<tr>
<td>设计癖 | 关注设计癖 提升幸福感</td>
<td><a href="http://www.shejipi.com/">http://www.shejipi.com/</a></td>
</tr>
<tr>
<td>xiaopiu-产品原型设计工具与团队实时协作平台</td>
<td><a href="https://www.xiaopiu.com/">https://www.xiaopiu.com/</a></td>
</tr>
<tr>
<td>燃设计-共享全球好设计_软装素材分享_软装设计灵感图库</td>
<td><a href="http://www.ransheji.com/">http://www.ransheji.com/</a></td>
</tr>
<tr>
<td>Themes - macOS - Human Interface Guidelines - Apple Developer</td>
<td><a href="https://developer.apple.com/design/human-interface-guidelines/macos/overview/themes/">https://developer.apple.com/design/human-interface-guidelines/macos/overview/themes/</a></td>
</tr>
<tr>
<td>Overview - Atlassian Design</td>
<td><a href="https://atlassian.design/guidelines/product/overview">https://atlassian.design/guidelines/product/overview</a></td>
</tr>
<tr>
<td>介绍 - Ant Design</td>
<td><a href="https://ant.design/docs/spec/introduce-cn">https://ant.design/docs/spec/introduce-cn</a></td>
</tr>
<tr>
<td>WeUI</td>
<td><a href="https://weui.io/">https://weui.io/</a></td>
</tr>
<tr>
<td>Documentation - Materialize</td>
<td><a href="https://materializecss.com/">https://materializecss.com/</a></td>
</tr>
<tr>
<td>Styleguide</td>
<td><a href="https://www.yelp.com/styleguide/mobile">https://www.yelp.com/styleguide/mobile</a></td>
</tr>
<tr>
<td>优优灵感-设计师灵感展现与启发-优优教程网</td>
<td><a href="https://uiiiuiii.com/inspiration">https://uiiiuiii.com/inspiration</a></td>
</tr>
<tr>
<td>Crello — Free Graphic Design Software</td>
<td>Create Images Online Tool</td>
</tr>
<tr>
<td>优设导航 - 学设计从这里开始！</td>
<td><a href="https://hao.uisdc.com/">https://hao.uisdc.com/</a></td>
</tr>
<tr>
<td>Creative Mass</td>
<td><a href="https://creativemass.cn/#/">https://creativemass.cn/#/</a></td>
</tr>
<tr>
<td>设计师之家</td>
<td><a href="https://www.51sjsj.com/">https://www.51sjsj.com/</a></td>
</tr>
<tr>
<td>Design Seeds</td>
<td>for all who ♥ color</td>
</tr>
<tr>
<td>The Nordnet Brand - Nordnet Brand</td>
<td><a href="https://brand.nordnet.se/">https://brand.nordnet.se/</a></td>
</tr>
<tr>
<td>STUDIO</td>
<td>Design to live website in one click.</td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
</tbody>
</table>
<h1 id="图片素材">图片素材</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>Unsplash</td>
<td><a href="https://unsplash.com/">https://unsplash.com/</a></td>
</tr>
<tr>
<td>Pexels</td>
<td><a href="https://www.pexels.com/zh-cn/">https://www.pexels.com/zh-cn/</a></td>
</tr>
<tr>
<td>Gratisography</td>
<td><a href="https://gratisography.com/">https://gratisography.com/</a></td>
</tr>
<tr>
<td>Beautiful free stock photos</td>
<td><a href="https://stocksnap.io/">https://stocksnap.io/</a></td>
</tr>
<tr>
<td>Foodiesfeed</td>
<td><a href="https://www.foodiesfeed.com/">https://www.foodiesfeed.com/</a></td>
</tr>
<tr>
<td>Freephotos</td>
<td><a href="https://freephotos.cc/zh">https://freephotos.cc/zh</a></td>
</tr>
<tr>
<td>Uniquely free photos.</td>
<td><a href="https://www.reshot.com/">https://www.reshot.com/</a></td>
</tr>
<tr>
<td>Free images for creatives, by creatives</td>
<td><a href="https://morguefile.com/quest">https://morguefile.com/quest</a></td>
</tr>
<tr>
<td>Illustration Gallery</td>
<td><a href="https://www.manypixels.co/gallery/">https://www.manypixels.co/gallery/</a></td>
</tr>
<tr>
<td>FREE ILLUSTRATIONS</td>
<td><a href="https://lukaszadam.com/illustrations">https://lukaszadam.com/illustrations</a></td>
</tr>
<tr>
<td>沙沙野</td>
<td><a href="https://www.ssyer.com/">https://www.ssyer.com/</a></td>
</tr>
<tr>
<td>图虫</td>
<td><a href="https://tuchong.com/">https://tuchong.com/</a></td>
</tr>
<tr>
<td>摄图网</td>
<td><a href="https://699pic.com/">https://699pic.com/</a></td>
</tr>
<tr>
<td>7MX——Home Business Advertising Ideas</td>
<td><a href="https://7mx.com/">https://7mx.com/</a></td>
</tr>
<tr>
<td>图品汇</td>
<td><a href="https://www.88tph.com/">https://www.88tph.com/</a></td>
</tr>
<tr>
<td>Free Photos for bloggers and creatives!</td>
<td><a href="http://photopin.com/">http://photopin.com/</a></td>
</tr>
<tr>
<td>花瓣美素</td>
<td><a href="http://www.meisupic.com/">http://www.meisupic.com/</a></td>
</tr>
<tr>
<td>PAKUTASO</td>
<td><a href="https://www.pakutaso.com/">https://www.pakutaso.com/</a></td>
</tr>
<tr>
<td>懒人图库</td>
<td><a href="http://www.lanrentuku.com/">http://www.lanrentuku.com/</a></td>
</tr>
<tr>
<td>SEARCH FOR CONTENT TO REUSE</td>
<td><a href="https://search.creativecommons.org/">https://search.creativecommons.org/</a></td>
</tr>
<tr>
<td>Free Stock Photos by Canva</td>
<td><a href="https://www.canva.com/photos/free/">https://www.canva.com/photos/free/</a></td>
</tr>
<tr>
<td>Creative Briefs. Request for photos</td>
<td><a href="https://morguefile.com/quest">https://morguefile.com/quest</a></td>
</tr>
<tr>
<td>Illustration Gallery</td>
<td><a href="https://www.manypixels.co/gallery/">https://www.manypixels.co/gallery/</a></td>
</tr>
<tr>
<td>ImageFinder</td>
<td><a href="https://imagefinder.co/">https://imagefinder.co/</a></td>
</tr>
<tr>
<td>泼辣有图</td>
<td><a href="http://www.polayoutu.com/collections">http://www.polayoutu.com/collections</a></td>
</tr>
<tr>
<td>visualhunt</td>
<td><a href="https://visualhunt.com/">https://visualhunt.com/</a></td>
</tr>
<tr>
<td>foter</td>
<td><a href="https://foter.com/">https://foter.com/</a></td>
</tr>
<tr>
<td>Free high resolution photography - Life of Pix - Home</td>
<td><a href="https://www.lifeofpix.com/">https://www.lifeofpix.com/</a></td>
</tr>
<tr>
<td>New Old Stock</td>
<td><a href="https://nos.twnsnd.co/">https://nos.twnsnd.co/</a></td>
</tr>
<tr>
<td>千图网</td>
<td><a href="https://www.58pic.com/">https://www.58pic.com/</a></td>
</tr>
<tr>
<td>Hand-picked free photos for your inspiration - Magdeleine</td>
<td><a href="https://magdeleine.co/">https://magdeleine.co/</a></td>
</tr>
<tr>
<td>昵图网</td>
<td><a href="http://www.nipic.com/">http://www.nipic.com/</a></td>
</tr>
<tr>
<td>photock</td>
<td><a href="https://www.photock.jp/">https://www.photock.jp/</a></td>
</tr>
<tr>
<td>免费正版高清图片素材库</td>
<td><a href="https://pixabay.com/zh/">https://pixabay.com/zh/</a></td>
</tr>
<tr>
<td>piqsels</td>
<td><a href="https://www.piqsels.com/zh">https://www.piqsels.com/zh</a></td>
</tr>
<tr>
<td>DesignersPics</td>
<td><a href="http://www.designerspics.com/">http://www.designerspics.com/</a></td>
</tr>
<tr>
<td>freeimages</td>
<td><a href="https://cn.freeimages.com/">https://cn.freeimages.com/</a></td>
</tr>
<tr>
<td>StreetWill</td>
<td><a href="http://www.streetwill.co/">http://www.streetwill.co/</a></td>
</tr>
<tr>
<td>Discover and share the world's best photos</td>
<td><a href="">https://web.500px.com/</a></td>
</tr>
<tr>
<td>FREE TRAVEL PHOTOS</td>
<td><a href="https://www.bucketlistly.blog/photos">https://www.bucketlistly.blog/photos</a></td>
</tr>
<tr>
<td>Free Stock Photos For Commercial Use.</td>
<td><a href="https://www.splitshire.com/splitshire-free-stock-photos/">https://www.splitshire.com/splitshire-free-stock-photos/</a></td>
</tr>
<tr>
<td>BURST</td>
<td><a href="https://burst.shopify.com/">https://burst.shopify.com/</a></td>
</tr>
<tr>
<td>FOCA</td>
<td><a href="https://focastock.com/">https://focastock.com/</a></td>
</tr>
<tr>
<td>jay mantri</td>
<td><a href="https://jaymantri.com/#_=_">https://jaymantri.com/#<em>=</em></a></td>
</tr>
<tr>
<td>LET'S FIND THE PERFECT PHOTO FOR YOU</td>
<td><a href="https://kaboompics.com/">https://kaboompics.com/</a></td>
</tr>
<tr>
<td>A curated collection of free web design resources, all for commercial use.</td>
<td><a href="http://imcreator.com/free">http://imcreator.com/free</a></td>
</tr>
<tr>
<td>Zoommy</td>
<td><a href="https://zoommyapp.com/">https://zoommyapp.com/</a></td>
</tr>
<tr>
<td>STOKPIC - Free Stock Photos For Commercial Use</td>
<td><a href="https://stokpic.com/">https://stokpic.com/</a></td>
</tr>
<tr>
<td>Cupcake</td>
<td><a href="http://cupcake.nilssonlee.se/">http://cupcake.nilssonlee.se/</a></td>
</tr>
<tr>
<td>Folkert Gorter Superfamous Images</td>
<td><a href="https://images.superfamous.com/">https://images.superfamous.com/</a></td>
</tr>
<tr>
<td>PICGRAPHY</td>
<td><a href="https://picography.co/">https://picography.co/</a></td>
</tr>
<tr>
<td>Free stock illustrations, Beautiful Free Art - Mixkit</td>
<td><a href="https://mixkit.co/free-stock-art/">https://mixkit.co/free-stock-art/</a></td>
</tr>
<tr>
<td>Free Stock Photos</td>
<td><a href="https://photo-ac.com/">https://photo-ac.com/</a></td>
</tr>
<tr>
<td>scrolller</td>
<td><a href="https://scrolller.com/art">https://scrolller.com/art</a></td>
</tr>
<tr>
<td>JOHN KRAUS PHOTOS</td>
<td><a href="https://www.johnkrausphotos.com/Portfolio/">https://www.johnkrausphotos.com/Portfolio/</a></td>
</tr>
<tr>
<td>Picrew</td>
<td><a href="https://picrew.me/">https://picrew.me/</a></td>
</tr>
<tr>
<td>GENERATED FACES</td>
<td><a href="https://generated.photos/faces">https://generated.photos/faces</a></td>
</tr>
<tr>
<td>用大作，不用翻墙和VPN秒看pixabay上的设计</td>
<td><a href="http://www.bigbigwork.com/pixabay.html">http://www.bigbigwork.com/pixabay.html</a></td>
</tr>
</tbody>
</table>
<h2 id="gif-and-png-and-icon-and-psd-and-logo-and-vector-and-illustrations">GIF and PNG and icon and PSD and LOGO and Vector and illustrations</h2>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>With Stock Animated GIFs Crafted for Commercial Use</td>
<td><a href="https://cliply.co/">https://cliply.co/</a></td>
</tr>
<tr>
<td>SOOGIF，找动图做动图.gif</td>
<td><a href="https://www.soogif.com/">https://www.soogif.com/</a></td>
</tr>
<tr>
<td>Search all the GIFs and Stickers</td>
<td><a href="https://giphy.com/">https://giphy.com/</a></td>
</tr>
<tr>
<td>free PNGs</td>
<td><a href="https://www.freepngs.com/search-pngs">https://www.freepngs.com/search-pngs</a></td>
</tr>
<tr>
<td>CLEAN PNG</td>
<td><a href="https://www.cleanpng.com/">https://www.cleanpng.com/</a></td>
</tr>
<tr>
<td>easyicon</td>
<td><a href="https://www.easyicon.net/">https://www.easyicon.net/</a></td>
</tr>
<tr>
<td>Icons for everything</td>
<td><a href="https://thenounproject.com/">https://thenounproject.com/</a></td>
</tr>
<tr>
<td>Instant Logo Search</td>
<td><a href="http://instantlogosearch.com/">http://instantlogosearch.com/</a></td>
</tr>
<tr>
<td>Logo Maker - Create Your Own Logo, It's Free! - FreeLogoDesign</td>
<td><a href="https://www.freelogodesign.org/">https://www.freelogodesign.org/</a></td>
</tr>
<tr>
<td>365psd</td>
<td><a href="https://cn.365psd.com/free-psd">https://cn.365psd.com/free-psd</a></td>
</tr>
<tr>
<td>Download Free Vectors, Clipart Graphics, Vector Art &amp; Design Templates</td>
<td><a href="https://www.vecteezy.com/">https://www.vecteezy.com/</a></td>
</tr>
<tr>
<td>freepik</td>
<td><a href="https://www.freepik.com/">https://www.freepik.com/</a></td>
</tr>
<tr>
<td>humaaans</td>
<td><a href="https://www.humaaans.com/">https://www.humaaans.com/</a></td>
</tr>
<tr>
<td>Free Vector Illustrations to Class up Your Project</td>
<td><a href="https://icons8.com/ouch">https://icons8.com/ouch</a></td>
</tr>
<tr>
<td>IRA Design - Build your own amazing illustrations @ Creative Tim</td>
<td><a href="https://iradesign.io/">https://iradesign.io/</a></td>
</tr>
<tr>
<td>absurd illustrations that make sense</td>
<td><a href="https://absurd.design/">https://absurd.design/</a></td>
</tr>
<tr>
<td>Illustration Gallery by ManyPixels</td>
<td>Open-Source Editable Illustrations</td>
</tr>
<tr>
<td>Free Vectors, Stock Photos &amp; PSD Downloads</td>
<td>Freepik</td>
</tr>
</tbody>
</table>
<h1 id="视频素材">视频素材</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>Thousands of Free High-Resolution CC0 Photos and Videos</td>
<td><a href="https://isorepublic.com/">https://isorepublic.com/</a></td>
</tr>
<tr>
<td>NASA Image and Video Library</td>
<td><a href="https://images.nasa.gov/">https://images.nasa.gov/</a></td>
</tr>
<tr>
<td>COVERR - Beautiful Free Stock Video Footage</td>
<td><a href="https://coverr.co/">https://coverr.co/</a></td>
</tr>
<tr>
<td>Golden Wolf</td>
<td><a href="https://goldenwolf.tv/">https://goldenwolf.tv/</a></td>
</tr>
<tr>
<td>场库</td>
<td><a href="https://www.vmovier.com/">https://www.vmovier.com/</a></td>
</tr>
<tr>
<td>Free stock videos · Pexels Videos</td>
<td><a href="https://www.pexels.com/videos/">https://www.pexels.com/videos/</a></td>
</tr>
<tr>
<td>天空之城</td>
<td><a href="https://www.skypixel.com/">https://www.skypixel.com/</a></td>
</tr>
<tr>
<td>Distill: Free HD Stock Video &amp; HD Video Clips</td>
<td><a href="https://wedistill.io/">https://wedistill.io/</a></td>
</tr>
<tr>
<td>Free Video Footage - Best Free Backgrounds Stock Video Footage</td>
<td><a href="https://www.free-video-footage.com/">https://www.free-video-footage.com/</a></td>
</tr>
<tr>
<td>Free Motion Backgrounds</td>
<td>MP4, MOV video backgrounds for FREE!</td>
</tr>
<tr>
<td>Free Stock Video Footage HD 4K Download Motion Graphics</td>
<td><a href="https://www.videvo.net/">https://www.videvo.net/</a></td>
</tr>
<tr>
<td>Free Stock Footage Videos, 4k After Effects Templates and More!</td>
<td><a href="https://www.videezy.com/">https://www.videezy.com/</a></td>
</tr>
<tr>
<td>Free 4K Stock Video | Stock Footage for Free – {Dareful} Completely Free 4K Stock Video</td>
<td><a href="https://www.dareful.com/">https://www.dareful.com/</a></td>
</tr>
<tr>
<td>Free Stock Video Footage HD Royalty-Free Videos Download</td>
<td><a href="https://mazwai.com/#/">https://mazwai.com/#/</a></td>
</tr>
<tr>
<td>iTunes Movie Trailers</td>
<td><a href="https://trailers.apple.com/">https://trailers.apple.com/</a></td>
</tr>
<tr>
<td>Mixkit - Awesome free assets for your next video project</td>
<td><a href="https://mixkit.co/">https://mixkit.co/</a></td>
</tr>
<tr>
<td>XStockvideo</td>
<td><a href="http://www.xstockvideo.com/">http://www.xstockvideo.com/</a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
</tbody>
</table>
<h1 id="fonts-and-icons">Fonts and icons</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>IconMoon</td>
<td><a href="https://icomoon.io/">https://icomoon.io/</a></td>
</tr>
<tr>
<td>iconmonstr</td>
<td><a href="https://iconmonstr.com/">https://iconmonstr.com/</a></td>
</tr>
<tr>
<td>Zwicon – Icon set</td>
<td><a href="https://www.zwicon.com/cheatsheet.html">https://www.zwicon.com/cheatsheet.html</a></td>
</tr>
<tr>
<td>Find Similar Icons</td>
<td><a href="http://compute.vision/nouns/index.html">http://compute.vision/nouns/index.html</a></td>
</tr>
<tr>
<td>iconSweets — DesignBombs</td>
<td><a href="https://designbombs.com/iconsweets/">https://designbombs.com/iconsweets/</a></td>
</tr>
<tr>
<td>iconfont</td>
<td><a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></td>
</tr>
<tr>
<td>100font.com - 免版权字体下载、免费商用字体下载网站</td>
<td><a href="https://www.100font.com/">https://www.100font.com/</a></td>
</tr>
<tr>
<td>造字工房</td>
<td><a href="https://www.makefont.com/">https://www.makefont.com/</a></td>
</tr>
<tr>
<td>方正字库</td>
<td><a href="http://www.foundertype.com/">http://www.foundertype.com/</a></td>
</tr>
<tr>
<td>汉仪字库-用心绽放文字之美</td>
<td><a href="http://www.hanyi.com.cn/">http://www.hanyi.com.cn/</a></td>
</tr>
<tr>
<td>Font-To-Width</td>
<td><a href="http://font-to-width.com/">http://font-to-width.com/</a></td>
</tr>
<tr>
<td></td>
<td><a href=""></a></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[特色搜索]]></title>
        <id>https://tdmaker.github.io/faded/post/te-se-sou-suo/</id>
        <link href="https://tdmaker.github.io/faded/post/te-se-sou-suo/">
        </link>
        <updated>2020-04-03T15:53:24.000Z</updated>
        <content type="html"><![CDATA[<h1 id="网盘搜索">网盘搜索</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>盘搜搜</td>
<td><a href="https://www.pansoso.com/">https://www.pansoso.com/</a></td>
</tr>
<tr>
<td>如风搜</td>
<td><a href="http://www.rufengso.net/">http://www.rufengso.net/</a></td>
</tr>
<tr>
<td>6miu百度云搜索</td>
<td><a href="http://baiduyun.6miu.com/">http://baiduyun.6miu.com/</a></td>
</tr>
<tr>
<td>57分享百度云</td>
<td><a href="https://www.57fx.com/user-drnew-daren/">https://www.57fx.com/user-drnew-daren/</a></td>
</tr>
<tr>
<td>小不点搜索</td>
<td><a href="https://www.xiaoso.net/">https://www.xiaoso.net/</a></td>
</tr>
</tbody>
</table>
<h1 id="特色搜索">特色搜索</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>龙轩搜索</td>
<td><a href="http://ilxdh.com/">http://ilxdh.com/</a></td>
</tr>
<tr>
<td>虫部落搜索</td>
<td><a href="https://www.chongbuluo.com/">https://www.chongbuluo.com/</a></td>
</tr>
<tr>
<td>neets搜索站</td>
<td><a href="https://neets.cc/">https://neets.cc/</a></td>
</tr>
<tr>
<td>西林街搜索</td>
<td><a href="https://xilinjie.cc/">https://xilinjie.cc/</a></td>
</tr>
<tr>
<td>茶杯狐</td>
<td><a href="https://www.cupfox.com/">https://www.cupfox.com/</a></td>
</tr>
<tr>
<td>疯狂影视搜索</td>
<td><a href="http://ifkdy.com/">http://ifkdy.com/</a></td>
</tr>
<tr>
<td>AnywhereAnything</td>
<td><a href="http://lackar.com/aa/">http://lackar.com/aa/</a></td>
</tr>
<tr>
<td>源代码搜索</td>
<td><a href="https://publicwww.com/">https://publicwww.com/</a></td>
</tr>
<tr>
<td>变量名搜索</td>
<td><a href="https://unbug.github.io/codelf/">https://unbug.github.io/codelf/</a></td>
</tr>
<tr>
<td>比菲尔德学术搜索</td>
<td><a href="https://www.base-search.net/">https://www.base-search.net/</a></td>
</tr>
<tr>
<td>吉他尤克里里谱搜索</td>
<td><a href="https://sopu.52cmajor.com/">https://sopu.52cmajor.com/</a></td>
</tr>
<tr>
<td>Classcentral在线课程搜索</td>
<td><a href="https://www.classcentral.com/">https://www.classcentral.com/</a></td>
</tr>
<tr>
<td>Coursade在线课程搜索</td>
<td><a href="http://www.coursade.com/">http://www.coursade.com/</a></td>
</tr>
<tr>
<td>Chinese Etymology 字源</td>
<td><a href="https://hanziyuan.net/">https://hanziyuan.net/</a></td>
</tr>
<tr>
<td>汉典</td>
<td><a href="https://www.zdic.net/">https://www.zdic.net/</a></td>
</tr>
<tr>
<td>新华字典</td>
<td><a href="https://zidian.911cha.com/">https://zidian.911cha.com/</a></td>
</tr>
</tbody>
</table>
<h1 id="导航站">导航站</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>创造狮导航</td>
<td><a href="http://chuangzaoshi.com/">http://chuangzaoshi.com/</a></td>
</tr>
<tr>
<td>导航湾</td>
<td><a href="https://www.daohangwan.com/">https://www.daohangwan.com/</a></td>
</tr>
<tr>
<td>好用好玩导航</td>
<td><a href="http://www.haoyonghaowan.com/">http://www.haoyonghaowan.com/</a></td>
</tr>
<tr>
<td>比格张</td>
<td><a href="https://bigezhang.com/">https://bigezhang.com/</a></td>
</tr>
<tr>
<td>Web前端导航</td>
<td><a href="http://nav.web-hub.cn/">http://nav.web-hub.cn/</a></td>
</tr>
<tr>
<td>阿猫阿狗导航</td>
<td><a href="https://dh.woshipm.com/">https://dh.woshipm.com/</a></td>
</tr>
<tr>
<td>BTMoo导航</td>
<td><a href="https://www.btmoo.net/">https://www.btmoo.net/</a></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电子书下载]]></title>
        <id>https://tdmaker.github.io/faded/post/ebooks-download/</id>
        <link href="https://tdmaker.github.io/faded/post/ebooks-download/">
        </link>
        <updated>2020-04-03T09:30:10.000Z</updated>
        <content type="html"><![CDATA[<h1 id="电子书下载">电子书下载</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>Baen free library</td>
<td><a href="https://www.baen.com/allbooks/category/index/id/2012">https://www.baen.com/allbooks/category/index/id/2012</a></td>
</tr>
<tr>
<td>智奇搜书</td>
<td><a href="https://www.zqbook.top/">https://www.zqbook.top/</a></td>
</tr>
<tr>
<td>云海电子图书馆</td>
<td><a href="http://www.pdfbook.cn/">http://www.pdfbook.cn/</a></td>
</tr>
<tr>
<td>必看网</td>
<td><a href="https://www.biikan.com/">https://www.biikan.com/</a></td>
</tr>
<tr>
<td>bookboon</td>
<td><a href="https://bookboon.com/en">https://bookboon.com/en</a></td>
</tr>
<tr>
<td>Free-Ebooks</td>
<td><a href="https://www.free-ebooks.net/">https://www.free-ebooks.net/</a></td>
</tr>
<tr>
<td>ZLibrary</td>
<td><a href="https://b-ok.org/">https://b-ok.org/</a></td>
</tr>
<tr>
<td>书格</td>
<td><a href="https://new.shuge.org/">https://new.shuge.org/</a></td>
</tr>
<tr>
<td>Academia</td>
<td><a href="https://www.academia.edu/">https://www.academia.edu/</a></td>
</tr>
<tr>
<td>图灵社区</td>
<td><a href="https://www.ituring.com.cn/">https://www.ituring.com.cn/</a></td>
</tr>
<tr>
<td>书伴</td>
<td><a href="https://bookfere.com/">https://bookfere.com/</a></td>
</tr>
<tr>
<td>好读</td>
<td><a href="http://haodoo.net/">http://haodoo.net/</a></td>
</tr>
<tr>
<td>ePUBee</td>
<td><a href="http://cn.epubee.com/books/">http://cn.epubee.com/books/</a></td>
</tr>
<tr>
<td>三秋书屋</td>
<td><a href="https://www.d4j.cn/">https://www.d4j.cn/</a></td>
</tr>
<tr>
<td>SoBooks</td>
<td><a href="https://sobooks.cc/">https://sobooks.cc/</a></td>
</tr>
<tr>
<td>i-Book.in</td>
<td><a href="https://book.tstrs.me/">https://book.tstrs.me/</a></td>
</tr>
<tr>
<td>WOW! eBook</td>
<td><a href="https://www.wowebook.org/">https://www.wowebook.org/</a></td>
</tr>
<tr>
<td>计算机书籍控</td>
<td><a href="http://bestcbooks.com/">http://bestcbooks.com/</a></td>
</tr>
<tr>
<td>鸠摩搜索</td>
<td><a href="https://www.jiumodiary.com/">https://www.jiumodiary.com/</a></td>
</tr>
<tr>
<td>Library Genesis</td>
<td><a href="http://gen.lib.rus.ec/">http://gen.lib.rus.ec/</a></td>
</tr>
<tr>
<td>Library Genesis 2M</td>
<td><a href="http://libgen.io/">http://libgen.io/</a></td>
</tr>
<tr>
<td>免费的计算机编程类中文书籍</td>
<td><a href="https://github.com/justjavac/free-programming-books-zh_CN">https://github.com/justjavac/free-programming-books-zh_CN</a></td>
</tr>
<tr>
<td>国立国会图书馆</td>
<td><a href="https://dl.ndl.go.jp/">https://dl.ndl.go.jp/</a></td>
</tr>
<tr>
<td>ZLibrary</td>
<td><a href="https://b-ok.cc/s/">https://b-ok.cc/s/</a></td>
</tr>
</tbody>
</table>
<h1 id="电子书转换">电子书转换</h1>
<table>
<thead>
<tr>
<th>网站</th>
<th>网址</th>
</tr>
</thead>
<tbody>
<tr>
<td>在线电子书转换器</td>
<td><a href="http://cn.epubee.com/">http://cn.epubee.com/</a></td>
</tr>
<tr>
<td>文本或 eBook 转换为 Mobi 格式</td>
<td><a href="https://ebook.online-convert.com/convert-to-mobi">https://ebook.online-convert.com/convert-to-mobi</a></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式——银行卡号]]></title>
        <id>https://tdmaker.github.io/faded/post/regular-expression-band-card/</id>
        <link href="https://tdmaker.github.io/faded/post/regular-expression-band-card/">
        </link>
        <updated>2020-04-02T03:55:59.000Z</updated>
        <summary type="html"><![CDATA[<p>记录中国主要银行发行的银行卡号的正则表达式</p>
]]></summary>
        <content type="html"><![CDATA[<p>记录中国主要银行发行的银行卡号的正则表达式</p>
<!-- more -->
<blockquote>
<p><a href="https://www.jianshu.com/p/a6a8c0afac5f">多种银行卡正则</a></p>
</blockquote>
<pre><code class="language-javascript">var bankcardList = [{
    bankName: &quot;中国邮政储蓄银行&quot;,
    bankCode: &quot;PSBC&quot;,
    patterns: [{
      reg: /^(621096|621098|622150|622151|622181|622188|622199|955100|621095|620062|621285|621798|621799|621797|620529|621622|621599|621674|623218|623219)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(62215049|62215050|62215051|62218850|62218851|62218849)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622812|622810|622811|628310|625919)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;中国工商银行&quot;,
    bankCode: &quot;ICBC&quot;,
    patterns: [{
      reg: /^(620200|620302|620402|620403|620404|620406|620407|620409|620410|620411|620412|620502|620503|620405|620408|620512|620602|620604|620607|620611|620612|620704|620706|620707|620708|620709|620710|620609|620712|620713|620714|620802|620711|620904|620905|621001|620902|621103|621105|621106|621107|621102|621203|621204|621205|621206|621207|621208|621209|621210|621302|621303|621202|621305|621306|621307|621309|621311|621313|621211|621315|621304|621402|621404|621405|621406|621407|621408|621409|621410|621502|621317|621511|621602|621603|621604|621605|621608|621609|621610|621611|621612|621613|621614|621615|621616|621617|621607|621606|621804|621807|621813|621814|621817|621901|621904|621905|621906|621907|621908|621909|621910|621911|621912|621913|621915|622002|621903|622004|622005|622006|622007|622008|622010|622011|622012|621914|622015|622016|622003|622018|622019|622020|622102|622103|622104|622105|622013|622111|622114|622017|622110|622303|622304|622305|622306|622307|622308|622309|622314|622315|622317|622302|622402|622403|622404|622313|622504|622505|622509|622513|622517|622502|622604|622605|622606|622510|622703|622715|622806|622902|622903|622706|623002|623006|623008|623011|623012|622904|623015|623100|623202|623301|623400|623500|623602|623803|623901|623014|624100|624200|624301|624402|623700|624000)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622200|622202|622203|622208|621225|620058|621281|900000|621558|621559|621722|621723|620086|621226|621618|620516|621227|621288|621721|900010|623062|621670|621720|621379|621240|621724|621762|621414|621375|622926|622927|622928|622929|622930|622931|621733|621732|621372|621369|621763)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(402791|427028|427038|548259|621376|621423|621428|621434|621761|621749|621300|621378|622944|622949|621371|621730|621734|621433|621370|621764|621464|621765|621750|621377|621367|621374|621731|621781)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(9558)\d{15}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(370246|370248|370249|370247|370267|374738|374739)\d{9}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(427010|427018|427019|427020|427029|427030|427039|438125|438126|451804|451810|451811|458071|489734|489735|489736|510529|427062|524091|427064|530970|530990|558360|524047|525498|622230|622231|622232|622233|622234|622235|622237|622239|622240|622245|622238|451804|451810|451811|458071|628288|628286|622206|526836|513685|543098|458441|622246|544210|548943|356879|356880|356881|356882|528856|625330|625331|625332|622236|524374|550213|625929|625927|625939|625987|625930|625114|622159|625021|625022|625932|622889|625900|625915|625916|622171|625931|625113|625928|625914|625986|625925|625921|625926|625942|622158|625917|625922|625934|625933|625920|625924|625017|625018|625019)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(45806|53098|45806|53098)\d{11}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(622210|622211|622212|622213|622214|622220|622223|622225|622229|622215|622224)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(620054|620142|620184|620030|620050|620143|620149|620124|620183|620094|620186|620148|620185)\d{10}$/g,
      cardType: &quot;PC&quot;
    }, {
      reg: /^(620114|620187|620046)\d{13}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;中国农业银行&quot;,
    bankCode: &quot;ABC&quot;,
    patterns: [{
      reg: /^(622841|622824|622826|622848|620059|621282|622828|622823|621336|621619|622821|622822|622825|622827|622845|622849|623018|623206|621671|622840|622843|622844|622846|622847|620501)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(95595|95596|95597|95598|95599)\d{14}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(103)\d{16}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(403361|404117|404118|404119|404120|404121|463758|519412|519413|520082|520083|552599|558730|514027|622836|622837|628268|625996|625998|625997|622838|625336|625826|625827|544243|548478|628269)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(622820|622830)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }]
  }, {
    bankName: &quot;中国银行&quot;,
    bankCode: &quot;BOC&quot;,
    patterns: [{
      reg: /^(621660|621661|621662|621663|621665|621667|621668|621669|621666|456351|601382|621256|621212|621283|620061|621725|621330|621331|621332|621333|621297|621568|621569|621672|623208|621620|621756|621757|621758|621759|621785|621786|621787|621788|621789|621790|622273|622274|622771|622772|622770|621741|621041)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621293|621294|621342|621343|621364|621394|621648|621248|621215|621249|621231|621638|621334|621395|623040|622348)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625908|625910|625909|356833|356835|409665|409666|409668|409669|409670|409671|409672|512315|512316|512411|512412|514957|409667|438088|552742|553131|514958|622760|628388|518377|622788|628313|628312|622750|622751|625145|622479|622480|622789|625140|622346|622347)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(518378|518379|518474|518475|518476|524865|525745|525746|547766|558868|622752|622753|622755|524864|622757|622758|622759|622761|622762|622763|622756|622754|622764|622765|558869|625905|625906|625907|625333)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(53591|49102|377677)\d{11}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(620514|620025|620026|620210|620211|620019|620035|620202|620203|620048|620515|920000)\d{10}$/g,
      cardType: &quot;PC&quot;
    }, {
      reg: /^(620040|620531|620513|921000|620038)\d{13}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;中国建设银行&quot;,
    bankCode: &quot;CCB&quot;,
    patterns: [{
      reg: /^(621284|436742|589970|620060|621081|621467|621598|621621|621700|622280|622700|623211|623668)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(421349|434061|434062|524094|526410|552245|621080|621082|621466|621488|621499|622966|622988|622382|621487|621083|621084|620107)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(436742193|622280193)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(553242)\d{12}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(625362|625363|628316|628317|356896|356899|356895|436718|436738|436745|436748|489592|531693|532450|532458|544887|552801|557080|558895|559051|622166|622168|622708|625964|625965|625966|628266|628366|622381|622675|622676|622677)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(5453242|5491031|5544033)\d{11}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(622725|622728|436728|453242|491031|544033|622707|625955|625956)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(53242|53243)\d{11}$/g,
      cardType: &quot;SCC&quot;
    }]
  }, {
    bankName: &quot;中国交通银行&quot;,
    bankCode: &quot;COMM&quot;,
    patterns: [{
      reg: /^(622261|622260|622262|621002|621069|621436|621335)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(620013)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(405512|601428|405512|601428|622258|622259|405512|601428)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(49104|53783)\d{11}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(434910|458123|458124|520169|522964|552853|622250|622251|521899|622253|622656|628216|622252|955590|955591|955592|955593|628218|625028|625029)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(622254|622255|622256|622257|622284)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(620021|620521)\d{13}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;招商银行&quot;,
    bankCode: &quot;CMB&quot;,
    patterns: [{
      reg: /^(402658|410062|468203|512425|524011|622580|622588|622598|622609|95555|621286|621483|621485|621486|621299)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(690755)\d{9}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(690755)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(356885|356886|356887|356888|356890|439188|439227|479228|479229|521302|356889|545620|545621|545947|545948|552534|552587|622575|622576|622577|622578|622579|545619|622581|622582|545623|628290|439225|518710|518718|628362|439226|628262|625802|625803)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(370285|370286|370287|370289)\d{9}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(620520)\d{13}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;中国民生银行&quot;,
    bankCode: &quot;CMBC&quot;,
    patterns: [{
      reg: /^(622615|622616|622618|622622|622617|622619|415599|421393|421865|427570|427571|472067|472068|622620)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(545392|545393|545431|545447|356859|356857|407405|421869|421870|421871|512466|356856|528948|552288|622600|622601|622602|517636|622621|628258|556610|622603|464580|464581|523952|545217|553161|356858|622623|625912|625913|625911)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(377155|377152|377153|377158)\d{9}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;中国光大银行&quot;,
    bankCode: &quot;CEB&quot;,
    patterns: [{
      reg: /^(303)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(90030)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(620535)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(620085|622660|622662|622663|622664|622665|622666|622667|622669|622670|622671|622672|622668|622661|622674|622673|620518|621489|621492)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(356837|356838|486497|622657|622685|622659|622687|625978|625980|625981|625979|356839|356840|406252|406254|425862|481699|524090|543159|622161|622570|622650|622655|622658|625975|625977|628201|628202|625339|625976)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;中信银行&quot;,
    bankCode: &quot;CITIC&quot;,
    patterns: [{
      reg: /^(433670|433680|442729|442730|620082|622690|622691|622692|622696|622698|622998|622999|433671|968807|968808|968809|621771|621767|621768|621770|621772|621773|622453|622456)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622459)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(376968|376969|376966)\d{9}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(400360|403391|403392|404158|404159|404171|404172|404173|404174|404157|433667|433668|433669|514906|403393|520108|433666|558916|622678|622679|622680|622688|622689|628206|556617|628209|518212|628208|356390|356391|356392|622916|622918|622919)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;华夏银行&quot;,
    bankCode: &quot;HXBANK&quot;,
    patterns: [{
      reg: /^(622630|622631|622632|622633|999999|621222|623020|623021|623022|623023)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(523959|528709|539867|539868|622637|622638|628318|528708|622636|625967|625968|625969)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;深发/平安银行&quot;,
    bankCode: &quot;SPABANK&quot;,
    patterns: [{
      reg: /^(621626|623058)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(602907|622986|622989|622298|627069|627068|627066|627067|412963|415752|415753|622535|622536|622538|622539|998800|412962|622983)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(531659|622157|528020|622155|622156|526855|356869|356868|625360|625361|628296|435744|435745|483536|622525|622526|998801|998802)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(620010)\d{10}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;兴业银行&quot;,
    bankCode: &quot;CIB&quot;,
    patterns: [{
      reg: /^(438589)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(90592)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(966666|622909|438588|622908)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(461982|486493|486494|486861|523036|451289|527414|528057|622901|622902|622922|628212|451290|524070|625084|625085|625086|625087|548738|549633|552398|625082|625083|625960|625961|625962|625963)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(620010)\d{10}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;上海银行&quot;,
    bankCode: &quot;SHBANK&quot;,
    patterns: [{
      reg: /^(621050|622172|622985|622987|620522|622267|622278|622279|622468|622892|940021)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(438600)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(356827|356828|356830|402673|402674|486466|519498|520131|524031|548838|622148|622149|622268|356829|622300|628230|622269|625099|625953)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;浦东发展银行&quot;,
    bankCode: &quot;SPDB&quot;,
    patterns: [{
      reg: /^(622516|622517|622518|622521|622522|622523|984301|984303|621352|621793|621795|621796|621351|621390|621792|621791)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(84301|84336|84373|84385|84390|87000|87010|87030|87040|84380|84361|87050|84342)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(356851|356852|404738|404739|456418|498451|515672|356850|517650|525998|622177|622277|628222|622500|628221|622176|622276|622228|625957|625958|625993|625831)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(622520|622519)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(620530)\d{13}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;广发银行&quot;,
    bankCode: &quot;GDB&quot;,
    patterns: [{
      reg: /^(622516|622517|622518|622521|622522|622523|984301|984303|621352|621793|621795|621796|621351|621390|621792|621791)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622568|6858001|6858009|621462)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(9111)\d{15}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(406365|406366|428911|436768|436769|436770|487013|491032|491033|491034|491035|491036|491037|491038|436771|518364|520152|520382|541709|541710|548844|552794|493427|622555|622556|622557|622558|622559|622560|528931|558894|625072|625071|628260|628259|625805|625806|625807|625808|625809|625810)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(685800|6858000)\d{13}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;渤海银行&quot;,
    bankCode: &quot;BOHAIB&quot;,
    patterns: [{
      reg: /^(621268|622684|622884|621453)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;广州银行&quot;,
    bankCode: &quot;GCB&quot;,
    patterns: [{
      reg: /^(603445|622467|940016|621463)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;金华银行&quot;,
    bankCode: &quot;JHBANK&quot;,
    patterns: [{
      reg: /^(622449|940051)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622450|628204)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;温州银行&quot;,
    bankCode: &quot;WZCB&quot;,
    patterns: [{
      reg: /^(621977)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622868|622899|628255)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;徽商银行&quot;,
    bankCode: &quot;HSBANK&quot;,
    patterns: [{
      reg: /^(622877|622879|621775|623203)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(603601|622137|622327|622340|622366)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628251|622651|625828)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;江苏银行&quot;,
    bankCode: &quot;JSBANK&quot;,
    patterns: [{
      reg: /^(621076|622173|622131|621579|622876)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(504923|622422|622447|940076)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628210|622283|625902)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;南京银行&quot;,
    bankCode: &quot;NJCB&quot;,
    patterns: [{
      reg: /^(621777|622305|621259)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622303|628242|622595|622596)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;宁波银行&quot;,
    bankCode: &quot;NBBANK&quot;,
    patterns: [{
      reg: /^(621279|622281|622316|940022)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621418)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625903|622778|628207|512431|520194|622282|622318)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;北京银行&quot;,
    bankCode: &quot;BJBANK&quot;,
    patterns: [{
      reg: /^(623111|421317|422161|602969|422160|621030|621420|621468)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(522001|622163|622853|628203|622851|622852)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;北京农村商业银行&quot;,
    bankCode: &quot;BJRCB&quot;,
    patterns: [{
      reg: /^(620088|621068|622138|621066|621560)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625526|625186|628336)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;汇丰银行&quot;,
    bankCode: &quot;HSBC&quot;,
    patterns: [{
      reg: /^(622946)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622406|621442)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622407|621443)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622360|622361|625034|625096|625098)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;渣打银行&quot;,
    bankCode: &quot;SCB&quot;,
    patterns: [{
      reg: /^(622948|621740|622942|622994)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622482|622483|622484)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;花旗银行&quot;,
    bankCode: &quot;CITI&quot;,
    patterns: [{
      reg: /^(621062|621063)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625076|625077|625074|625075|622371|625091)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;东亚银行&quot;,
    bankCode: &quot;HKBEA&quot;,
    patterns: [{
      reg: /^(622933|622938|623031|622943|621411)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622372|622471|622472|622265|622266|625972|625973)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(622365)\d{11}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;广东华兴银行&quot;,
    bankCode: &quot;GHB&quot;,
    patterns: [{
      reg: /^(621469|621625)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;深圳农村商业银行&quot;,
    bankCode: &quot;SRCB&quot;,
    patterns: [{
      reg: /^(622128|622129|623035)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;广州农村商业银行股份有限公司&quot;,
    bankCode: &quot;GZRCU&quot;,
    patterns: [{
      reg: /^(909810|940035|621522|622439)\d{12}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;东莞农村商业银行&quot;,
    bankCode: &quot;DRCBCL&quot;,
    patterns: [{
      reg: /^(622328|940062|623038)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625288|625888)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;东莞市商业银行&quot;,
    bankCode: &quot;BOD&quot;,
    patterns: [{
      reg: /^(622333|940050)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621439|623010)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622888)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;广东省农村信用社联合社&quot;,
    bankCode: &quot;GDRCC&quot;,
    patterns: [{
      reg: /^(622302)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622477|622509|622510|622362|621018|621518)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;大新银行&quot;,
    bankCode: &quot;DSB&quot;,
    patterns: [{
      reg: /^(622297|621277)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622375|622489)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622293|622295|622296|622373|622451|622294|625940)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;永亨银行&quot;,
    bankCode: &quot;WHB&quot;,
    patterns: [{
      reg: /^(622871|622958|622963|622957|622861|622932|622862|621298)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622798|625010|622775|622785)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;星展银行香港有限公司&quot;,
    bankCode: &quot;DBS&quot;,
    patterns: [{
      reg: /^(621016|621015)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622487|622490|622491|622492)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622487|622490|622491|622492|621744|621745|621746|621747)\d{11}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;恒丰银行&quot;,
    bankCode: &quot;EGBANK&quot;,
    patterns: [{
      reg: /^(623078)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622384|940034)\d{11}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;天津市商业银行&quot;,
    bankCode: &quot;TCCB&quot;,
    patterns: [{
      reg: /^(940015|622331)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(6091201)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622426|628205)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;浙商银行&quot;,
    bankCode: &quot;CZBANK&quot;,
    patterns: [{
      reg: /^(621019|622309|621019)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(6223091100|6223092900|6223093310|6223093320|6223093330|6223093370|6223093380|6223096510|6223097910)\d{9}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;南洋商业银行&quot;,
    bankCode: &quot;NCB&quot;,
    patterns: [{
      reg: /^(621213|621289|621290|621291|621292|621042|621743)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(623041|622351)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625046|625044|625058|622349|622350)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(620208|620209|625093|625095)\d{10}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;厦门银行&quot;,
    bankCode: &quot;XMBANK&quot;,
    patterns: [{
      reg: /^(622393|940023)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(6886592)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(623019|621600|)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;福建海峡银行&quot;,
    bankCode: &quot;FJHXBC&quot;,
    patterns: [{
      reg: /^(622388)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621267|623063)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(620043|)\d{12}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;吉林银行&quot;,
    bankCode: &quot;JLBANK&quot;,
    patterns: [{
      reg: /^(622865|623131)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940012)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622178|622179|628358)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;汉口银行&quot;,
    bankCode: &quot;HKB&quot;,
    patterns: [{
      reg: /^(990027)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622325|623105|623029)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;盛京银行&quot;,
    bankCode: &quot;SJBANK&quot;,
    patterns: [{
      reg: /^(566666)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622455|940039)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(623108|623081)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622466|628285)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;大连银行&quot;,
    bankCode: &quot;DLB&quot;,
    patterns: [{
      reg: /^(603708)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622993|623069|623070|623172|623173)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622383|622385|628299)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;河北银行&quot;,
    bankCode: &quot;BHB&quot;,
    patterns: [{
      reg: /^(622498|622499|623000|940046)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622921|628321)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;乌鲁木齐市商业银行&quot;,
    bankCode: &quot;URMQCCB&quot;,
    patterns: [{
      reg: /^(621751|622143|940001|621754)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622476|628278)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;绍兴银行&quot;,
    bankCode: &quot;SXCB&quot;,
    patterns: [{
      reg: /^(622486)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(603602|623026|623086)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628291)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;成都商业银行&quot;,
    bankCode: &quot;CDCB&quot;,
    patterns: [{
      reg: /^(622152|622154|622996|622997|940027|622153|622135|621482|621532)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;抚顺银行&quot;,
    bankCode: &quot;FSCB&quot;,
    patterns: [{
      reg: /^(622442)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940053)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622442|623099)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;郑州银行&quot;,
    bankCode: &quot;ZZBANK&quot;,
    patterns: [{
      reg: /^(622421)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940056)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(96828)\d{11}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;宁夏银行&quot;,
    bankCode: &quot;NXBANK&quot;,
    patterns: [{
      reg: /^(621529|622429|621417|623089|623200)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628214|625529|622428)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;重庆银行&quot;,
    bankCode: &quot;CQBANK&quot;,
    patterns: [{
      reg: /^(9896)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622134|940018|623016)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;哈尔滨银行&quot;,
    bankCode: &quot;HRBANK&quot;,
    patterns: [{
      reg: /^(621577|622425)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940049)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622425)\d{11}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;兰州银行&quot;,
    bankCode: &quot;LZYH&quot;,
    patterns: [{
      reg: /^(622139|940040|628263)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621242|621538|621496)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;青岛银行&quot;,
    bankCode: &quot;QDCCB&quot;,
    patterns: [{
      reg: /^(621252|622146|940061|628239)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621419|623170)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;秦皇岛市商业银行&quot;,
    bankCode: &quot;QHDCCB&quot;,
    patterns: [{
      reg: /^(62249802|94004602)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621237|623003)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;青海银行&quot;,
    bankCode: &quot;BOQH&quot;,
    patterns: [{
      reg: /^(622310|940068)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622817|628287|625959)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(62536601)\d{8}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;台州银行&quot;,
    bankCode: &quot;TZCB&quot;,
    patterns: [{
      reg: /^(622427)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940069)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(623039)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622321|628273)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(625001)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }]
  }, {
    bankName: &quot;长沙银行&quot;,
    bankCode: &quot;CSCB&quot;,
    patterns: [{
      reg: /^(694301)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940071|622368|621446)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625901|622898|622900|628281|628282|622806|628283)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(620519)\d{13}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;泉州银行&quot;,
    bankCode: &quot;BOQZ&quot;,
    patterns: [{
      reg: /^(683970|940074)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622370)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621437)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628319)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;包商银行&quot;,
    bankCode: &quot;BSB&quot;,
    patterns: [{
      reg: /^(622336|621760)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622165)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622315|625950|628295)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;龙江银行&quot;,
    bankCode: &quot;DAQINGB&quot;,
    patterns: [{
      reg: /^(621037|621097|621588|622977)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(62321601)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622860)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622644|628333)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;上海农商银行&quot;,
    bankCode: &quot;SHRCB&quot;,
    patterns: [{
      reg: /^(622478|940013|621495)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625500)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(622611|622722|628211|625989)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;浙江泰隆商业银行&quot;,
    bankCode: &quot;ZJQL&quot;,
    patterns: [{
      reg: /^(622717)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(628275|622565|622287)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;内蒙古银行&quot;,
    bankCode: &quot;H3CB&quot;,
    patterns: [{
      reg: /^(622147|621633)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628252)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;广西北部湾银行&quot;,
    bankCode: &quot;BGB&quot;,
    patterns: [{
      reg: /^(623001)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628227)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(622335)\d{10}$/g,
      cardType: &quot;CC&quot;
       }
]
  }, {
    bankName: &quot;桂林银行&quot;,
    bankCode: &quot;GLBANK&quot;,
    patterns: [{
      reg: /^(621456)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621562)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628219)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;龙江银行&quot;,
    bankCode: &quot;DAQINGB&quot;,
    patterns: [{
      reg: /^(621037|621097|621588|622977)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(62321601)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622475|622860)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625588)\d{10}$/g,
      cardType: &quot;SCC&quot;
    }, {
      reg: /^(622270|628368|625090|622644|628333)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;成都农村商业银行&quot;,
    bankCode: &quot;CDRCB&quot;,
    patterns: [{
      reg: /^(623088)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622829|628301|622808|628308)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;福建省农村信用社联合社&quot;,
    bankCode: &quot;FJNX&quot;,
    patterns: [{
      reg: /^(622127|622184|621701|621251|621589|623036)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628232|622802|622290)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;天津农村商业银行&quot;,
    bankCode: &quot;TRCB&quot;,
    patterns: [{
      reg: /^(622531|622329)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622829|628301)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;江苏省农村信用社联合社&quot;,
    bankCode: &quot;JSRCU&quot;,
    patterns: [{
      reg: /^(621578|623066|622452|622324)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622815|622816|628226)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;湖南农村信用社联合社&quot;,
    bankCode: &quot;SLH&quot;,
    patterns: [{
      reg: /^(622906|628386|625519|625506)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;江西省农村信用社联合社&quot;,
    bankCode: &quot;JXNCX&quot;,
    patterns: [{
      reg: /^(621592)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628392)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;商丘市商业银行&quot;,
    bankCode: &quot;SCBBANK&quot;,
    patterns: [{
      reg: /^(621748)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628271)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;华融湘江银行&quot;,
    bankCode: &quot;HRXJB&quot;,
    patterns: [{
      reg: /^(621366|621388)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628328)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;衡水市商业银行&quot;,
    bankCode: &quot;HSBK&quot;,
    patterns: [{
      reg: /^(621239|623068)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;重庆南川石银村镇银行&quot;,
    bankCode: &quot;CQNCSYCZ&quot;,
    patterns: [{
      reg: /^(621653004)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;湖南省农村信用社联合社&quot;,
    bankCode: &quot;HNRCC&quot;,
    patterns: [{
      reg: /^(622169|621519|621539|623090)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;邢台银行&quot;,
    bankCode: &quot;XTB&quot;,
    patterns: [{
      reg: /^(621238|620528)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;临汾市尧都区农村信用合作联社&quot;,
    bankCode: &quot;LPRDNCXYS&quot;,
    patterns: [{
      reg: /^(628382|625158)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;东营银行&quot;,
    bankCode: &quot;DYCCB&quot;,
    patterns: [{
      reg: /^(621004)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628217)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;上饶银行&quot;,
    bankCode: &quot;SRBANK&quot;,
    patterns: [{
      reg: /^(621416)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628217)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;德州银行&quot;,
    bankCode: &quot;DZBANK&quot;,
    patterns: [{
      reg: /^(622937)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628397)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;承德银行&quot;,
    bankCode: &quot;CDB&quot;,
    patterns: [{
      reg: /^(628229)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;云南省农村信用社&quot;,
    bankCode: &quot;YNRCC&quot;,
    patterns: [{
      reg: /^(622469|628307)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;柳州银行&quot;,
    bankCode: &quot;LZCCB&quot;,
    patterns: [{
      reg: /^(622292|622291|621412)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622880|622881)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(62829)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;威海市商业银行&quot;,
    bankCode: &quot;WHSYBANK&quot;,
    patterns: [{
      reg: /^(623102)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628234)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;湖州银行&quot;,
    bankCode: &quot;HZBANK&quot;,
    patterns: [{
      reg: /^(628306)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;潍坊银行&quot;,
    bankCode: &quot;BANKWF&quot;,
    patterns: [{
      reg: /^(622391|940072)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628391)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;赣州银行&quot;,
    bankCode: &quot;GZB&quot;,
    patterns: [{
      reg: /^(622967|940073)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628233)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;日照银行&quot;,
    bankCode: &quot;RZGWYBANK&quot;,
    patterns: [{
      reg: /^(628257)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;南昌银行&quot;,
    bankCode: &quot;NCB&quot;,
    patterns: [{
      reg: /^(621269|622275)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940006)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628305)\d{11}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;贵阳银行&quot;,
    bankCode: &quot;GYCB&quot;,
    patterns: [{
      reg: /^(622133|621735)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(888)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628213)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;锦州银行&quot;,
    bankCode: &quot;BOJZ&quot;,
    patterns: [{
      reg: /^(622990|940003)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628261)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;齐商银行&quot;,
    bankCode: &quot;QSBANK&quot;,
    patterns: [{
      reg: /^(622311|940057)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628311)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;珠海华润银行&quot;,
    bankCode: &quot;RBOZ&quot;,
    patterns: [{
      reg: /^(622363|940048)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628270)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;葫芦岛市商业银行&quot;,
    bankCode: &quot;HLDCCB&quot;,
    patterns: [{
      reg: /^(622398|940054)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;宜昌市商业银行&quot;,
    bankCode: &quot;HBC&quot;,
    patterns: [{
      reg: /^(940055)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622397)\d{11}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;杭州商业银行&quot;,
    bankCode: &quot;HZCB&quot;,
    patterns: [{
      reg: /^(603367|622878)\d{12}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622397)\d{11}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;苏州市商业银行&quot;,
    bankCode: &quot;JSBANK&quot;,
    patterns: [{
      reg: /^(603506)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;辽阳银行&quot;,
    bankCode: &quot;LYCB&quot;,
    patterns: [{
      reg: /^(622399|940043)\d{11}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;洛阳银行&quot;,
    bankCode: &quot;LYB&quot;,
    patterns: [{
      reg: /^(622420|940041)\d{11}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;焦作市商业银行&quot;,
    bankCode: &quot;JZCBANK&quot;,
    patterns: [{
      reg: /^(622338)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(940032)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;镇江市商业银行&quot;,
    bankCode: &quot;ZJCCB&quot;,
    patterns: [{
      reg: /^(622394|940025)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;法国兴业银行&quot;,
    bankCode: &quot;FGXYBANK&quot;,
    patterns: [{
      reg: /^(621245)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;大华银行&quot;,
    bankCode: &quot;DYBANK&quot;,
    patterns: [{
      reg: /^(621328)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;企业银行&quot;,
    bankCode: &quot;DIYEBANK&quot;,
    patterns: [{
      reg: /^(621651)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;华侨银行&quot;,
    bankCode: &quot;HQBANK&quot;,
    patterns: [{
      reg: /^(621077)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;恒生银行&quot;,
    bankCode: &quot;HSB&quot;,
    patterns: [{
      reg: /^(622409|621441)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622410|621440)\d{11}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622950|622951)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625026|625024|622376|622378|622377|625092)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;临沂商业银行&quot;,
    bankCode: &quot;LSB&quot;,
    patterns: [{
      reg: /^(622359|940066)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;烟台商业银行&quot;,
    bankCode: &quot;YTCB&quot;,
    patterns: [{
      reg: /^(622886)\d{10}$/g,
      cardType: &quot;DC&quot;
    }]
  }, {
    bankName: &quot;齐鲁银行&quot;,
    bankCode: &quot;QLB&quot;,
    patterns: [{
      reg: /^(940008|622379)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(628379)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;BC卡公司&quot;,
    bankCode: &quot;BCCC&quot;,
    patterns: [{
      reg: /^(620011|620027|620031|620039|620103|620106|620120|620123|620125|620220|620278|620812|621006|621011|621012|621020|621023|621025|621027|621031|620132|621039|621078|621220|621003)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625003|625011|625012|625020|625023|625025|625027|625031|621032|625039|625078|625079|625103|625106|625006|625112|625120|625123|625125|625127|625131|625032|625139|625178|625179|625220|625320|625111|625132|625244)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;集友银行&quot;,
    bankCode: &quot;CYB&quot;,
    patterns: [{
      reg: /^(622355|623042)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(621043|621742)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622352|622353|625048|625053|625060)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(620206|620207)\d{10}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;大丰银行&quot;,
    bankCode: &quot;TFB&quot;,
    patterns: [{
      reg: /^(622547|622548|622546)\d{13}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(625198|625196|625147)\d{10}$/g,
      cardType: &quot;CC&quot;
    }, {
      reg: /^(620072)\d{13}$/g,
      cardType: &quot;PC&quot;
    }, {
      reg: /^(620204|620205)\d{10}$/g,
      cardType: &quot;PC&quot;
    }]
  }, {
    bankName: &quot;AEON信贷财务亚洲有限公司&quot;,
    bankCode: &quot;AEON&quot;,
    patterns: [{
      reg: /^(621064|622941|622974)\d{10}$/g,
      cardType: &quot;DC&quot;
    }, {
      reg: /^(622493)\d{10}$/g,
      cardType: &quot;CC&quot;
    }]
  }, {
    bankName: &quot;澳门BDA&quot;,
    bankCode: &quot;MABDA&quot;,
    patterns: [{
      reg: /^(621274|621324)\d{13}$/g,
      cardType: &quot;DC&quot;
    }]
  }]


        //验证银行卡号
        $(&quot;input[name='bankNum']&quot;).blur(function () {
            var num = $(this).val();
            //去掉空格，因为input框中设置了自动空格，如果input框中没有设置自动空格可省略这句代码
            num = num.replace(/\s/g, &quot;&quot;);
            //判断卡号是否正确
            for (var i = 0,len=bankcardList.length; i &lt; len; i++) {
                for (var j = 0,regLen = bankcardList[i].patterns.length; j &lt; regLen; j++) {
                    var reg = bankcardList[i].patterns[j].reg.test(num);
                    if(reg){
                       alert(&quot;输入的是&quot;+bankcardList[i].bankName+&quot;的卡号&quot;)
                        return ;
                    }
                }
            }
        });
</code></pre>
]]></content>
    </entry>
</feed>